{
    "buses": [],
    "num_servers": 1,
    "languages": [
        "dockerfile"
    ],
    "dbs": [],
    "num_services": 0,
    "avg_size_service": 5.0,
    "servers": [
        "node"
    ],
    "structure": {
        "num_services": 0,
        "detected_dbs": {
            "services": [],
            "shared_dbs": false,
            "num": 0,
            "names": []
        },
        "services": [],
        "path": []
    },
    "monitors": [],
    "num_buses": 0,
    "images": [
        "node"
    ],
    "gates": [],
    "num_gates": 0,
    "num_langs": 1,
    "langs": [
        "dockerfile"
    ],
    "url": "git://github.com/spurin/docker-hexo.git",
    "num_discos": 0,
    "num_files": 2,
    "files": [],
    "shared_dbs": false,
    "num_monitors": 0,
    "name": "spurin/docker-hexo",
    "num_dbs": 0,
    "discos": [],
    "dockers": [
        {
            "langs": [],
            "dbs": [],
            "path": "/Dockerfile",
            "servers": [
                "node"
            ],
            "monitors": [],
            "keywords": [
                "apt",
                "get",
                "install",
                "cli",
                "git"
            ],
            "cmd": "if [ \"$(ls -A /app)\" ]; then     echo \"***** App directory exists and has content, continuing *****\";   else     echo \"***** App directory is empty, initialising with hexo and hexo-admin *****\" &&     hexo init &&     npm install &&     npm install --save hexo-admin;   fi;   if [ ! -f /app/requirements.txt ]; then     echo \"***** App directory contains no requirements.txt file, continuing *****\";   else     echo \"***** App directory contains a requirements.txt file, installing npm requirements *****\";     cat /app/requirements.txt | xargs npm --prefer-offline install --save;   fi;   if [ \"$(ls -A /app/.ssh 2>/dev/null)\" ]; then     echo \"***** App .ssh directory exists and has content, continuing *****\";   else     echo \"***** App .ssh directory is empty, initialising ssh key and configuring known_hosts for common git repositories (github/gitlab) *****\" &&     rm -rf ~/.ssh/* &&     ssh-keygen -t rsa -f ~/.ssh/id_rsa -q -P \"\" &&     ssh-keyscan github.com > ~/.ssh/known_hosts 2>/dev/null &&     ssh-keyscan gitlab.com >> ~/.ssh/known_hosts 2>/dev/null &&     cp -r ~/.ssh /app;   fi;   echo \"***** Running git config, user = ${GIT_USER}, email = ${GIT_EMAIL} *****\" &&   git config --global user.email ${GIT_EMAIL} &&   git config --global user.name ${GIT_USER} &&   echo \"***** Copying .ssh from App directory and setting permissions *****\" &&   cp -r /app/.ssh ~/ &&   chmod 600 ~/.ssh/id_rsa &&   chmod 600 ~/.ssh/id_rsa.pub &&   chmod 700 ~/.ssh &&   echo \"***** Contents of public ssh key (for deploy) - *****\" &&   cat ~/.ssh/id_rsa.pub &&   echo \"***** Starting server on port ${HEXO_SERVER_PORT} *****\" &&   hexo server -d -p ${HEXO_SERVER_PORT}",
            "buses": [],
            "from_full": "node:13-slim",
            "from": "node",
            "discos": [],
            "cmd_keywords": [
                "ssh",
                "app",
                "echo",
                "git",
                "directory"
            ],
            "gates": []
        }
    ],
    "num_dockers": 1,
    "size": 5
}