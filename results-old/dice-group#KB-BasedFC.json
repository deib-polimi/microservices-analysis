{
    "files": [
        {
            "monitors": [],
            "discos": [],
            "buses": [
                "amqp",
                "rabbitmq"
            ],
            "gates": [],
            "path": "/factchecking-service/pom.xml",
            "dbs": [],
            "servers": [
                "glassfish"
            ]
        },
        {
            "monitors": [],
            "discos": [],
            "buses": [],
            "gates": [],
            "path": "/factchecking-benchmark/pom.xml",
            "dbs": [],
            "servers": [
                "spring"
            ]
        },
        {
            "monitors": [],
            "discos": [],
            "buses": [],
            "gates": [],
            "path": "/factchecking-demo/package.json",
            "dbs": [],
            "servers": [
                "node"
            ]
        }
    ],
    "num_services": 12,
    "discos": [],
    "dbs": [],
    "avg_size_service": 438.5833333333333,
    "name": "dice-group/KB-BasedFC",
    "num_buses": 2,
    "num_langs": 2,
    "monitors": [],
    "num_files": 16,
    "langs": [
        "java",
        "python"
    ],
    "num_gates": 0,
    "dockers": [
        {
            "monitors": [],
            "discos": [],
            "dbs": [],
            "gates": [],
            "path": "/services/Jaccard/Dockerfile",
            "cmd_keywords": [
                "jaccard",
                "run",
                "service",
                "nameko"
            ],
            "from_full": "enriozuni/docker_ubuntu_python27_gpp",
            "servers": [],
            "buses": [],
            "langs": [
                "python"
            ],
            "cmd": "nameko run jaccard_service",
            "from": "enriozuni/docker_ubuntu_python27_gpp",
            "keywords": [
                "setup",
                "python",
                "mkdir",
                "install",
                "jaccard"
            ]
        },
        {
            "monitors": [],
            "discos": [],
            "dbs": [],
            "gates": [],
            "path": "/services/Pathent/Dockerfile",
            "cmd_keywords": [
                "service",
                "run",
                "pathent",
                "nameko"
            ],
            "from_full": "enriozuni/docker_ubuntu_python27_gpp",
            "servers": [],
            "buses": [],
            "langs": [
                "python"
            ],
            "cmd": "nameko run pathent_service",
            "from": "enriozuni/docker_ubuntu_python27_gpp",
            "keywords": [
                "setup",
                "python",
                "mkdir",
                "pathent",
                "install"
            ]
        },
        {
            "monitors": [],
            "discos": [],
            "dbs": [],
            "gates": [],
            "path": "/services/DegreeProduct/Dockerfile",
            "cmd_keywords": [
                "service",
                "run",
                "degree",
                "product",
                "nameko"
            ],
            "from_full": "enriozuni/docker_ubuntu_python27_gpp",
            "servers": [],
            "buses": [],
            "langs": [
                "python"
            ],
            "cmd": "nameko run degree_product_service",
            "from": "enriozuni/docker_ubuntu_python27_gpp",
            "keywords": [
                "setup",
                "python",
                "mkdir",
                "product",
                "install"
            ]
        },
        {
            "monitors": [],
            "discos": [],
            "dbs": [],
            "gates": [],
            "path": "/services/AdamicAdar/Dockerfile",
            "cmd_keywords": [
                "adar",
                "run",
                "adamic",
                "service",
                "nameko"
            ],
            "from_full": "enriozuni/docker_ubuntu_python27_gpp",
            "servers": [],
            "buses": [],
            "langs": [
                "python"
            ],
            "cmd": "nameko run adamic_adar_service",
            "from": "enriozuni/docker_ubuntu_python27_gpp",
            "keywords": [
                "setup",
                "python",
                "mkdir",
                "adar",
                "install"
            ]
        },
        {
            "monitors": [],
            "discos": [],
            "dbs": [],
            "gates": [],
            "path": "/services/Simrank/Dockerfile",
            "cmd_keywords": [
                "simrank",
                "run",
                "service",
                "nameko"
            ],
            "from_full": "enriozuni/docker_ubuntu_python27_gpp",
            "servers": [],
            "buses": [],
            "langs": [
                "python"
            ],
            "cmd": "nameko run simrank_service",
            "from": "enriozuni/docker_ubuntu_python27_gpp",
            "keywords": [
                "setup",
                "python",
                "mkdir",
                "simrank",
                "install"
            ]
        },
        {
            "monitors": [],
            "discos": [],
            "dbs": [],
            "gates": [],
            "path": "/services/Katz/Dockerfile",
            "cmd_keywords": [
                "service",
                "run",
                "katz",
                "nameko"
            ],
            "from_full": "enriozuni/docker_ubuntu_python27_gpp",
            "servers": [],
            "buses": [],
            "langs": [
                "python"
            ],
            "cmd": "nameko run katz_service",
            "from": "enriozuni/docker_ubuntu_python27_gpp",
            "keywords": [
                "setup",
                "python",
                "mkdir",
                "katz",
                "install"
            ]
        },
        {
            "monitors": [],
            "discos": [],
            "dbs": [],
            "gates": [],
            "path": "/services/Relklinker/Dockerfile",
            "cmd_keywords": [
                "run",
                "service",
                "relklinker",
                "nameko"
            ],
            "from_full": "enriozuni/docker_ubuntu_python27_gpp",
            "servers": [],
            "buses": [],
            "langs": [
                "python"
            ],
            "cmd": "nameko run relklinker_service",
            "from": "enriozuni/docker_ubuntu_python27_gpp",
            "keywords": [
                "setup",
                "python",
                "mkdir",
                "relklinker",
                "install"
            ]
        },
        {
            "monitors": [],
            "discos": [],
            "dbs": [],
            "gates": [],
            "path": "/services/Predpath/Dockerfile",
            "cmd_keywords": [
                "predpath",
                "run",
                "service",
                "nameko"
            ],
            "from_full": "enriozuni/docker_ubuntu_python27_gpp",
            "servers": [],
            "buses": [],
            "langs": [
                "python"
            ],
            "cmd": "nameko run predpath_service",
            "from": "enriozuni/docker_ubuntu_python27_gpp",
            "keywords": [
                "setup",
                "python",
                "mkdir",
                "install",
                "predpath"
            ]
        },
        {
            "monitors": [],
            "discos": [],
            "dbs": [],
            "gates": [],
            "path": "/services/Klinker/Dockerfile",
            "cmd_keywords": [
                "klinker",
                "run",
                "service",
                "nameko"
            ],
            "from_full": "enriozuni/docker_ubuntu_python27_gpp",
            "servers": [],
            "buses": [],
            "langs": [
                "python"
            ],
            "cmd": "nameko run klinker_service",
            "from": "enriozuni/docker_ubuntu_python27_gpp",
            "keywords": [
                "setup",
                "python",
                "mkdir",
                "install",
                "klinker"
            ]
        },
        {
            "monitors": [],
            "discos": [],
            "dbs": [],
            "gates": [],
            "path": "/services/Pra/Dockerfile",
            "cmd_keywords": [
                "service",
                "run",
                "pra",
                "nameko"
            ],
            "from_full": "enriozuni/docker_ubuntu_python27_gpp",
            "servers": [],
            "buses": [],
            "langs": [
                "python"
            ],
            "cmd": "nameko run pra_service",
            "from": "enriozuni/docker_ubuntu_python27_gpp",
            "keywords": [
                "setup",
                "python",
                "mkdir",
                "pra",
                "install"
            ]
        },
        {
            "monitors": [],
            "discos": [],
            "dbs": [],
            "gates": [],
            "path": "/services/Kstream/Dockerfile",
            "cmd_keywords": [
                "run",
                "service",
                "kstream",
                "nameko"
            ],
            "from_full": "enriozuni/docker_ubuntu_python27_gpp",
            "servers": [],
            "buses": [],
            "langs": [
                "python"
            ],
            "cmd": "nameko run kstream_service",
            "from": "enriozuni/docker_ubuntu_python27_gpp",
            "keywords": [
                "setup",
                "python",
                "mkdir",
                "kstream",
                "install"
            ]
        },
        {
            "monitors": [],
            "discos": [],
            "dbs": [],
            "gates": [],
            "path": "/factchecking-benchmark/Dockerfile",
            "cmd_keywords": [
                "benchmark",
                "org",
                "fcsystemadapter",
                "factchecking",
                "dice"
            ],
            "from_full": "java",
            "servers": [],
            "buses": [],
            "langs": [
                "java"
            ],
            "cmd": "java -cp factchecking-benchmark.jar org.hobbit.core.run.ComponentStarter org.dice.benchmark.component.FCSystemAdapter",
            "from": "java",
            "keywords": []
        }
    ],
    "structure": {
        "path": "/services/docker-compose.yml",
        "detected_dbs": {
            "names": [],
            "services": [],
            "num": 0,
            "shared_dbs": false
        },
        "num_services": 12,
        "services": [
            {
                "monitors": [],
                "image": "git.project-hobbit.eu",
                "discos": [],
                "buses": [],
                "gates": [],
                "name": "adamic_adar",
                "depends_on": [],
                "dbs": [],
                "servers": [],
                "image_full": "git.project-hobbit.eu:4567/factcheckingdemo/factchecking-benchmark/adamicadar-microservice"
            },
            {
                "monitors": [],
                "image": "git.project-hobbit.eu",
                "discos": [],
                "buses": [],
                "gates": [],
                "name": "pra",
                "depends_on": [],
                "dbs": [],
                "servers": [],
                "image_full": "git.project-hobbit.eu:4567/factcheckingdemo/factchecking-benchmark/pra-microservice"
            },
            {
                "monitors": [],
                "image": "git.project-hobbit.eu",
                "discos": [],
                "buses": [],
                "gates": [],
                "name": "pathent",
                "depends_on": [],
                "dbs": [],
                "servers": [],
                "image_full": "git.project-hobbit.eu:4567/factcheckingdemo/factchecking-benchmark/pathent-microservice"
            },
            {
                "monitors": [],
                "image": "git.project-hobbit.eu",
                "discos": [],
                "buses": [],
                "gates": [],
                "name": "simrank",
                "depends_on": [],
                "dbs": [],
                "servers": [],
                "image_full": "git.project-hobbit.eu:4567/factcheckingdemo/factchecking-benchmark/simrank-microservice"
            },
            {
                "monitors": [],
                "image": "git.project-hobbit.eu",
                "discos": [],
                "buses": [],
                "gates": [],
                "name": "klinker",
                "depends_on": [],
                "dbs": [],
                "servers": [],
                "image_full": "git.project-hobbit.eu:4567/factcheckingdemo/factchecking-benchmark/klinker-microservice"
            },
            {
                "monitors": [],
                "image": "git.project-hobbit.eu",
                "discos": [],
                "buses": [],
                "gates": [],
                "name": "relklinker",
                "depends_on": [],
                "dbs": [],
                "servers": [],
                "image_full": "git.project-hobbit.eu:4567/factcheckingdemo/factchecking-benchmark/relklinker-microservice"
            },
            {
                "monitors": [],
                "image": "git.project-hobbit.eu",
                "discos": [],
                "buses": [],
                "gates": [],
                "name": "degree_product",
                "depends_on": [],
                "dbs": [],
                "servers": [],
                "image_full": "git.project-hobbit.eu:4567/factcheckingdemo/factchecking-benchmark/degreeproduct-microservice"
            },
            {
                "monitors": [],
                "image": "git.project-hobbit.eu",
                "discos": [],
                "buses": [],
                "gates": [],
                "name": "kstream",
                "depends_on": [],
                "dbs": [],
                "servers": [],
                "image_full": "git.project-hobbit.eu:4567/factcheckingdemo/factchecking-benchmark/kstream-microservice"
            },
            {
                "monitors": [],
                "image": "git.project-hobbit.eu",
                "discos": [],
                "buses": [],
                "gates": [],
                "name": "predpath",
                "depends_on": [],
                "dbs": [],
                "servers": [],
                "image_full": "git.project-hobbit.eu:4567/factcheckingdemo/factchecking-benchmark/predpath-microservice"
            },
            {
                "monitors": [],
                "image": "git.project-hobbit.eu",
                "discos": [],
                "buses": [],
                "gates": [],
                "name": "katz",
                "depends_on": [],
                "dbs": [],
                "servers": [],
                "image_full": "git.project-hobbit.eu:4567/factcheckingdemo/factchecking-benchmark/katz-microservice"
            },
            {
                "monitors": [],
                "image": "rabbitmq",
                "discos": [],
                "buses": [
                    "rabbitmq"
                ],
                "gates": [],
                "name": "rabbitmq",
                "depends_on": [],
                "dbs": [],
                "servers": [],
                "image_full": "rabbitmq:3-management"
            },
            {
                "monitors": [],
                "image": "git.project-hobbit.eu",
                "discos": [],
                "buses": [],
                "gates": [],
                "name": "jaccard",
                "depends_on": [],
                "dbs": [],
                "servers": [],
                "image_full": "git.project-hobbit.eu:4567/factcheckingdemo/factchecking-benchmark/jaccard-microservice"
            }
        ]
    },
    "size": 5263,
    "num_discos": 0,
    "languages": [
        "python"
    ],
    "url": "git://github.com/dice-group/KB-BasedFC.git",
    "buses": [
        "amqp",
        "rabbitmq"
    ],
    "gates": [],
    "shared_dbs": false,
    "servers": [
        "node",
        "glassfish",
        "spring"
    ],
    "images": [
        "java",
        "enriozuni/docker_ubuntu_python27_gpp"
    ],
    "num_servers": 3,
    "num_dockers": 12,
    "num_monitors": 0,
    "num_dbs": 0
}