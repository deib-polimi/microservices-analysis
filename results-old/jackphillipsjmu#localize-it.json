{
    "size": 2147,
    "num_files": 15,
    "dockers": [
        {
            "from_full": "docker.elastic.co/kibana/kibana:${ELK_VERSION}",
            "gates": [],
            "discos": [],
            "cmd": "",
            "monitors": [],
            "keywords": [],
            "from": "docker.elastic.co/kibana/kibana",
            "langs": [],
            "cmd_keywords": [],
            "servers": [],
            "buses": [],
            "path": "/elasticsearch-kibana/resources/docker/kibana/Dockerfile",
            "dbs": []
        },
        {
            "from_full": "docker.elastic.co/elasticsearch/elasticsearch:${ELK_VERSION}",
            "gates": [],
            "discos": [],
            "cmd": "",
            "monitors": [],
            "keywords": [],
            "from": "docker.elastic.co/elasticsearch/elasticsearch",
            "langs": [],
            "cmd_keywords": [],
            "servers": [],
            "buses": [],
            "path": "/elasticsearch-kibana/resources/docker/elasticsearch/Dockerfile",
            "dbs": []
        },
        {
            "from_full": "carsharing/alpine-oraclejdk8-bash:latest",
            "gates": [],
            "discos": [],
            "cmd": "",
            "monitors": [],
            "keywords": [
                "jar",
                "touch",
                "app"
            ],
            "from": "carsharing/alpine-oraclejdk8-bash",
            "langs": [
                "bash"
            ],
            "cmd_keywords": [],
            "servers": [],
            "buses": [],
            "path": "/simple-springboot-docker/com-example-microservice/Dockerfile",
            "dbs": []
        }
    ],
    "avg_size_service": 715.6666666666666,
    "num_services": 1,
    "servers": [
        "spring"
    ],
    "num_discos": 1,
    "num_langs": 3,
    "discos": [
        "avro"
    ],
    "buses": [
        "kafka"
    ],
    "url": "git://github.com/jackphillipsjmu/localize-it.git",
    "structure": {
        "num_services": 1,
        "path": "/simple-springboot-docker/com-example-microservice/docker-compose.yml",
        "services": [
            {
                "servers": [],
                "image": ".",
                "depends_on": [],
                "name": "microservice",
                "dbs": [],
                "gates": [],
                "buses": [],
                "discos": [],
                "image_full": ".",
                "monitors": []
            }
        ],
        "detected_dbs": {
            "num": 0,
            "names": [],
            "shared_dbs": false,
            "services": []
        }
    },
    "shared_dbs": false,
    "gates": [],
    "num_gates": 0,
    "name": "jackphillipsjmu/localize-it",
    "num_buses": 1,
    "num_servers": 1,
    "num_dbs": 1,
    "monitors": [],
    "langs": [
        "bash",
        "java",
        "shell"
    ],
    "dbs": [
        "sql"
    ],
    "files": [
        {
            "servers": [],
            "gates": [],
            "discos": [],
            "dbs": [
                "sql"
            ],
            "buses": [],
            "path": "/simple-s3-lambda/com-dna-challenge/build.gradle",
            "monitors": []
        },
        {
            "servers": [],
            "gates": [],
            "discos": [],
            "dbs": [],
            "buses": [],
            "path": "/simple-s3-lambda/com-dna-challenge/settings.gradle",
            "monitors": []
        },
        {
            "servers": [
                "spring"
            ],
            "gates": [],
            "discos": [
                "avro"
            ],
            "dbs": [],
            "buses": [
                "kafka"
            ],
            "path": "/weather-alerts/com-alert-microservice/build.gradle",
            "monitors": []
        },
        {
            "servers": [],
            "gates": [],
            "discos": [],
            "dbs": [],
            "buses": [],
            "path": "/weather-alerts/com-alert-microservice/settings.gradle",
            "monitors": []
        },
        {
            "servers": [],
            "gates": [],
            "discos": [],
            "dbs": [],
            "buses": [],
            "path": "/weather-alerts/com-alert-lambda/build.gradle",
            "monitors": []
        },
        {
            "servers": [],
            "gates": [],
            "discos": [],
            "dbs": [],
            "buses": [],
            "path": "/weather-alerts/com-alert-lambda/settings.gradle",
            "monitors": []
        },
        {
            "servers": [],
            "gates": [],
            "discos": [],
            "dbs": [
                "sql"
            ],
            "buses": [],
            "path": "/spark-s3/spark-to-s3/build.gradle",
            "monitors": []
        },
        {
            "servers": [],
            "gates": [],
            "discos": [],
            "dbs": [],
            "buses": [],
            "path": "/spark-s3/spark-to-s3/settings.gradle",
            "monitors": []
        },
        {
            "servers": [
                "spring"
            ],
            "gates": [],
            "discos": [],
            "dbs": [],
            "buses": [],
            "path": "/simple-springboot-docker/com-example-microservice/build.gradle",
            "monitors": []
        },
        {
            "servers": [],
            "gates": [],
            "discos": [],
            "dbs": [],
            "buses": [],
            "path": "/simple-springboot-docker/com-example-microservice/settings.gradle",
            "monitors": []
        },
        {
            "servers": [],
            "gates": [],
            "discos": [],
            "dbs": [],
            "buses": [],
            "path": "/jenkins-doom-react/resources/web/simple-node-js-react-npm-app/package.json",
            "monitors": []
        }
    ],
    "images": [
        "docker.elastic.co/elasticsearch/elasticsearch",
        "carsharing/alpine-oraclejdk8-bash",
        "docker.elastic.co/kibana/kibana"
    ],
    "num_dockers": 3,
    "languages": [
        "java",
        "shell"
    ],
    "num_monitors": 0
}