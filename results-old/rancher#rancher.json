{
    "discos": [
        "etcd"
    ],
    "avg_size_service": 2798.714285714286,
    "buses": [],
    "num_gates": 1,
    "name": "rancher/rancher",
    "structure": {
        "path": "/tests/validation/tests/v3_api/resource/airgap/basic-registry/docker-compose.yml",
        "services": [],
        "detected_dbs": {
            "names": [],
            "num": 0,
            "shared_dbs": false,
            "services": []
        },
        "num_services": 0
    },
    "dbs": [],
    "dockers": [
        {
            "langs": [],
            "cmd_keywords": [
                "kontainer",
                "engine"
            ],
            "from_full": "ubuntu:16.04",
            "buses": [],
            "monitors": [],
            "from": "ubuntu",
            "keywords": [],
            "gates": [],
            "path": "/pkg/kontainer-engine/package/Dockerfile",
            "dbs": [],
            "discos": [],
            "cmd": "kontainer-engine",
            "servers": []
        },
        {
            "langs": [
                "bash"
            ],
            "cmd_keywords": [],
            "from_full": "ubuntu:18.04",
            "buses": [],
            "monitors": [],
            "from": "ubuntu",
            "keywords": [
                "rancher",
                "bin",
                "usr",
                "curl",
                "linode"
            ],
            "gates": [],
            "path": "/package/Dockerfile",
            "dbs": [],
            "discos": [
                "etcd"
            ],
            "cmd": "",
            "servers": []
        },
        {
            "langs": [
                "python"
            ],
            "cmd_keywords": [
                "start",
                "app"
            ],
            "from_full": "ubuntu:16.04",
            "buses": [],
            "monitors": [],
            "from": "ubuntu",
            "keywords": [
                "python",
                "sshd",
                "install",
                "permitrootlogin",
                "get"
            ],
            "gates": [],
            "path": "/tests/validation/images/container-utils/Dockerfile",
            "dbs": [],
            "discos": [],
            "cmd": "/app/start.sh",
            "servers": []
        },
        {
            "langs": [],
            "cmd_keywords": [
                "daemon",
                "nginx",
                "off"
            ],
            "from_full": "nginx",
            "buses": [],
            "monitors": [],
            "from": "nginx",
            "keywords": [
                "get",
                "apt",
                "install",
                "chmod",
                "iptables"
            ],
            "gates": [
                "nginx"
            ],
            "path": "/tests/validation/tests/Dockerfiles/testcontainer/Dockerfile",
            "dbs": [],
            "discos": [],
            "cmd": "nginx -g daemon off;",
            "servers": []
        },
        {
            "langs": [],
            "cmd_keywords": [
                "nginx",
                "content",
                "log",
                "logs",
                "access"
            ],
            "from_full": "mcr.microsoft.com/windows/servercore:$SERVERCORE",
            "buses": [],
            "monitors": [],
            "from": "mcr.microsoft.com/windows/servercore",
            "keywords": [
                "nginx",
                "env",
                "zip",
                "programfiles",
                "path"
            ],
            "gates": [
                "nginx"
            ],
            "path": "/tests/validation/tests/Dockerfiles/windows/nginx/Dockerfile",
            "dbs": [],
            "discos": [],
            "cmd": "Start-Process -NoNewWindow -FilePath nginx.exe ; \tAdd-Content logs\\access.log 'nginx started...' ; \tGet-Content -Wait logs\\access.log",
            "servers": []
        },
        {
            "langs": [],
            "cmd_keywords": [
                "exe",
                "svc",
                "svcm"
            ],
            "from_full": "mcr.microsoft.com/windows/servercore:$SERVERCORE",
            "buses": [],
            "monitors": [],
            "from": "mcr.microsoft.com/windows/servercore",
            "keywords": [
                "exe",
                "servicemonitor",
                "invoke",
                "net",
                "server"
            ],
            "gates": [],
            "path": "/tests/validation/tests/Dockerfiles/windows/testcontainer/Dockerfile",
            "dbs": [],
            "discos": [],
            "cmd": "c:/svcm.exe w3svc",
            "servers": []
        },
        {
            "langs": [],
            "cmd_keywords": [
                "process",
                "exe",
                "start",
                "node",
                "wait"
            ],
            "from_full": "mcr.microsoft.com/powershell:nanoserver-$SERVERCORE",
            "buses": [],
            "monitors": [],
            "from": "mcr.microsoft.com/powershell",
            "keywords": [
                "node",
                "write",
                "host",
                "zip",
                "path"
            ],
            "gates": [],
            "path": "/tests/validation/tests/Dockerfiles/windows/metrics/Dockerfile",
            "dbs": [],
            "discos": [],
            "cmd": "Start-Process -NoNewWindow -Wait -FilePath c:/nodejs/node.exe -ArgumentList c:/web/app.js",
            "servers": [
                "node"
            ]
        }
    ],
    "gates": [
        "nginx"
    ],
    "size": 19591,
    "num_monitors": 0,
    "images": [
        "nginx",
        "mcr.microsoft.com/windows/servercore",
        "mcr.microsoft.com/powershell",
        "ubuntu"
    ],
    "num_buses": 0,
    "num_services": 0,
    "servers": [
        "flask",
        "node"
    ],
    "shared_dbs": false,
    "monitors": [],
    "num_discos": 1,
    "languages": [
        "go",
        "python"
    ],
    "url": "git://github.com/rancher/rancher.git",
    "langs": [
        "python",
        "bash",
        "go"
    ],
    "num_dbs": 0,
    "num_servers": 2,
    "num_langs": 3,
    "files": [
        {
            "path": "/scripts/print-catalog-images/requirements.txt",
            "dbs": [],
            "discos": [],
            "servers": [],
            "buses": [],
            "monitors": [],
            "gates": []
        },
        {
            "path": "/tests/integration/requirements.txt",
            "dbs": [],
            "discos": [],
            "servers": [
                "flask"
            ],
            "buses": [],
            "monitors": [],
            "gates": []
        },
        {
            "path": "/tests/validation/requirements.txt",
            "dbs": [],
            "discos": [],
            "servers": [],
            "buses": [],
            "monitors": [],
            "gates": []
        },
        {
            "path": "/tests/validation/images/container-utils/requirements.txt",
            "dbs": [],
            "discos": [],
            "servers": [
                "flask"
            ],
            "buses": [],
            "monitors": [],
            "gates": []
        }
    ],
    "num_dockers": 7,
    "num_files": 12
}