{
    "size": 569,
    "avg_size_service": 284.5,
    "name": "muratkarakas/quarkus-ms-k8s",
    "languages": [
        "java"
    ],
    "servers": [
        "jboss",
        "spring"
    ],
    "num_dbs": 2,
    "images": [
        "alpine",
        "openjdk"
    ],
    "structure": {
        "path": "/benchmark/docker-compose.yml",
        "num_services": 5,
        "services": [
            {
                "depends_on": [
                    "db"
                ],
                "image_full": "go-post-service",
                "monitors": [],
                "name": "go",
                "image": "go-post-service",
                "servers": [],
                "buses": [],
                "dbs": [],
                "gates": [],
                "discos": []
            },
            {
                "depends_on": [
                    "db"
                ],
                "image_full": "quarkus-reactive-post-service",
                "monitors": [],
                "name": "rquarkus",
                "image": "quarkus-reactive-post-service",
                "servers": [],
                "buses": [],
                "dbs": [],
                "gates": [],
                "discos": []
            },
            {
                "depends_on": [],
                "image_full": "postgres",
                "monitors": [],
                "name": "db",
                "image": "postgres",
                "servers": [],
                "buses": [],
                "dbs": [],
                "gates": [],
                "discos": []
            },
            {
                "depends_on": [
                    "db"
                ],
                "image_full": "quarkus-post-service",
                "monitors": [],
                "name": "quarkus",
                "image": "quarkus-post-service",
                "servers": [],
                "buses": [],
                "dbs": [],
                "gates": [],
                "discos": []
            },
            {
                "depends_on": [
                    "db"
                ],
                "image_full": "sb-product-service",
                "monitors": [],
                "name": "sboot",
                "image": "sb-product-service",
                "servers": [],
                "buses": [],
                "dbs": [],
                "gates": [],
                "discos": []
            }
        ],
        "detected_dbs": {
            "services": [],
            "names": [],
            "shared_dbs": false,
            "num": 0
        }
    },
    "num_dockers": 2,
    "num_buses": 1,
    "num_services": 5,
    "dockers": [
        {
            "path": "/benchmark/sboot-product-service/src/main/docker/Dockerfile",
            "from": "openjdk",
            "langs": [],
            "cmd": "",
            "servers": [],
            "from_full": "openjdk:8-jdk-alpine",
            "keywords": [
                "apk",
                "curl",
                "cache",
                "add",
                "update"
            ],
            "cmd_keywords": [],
            "monitors": [],
            "buses": [],
            "dbs": [],
            "gates": [],
            "discos": []
        },
        {
            "path": "/benchmark/go-post-service/Dockerfile",
            "from": "alpine",
            "langs": [],
            "cmd": "./go-post-service",
            "servers": [],
            "from_full": "alpine",
            "keywords": [
                "lrt",
                "mod",
                "models",
                "download",
                "build"
            ],
            "cmd_keywords": [
                "post",
                "service"
            ],
            "monitors": [],
            "buses": [],
            "dbs": [],
            "gates": [],
            "discos": []
        }
    ],
    "num_langs": 1,
    "langs": [
        "java"
    ],
    "discos": [],
    "num_gates": 0,
    "num_monitors": 0,
    "num_files": 9,
    "files": [
        {
            "path": "/user-service/pom.xml",
            "monitors": [],
            "dbs": [
                "mongo",
                "postgresql",
                "mongodb"
            ],
            "buses": [],
            "servers": [
                "jboss"
            ],
            "gates": [],
            "discos": []
        },
        {
            "path": "/post-service/pom.xml",
            "monitors": [],
            "dbs": [
                "postgresql"
            ],
            "buses": [
                "amqp"
            ],
            "servers": [
                "jboss"
            ],
            "gates": [],
            "discos": []
        },
        {
            "path": "/benchmark/quarkus-post-service/pom.xml",
            "monitors": [],
            "dbs": [
                "postgresql"
            ],
            "buses": [],
            "servers": [
                "jboss"
            ],
            "gates": [],
            "discos": []
        },
        {
            "path": "/benchmark/sboot-product-service/pom.xml",
            "monitors": [],
            "dbs": [
                "postgresql"
            ],
            "buses": [],
            "servers": [
                "spring"
            ],
            "gates": [],
            "discos": []
        },
        {
            "path": "/benchmark/quarkus-reactive-post-service/pom.xml",
            "monitors": [],
            "dbs": [],
            "buses": [],
            "servers": [
                "jboss"
            ],
            "gates": [],
            "discos": []
        },
        {
            "path": "/post-query-service/pom.xml",
            "monitors": [],
            "dbs": [],
            "buses": [
                "amqp"
            ],
            "servers": [
                "jboss"
            ],
            "gates": [],
            "discos": []
        }
    ],
    "shared_dbs": false,
    "monitors": [],
    "num_servers": 2,
    "url": "git://github.com/muratkarakas/quarkus-ms-k8s.git",
    "dbs": [
        "mongo",
        "postgresql"
    ],
    "num_discos": 0,
    "gates": [],
    "buses": [
        "amqp"
    ]
}