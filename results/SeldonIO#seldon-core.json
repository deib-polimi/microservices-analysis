{
    "url": "git://github.com/SeldonIO/seldon-core.git",
    "name": "SeldonIO/seldon-core",
    "commiters": 169,
    "size": 112095,
    "languages": [
        "python",
        "jupyter notebook",
        "go",
        "c++",
        "html"
    ],
    "dockers": [
        {
            "path": "/executor/samples/local/metadata/Dockerfile",
            "cmd": "",
            "cmd_keywords": [],
            "from": "",
            "keywords": [],
            "dbs": [],
            "servers": [],
            "buses": [],
            "langs": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/components/alibi-explain-server/Dockerfile",
            "cmd": "",
            "cmd_keywords": [],
            "from": "",
            "keywords": [],
            "dbs": [],
            "servers": [],
            "buses": [],
            "langs": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/components/seldon-request-logger/Dockerfile",
            "cmd": "",
            "cmd_keywords": [],
            "from": "",
            "keywords": [],
            "dbs": [],
            "servers": [],
            "buses": [],
            "langs": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/components/storage-initializer/Dockerfile",
            "cmd": "",
            "cmd_keywords": [],
            "from": "",
            "keywords": [],
            "dbs": [],
            "servers": [],
            "buses": [],
            "langs": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/components/rclone-storage-initializer/Dockerfile",
            "cmd": "",
            "cmd_keywords": [],
            "from": "",
            "keywords": [],
            "dbs": [],
            "servers": [],
            "buses": [],
            "langs": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/components/alibi-detect-server/Dockerfile",
            "cmd": "",
            "cmd_keywords": [],
            "from": "",
            "keywords": [],
            "dbs": [],
            "servers": [],
            "buses": [],
            "langs": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/kubectl-proxy/Dockerfile",
            "cmd": "",
            "cmd_keywords": [],
            "from": "",
            "keywords": [],
            "dbs": [],
            "servers": [],
            "buses": [],
            "langs": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/util/loadtester/Dockerfile",
            "cmd": "",
            "cmd_keywords": [],
            "from": "",
            "keywords": [],
            "dbs": [],
            "servers": [],
            "buses": [],
            "langs": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/incubating/wrappers/s2i/nodejs/Dockerfile",
            "cmd": "",
            "cmd_keywords": [],
            "from": "",
            "keywords": [],
            "dbs": [],
            "servers": [],
            "buses": [],
            "langs": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/incubating/wrappers/s2i/R/Dockerfile",
            "cmd": "",
            "cmd_keywords": [],
            "from": "",
            "keywords": [],
            "dbs": [],
            "servers": [],
            "buses": [],
            "langs": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/incubating/wrappers/s2i/go/Dockerfile",
            "cmd": "",
            "cmd_keywords": [],
            "from": "",
            "keywords": [],
            "dbs": [],
            "servers": [],
            "buses": [],
            "langs": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/incubating/wrappers/s2i/python-ngraph-onnx/Dockerfile",
            "cmd": "",
            "cmd_keywords": [],
            "from": "",
            "keywords": [],
            "dbs": [],
            "servers": [],
            "buses": [],
            "langs": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/incubating/wrappers/s2i/python-tensorrt/Dockerfile",
            "cmd": "",
            "cmd_keywords": [],
            "from": "",
            "keywords": [],
            "dbs": [],
            "servers": [],
            "buses": [],
            "langs": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/incubating/wrappers/s2i/cpp/Dockerfile",
            "cmd": "",
            "cmd_keywords": [],
            "from": "",
            "keywords": [],
            "dbs": [],
            "servers": [],
            "buses": [],
            "langs": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/kafka/Dockerfile",
            "cmd": "",
            "cmd_keywords": [],
            "from": "",
            "keywords": [],
            "dbs": [],
            "servers": [],
            "buses": [],
            "langs": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/engine/Dockerfile",
            "cmd": "",
            "cmd_keywords": [],
            "from": "",
            "keywords": [],
            "dbs": [],
            "servers": [],
            "buses": [],
            "langs": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/operator/Dockerfile",
            "cmd": "",
            "cmd_keywords": [],
            "from": "",
            "keywords": [],
            "dbs": [],
            "servers": [],
            "buses": [],
            "langs": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/core-builder/Dockerfile",
            "cmd": "",
            "cmd_keywords": [],
            "from": "",
            "keywords": [],
            "dbs": [],
            "servers": [],
            "buses": [],
            "langs": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/examples/outliers/alibi-detect-combiner/Dockerfile",
            "cmd": "",
            "cmd_keywords": [],
            "from": "",
            "keywords": [],
            "dbs": [],
            "servers": [],
            "buses": [],
            "langs": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/examples/pachyderm-simple/iris-train-python-svm/Dockerfile",
            "cmd": "",
            "cmd_keywords": [],
            "from": "",
            "keywords": [],
            "dbs": [],
            "servers": [],
            "buses": [],
            "langs": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/examples/init_containers/Dockerfile",
            "cmd": "",
            "cmd_keywords": [],
            "from": "",
            "keywords": [],
            "dbs": [],
            "servers": [],
            "buses": [],
            "langs": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/examples/batch/hdfs-argo-workflows/Dockerfile",
            "cmd": "",
            "cmd_keywords": [],
            "from": "",
            "keywords": [],
            "dbs": [],
            "servers": [],
            "buses": [],
            "langs": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/examples/models/sklearn_spacy_text/Dockerfile",
            "cmd": "",
            "cmd_keywords": [],
            "from": "",
            "keywords": [],
            "dbs": [],
            "servers": [],
            "buses": [],
            "langs": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/examples/ray/batch-split-proxy/Dockerfile",
            "cmd": "",
            "cmd_keywords": [],
            "from": "",
            "keywords": [],
            "dbs": [],
            "servers": [],
            "buses": [],
            "langs": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/examples/kubeflow/pipeline/pipeline_steps/data_downloader/Dockerfile",
            "cmd": "",
            "cmd_keywords": [],
            "from": "",
            "keywords": [],
            "dbs": [],
            "servers": [],
            "buses": [],
            "langs": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/examples/pachyderm-cd4ml/RSIDeployer/Dockerfile",
            "cmd": "",
            "cmd_keywords": [],
            "from": "",
            "keywords": [],
            "dbs": [],
            "servers": [],
            "buses": [],
            "langs": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/examples/pachyderm-cd4ml/RSIServing/Dockerfile",
            "cmd": "",
            "cmd_keywords": [],
            "from": "",
            "keywords": [],
            "dbs": [],
            "servers": [],
            "buses": [],
            "langs": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/examples/pachyderm-cd4ml/RSITraining/Dockerfile",
            "cmd": "",
            "cmd_keywords": [],
            "from": "",
            "keywords": [],
            "dbs": [],
            "servers": [],
            "buses": [],
            "langs": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/wrappers/s2i/python/Dockerfile",
            "cmd": "",
            "cmd_keywords": [],
            "from": "",
            "keywords": [],
            "dbs": [],
            "servers": [],
            "buses": [],
            "langs": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/zookeeper-k8s/Dockerfile",
            "cmd": "",
            "cmd_keywords": [],
            "from": "",
            "keywords": [],
            "dbs": [],
            "servers": [],
            "buses": [],
            "langs": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/testing/profiling/engine/Dockerfile",
            "cmd": "",
            "cmd_keywords": [],
            "from": "",
            "keywords": [],
            "dbs": [],
            "servers": [],
            "buses": [],
            "langs": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/testing/benchmarking/ghz/Dockerfile",
            "cmd": "",
            "cmd_keywords": [],
            "from": "",
            "keywords": [],
            "dbs": [],
            "servers": [],
            "buses": [],
            "langs": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/python-builder/Dockerfile",
            "cmd": "",
            "cmd_keywords": [],
            "from": "",
            "keywords": [],
            "dbs": [],
            "servers": [],
            "buses": [],
            "langs": [],
            "gates": [],
            "monitors": [],
            "discos": []
        }
    ],
    "structure": {
        "path": "/executor/samples/local/metadata/docker-compose.yml",
        "num_services": 6,
        "services": [
            {
                "name": "default",
                "image": ".",
                "image_full": ".",
                "dbs": [],
                "servers": [],
                "buses": [],
                "gates": [],
                "monitors": [],
                "discos": [],
                "depends_on": []
            },
            {
                "name": "model_1",
                "image": ".",
                "image_full": ".",
                "dbs": [],
                "servers": [],
                "buses": [],
                "gates": [],
                "monitors": [],
                "discos": [],
                "depends_on": []
            },
            {
                "name": "model_2",
                "image": ".",
                "image_full": ".",
                "dbs": [],
                "servers": [],
                "buses": [],
                "gates": [],
                "monitors": [],
                "discos": [],
                "depends_on": []
            },
            {
                "name": "model_combiner",
                "image": ".",
                "image_full": ".",
                "dbs": [],
                "servers": [],
                "buses": [],
                "gates": [],
                "monitors": [],
                "discos": [],
                "depends_on": []
            },
            {
                "name": "model_a1",
                "image": ".",
                "image_full": ".",
                "dbs": [],
                "servers": [],
                "buses": [],
                "gates": [],
                "monitors": [],
                "discos": [],
                "depends_on": []
            },
            {
                "name": "model_a2",
                "image": ".",
                "image_full": ".",
                "dbs": [],
                "servers": [],
                "buses": [],
                "gates": [],
                "monitors": [],
                "discos": [],
                "depends_on": []
            }
        ],
        "detected_dbs": {
            "num": 0,
            "names": [],
            "services": [],
            "shared_dbs": false
        },
        "dep_graph_full": {
            "nodes": 6,
            "edges": 0,
            "avg_deps_per_service": 0.0,
            "acyclic": true,
            "longest_path": 0
        },
        "dep_graph_micro": {
            "nodes": 6,
            "edges": 0,
            "avg_deps_per_service": 0.0,
            "acyclic": true,
            "longest_path": 0
        }
    },
    "files": [
        {
            "path": "/servers/tfserving_proxy/requirements.txt",
            "dbs": [],
            "servers": [],
            "buses": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/servers/mlflowserver/mlflowserver/requirements.txt",
            "dbs": [],
            "servers": [],
            "buses": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/servers/mlflowserver/models/elasticnet_wine/requirements.txt",
            "dbs": [],
            "servers": [],
            "buses": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/servers/xgboostserver/xgboostserver/requirements.txt",
            "dbs": [],
            "servers": [],
            "buses": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/servers/sklearnserver/models/iris/requirements.txt",
            "dbs": [],
            "servers": [],
            "buses": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/servers/sklearnserver/models/moviesentiment/requirements.txt",
            "dbs": [],
            "servers": [],
            "buses": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/servers/sklearnserver/sklearnserver/requirements.txt",
            "dbs": [],
            "servers": [],
            "buses": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/components/seldon-request-logger/requirements.txt",
            "dbs": [],
            "servers": [
                "flask"
            ],
            "buses": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/components/routers/case_study/requirements.txt",
            "dbs": [],
            "servers": [],
            "buses": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/components/routers/case_study/models/rf_model/requirements.txt",
            "dbs": [],
            "servers": [],
            "buses": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/components/routers/case_study/models/xgb_model/requirements.txt",
            "dbs": [],
            "servers": [],
            "buses": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/components/routers/epsilon-greedy/requirements.txt",
            "dbs": [],
            "servers": [],
            "buses": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/components/routers/thompson-sampling/requirements.txt",
            "dbs": [
                "redis"
            ],
            "servers": [],
            "buses": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/integrations/sagemaker/requirements.txt",
            "dbs": [],
            "servers": [],
            "buses": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/util/loadtester/requirements.txt",
            "dbs": [],
            "servers": [],
            "buses": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/util/kafka/requirements.txt",
            "dbs": [],
            "servers": [],
            "buses": [
                "kafka"
            ],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/incubating/wrappers/s2i/java-jni/java-jni/requirements.txt",
            "dbs": [],
            "servers": [],
            "buses": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/doc/requirements.txt",
            "dbs": [],
            "servers": [],
            "buses": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/examples/feedback/reward-accuracy/requirements.txt",
            "dbs": [],
            "servers": [],
            "buses": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/examples/cicd/sig-mlops-seldon-jenkins-x/src/requirements.txt",
            "dbs": [],
            "servers": [],
            "buses": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/examples/cicd/sig-mlops-jenkins-classic/servers/torchserver/torchserver/requirements.txt",
            "dbs": [],
            "servers": [],
            "buses": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/examples/cicd/sig-mlops-jenkins-classic/models/news_classifier/src/requirements.txt",
            "dbs": [],
            "servers": [],
            "buses": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/examples/cicd/sig-mlops-jenkins-classic/models/image_classifier/src/requirements.txt",
            "dbs": [],
            "servers": [],
            "buses": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/examples/kafka/cifar10/requirements.txt",
            "dbs": [],
            "servers": [],
            "buses": [
                "kafka"
            ],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/examples/models/tensorrt/requirements.txt",
            "dbs": [],
            "servers": [],
            "buses": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/examples/models/resnet/requirements.txt",
            "dbs": [],
            "servers": [],
            "buses": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/examples/models/sklearn_iris/requirements.txt",
            "dbs": [],
            "servers": [],
            "buses": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/examples/models/sklearn_spacy_text/requirements.txt",
            "dbs": [],
            "servers": [],
            "buses": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/examples/models/azure_aks_deep_mnist/requirements.txt",
            "dbs": [],
            "servers": [],
            "buses": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/examples/models/aws_eks_deep_mnist/requirements.txt",
            "dbs": [],
            "servers": [],
            "buses": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/examples/models/sklearn_iris_customdata/requirements.txt",
            "dbs": [],
            "servers": [],
            "buses": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/examples/models/lightgbm_custom_server/lightgbmserver/requirements.txt",
            "dbs": [],
            "servers": [],
            "buses": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/examples/models/h2o_example/requirements.txt",
            "dbs": [
                "redis"
            ],
            "servers": [
                "flask"
            ],
            "buses": [],
            "gates": [],
            "monitors": [],
            "discos": [
                "grpc"
            ]
        },
        {
            "path": "/examples/models/gpu_tensorflow_deep_mnist/requirements.txt",
            "dbs": [],
            "servers": [],
            "buses": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/examples/models/mean_classifier/requirements.txt",
            "dbs": [],
            "servers": [],
            "buses": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/examples/models/sklearn_iris_jsondata/requirements.txt",
            "dbs": [],
            "servers": [],
            "buses": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/examples/models/alibaba_ack_deep_mnist/requirements.txt",
            "dbs": [],
            "servers": [],
            "buses": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/examples/models/chainer_mnist/requirements.txt",
            "dbs": [],
            "servers": [],
            "buses": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/examples/models/keras_cifar10/requirements.txt",
            "dbs": [],
            "servers": [],
            "buses": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/examples/models/statsmodels/requirements.txt",
            "dbs": [],
            "servers": [],
            "buses": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/examples/models/templates/requirements.txt",
            "dbs": [],
            "servers": [],
            "buses": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/examples/models/testing/requirements.txt",
            "dbs": [],
            "servers": [],
            "buses": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/examples/models/openvino_imagenet_ensemble/resources/model/requirements.txt",
            "dbs": [],
            "servers": [],
            "buses": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/examples/models/openvino_imagenet_ensemble/resources/transformer/requirements.txt",
            "dbs": [],
            "servers": [],
            "buses": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/examples/output_transformers/requirements.txt",
            "dbs": [],
            "servers": [],
            "buses": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/examples/ray/batch-split-proxy/requirements.txt",
            "dbs": [],
            "servers": [],
            "buses": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/examples/ray/batch-split-proxy/training/requirements.txt",
            "dbs": [],
            "servers": [],
            "buses": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/examples/explainers/imagenet/resources/transformer/requirements.txt",
            "dbs": [],
            "servers": [],
            "buses": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/examples/dvc/requirements.txt",
            "dbs": [],
            "servers": [],
            "buses": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/examples/kubeflow/pipeline/pipeline_steps/tfidf_vectorizer/requirements.txt",
            "dbs": [],
            "servers": [],
            "buses": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/examples/kubeflow/pipeline/pipeline_steps/spacy_tokenize/requirements.txt",
            "dbs": [],
            "servers": [],
            "buses": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/examples/kubeflow/pipeline/pipeline_steps/data_downloader/requirements.txt",
            "dbs": [],
            "servers": [],
            "buses": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/examples/kubeflow/pipeline/pipeline_steps/clean_text/requirements.txt",
            "dbs": [],
            "servers": [],
            "buses": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/examples/kubeflow/pipeline/pipeline_steps/lr_text_classifier/requirements.txt",
            "dbs": [],
            "servers": [],
            "buses": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/examples/transformers/v2-protocol/tokeniser/requirements.txt",
            "dbs": [],
            "servers": [],
            "buses": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/examples/transformers/mean_transformer/requirements.txt",
            "dbs": [],
            "servers": [],
            "buses": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/wrappers/s2i/python/test_fbs/requirements.txt",
            "dbs": [],
            "servers": [],
            "buses": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/incubating/wrappers/s2i/java-jni/test/model-template-app/pom.xml",
            "dbs": [],
            "servers": [],
            "buses": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/incubating/wrappers/s2i/java/test/model-template-app/pom.xml",
            "dbs": [],
            "servers": [
                "spring"
            ],
            "buses": [],
            "gates": [],
            "monitors": [],
            "discos": [
                "grpc"
            ]
        },
        {
            "path": "/incubating/wrappers/java/pom.xml",
            "dbs": [
                "nexus"
            ],
            "servers": [
                "spring",
                "tomcat"
            ],
            "buses": [],
            "gates": [],
            "monitors": [],
            "discos": [
                "grpc"
            ]
        },
        {
            "path": "/engine/pom.xml",
            "dbs": [],
            "servers": [
                "spring"
            ],
            "buses": [],
            "gates": [],
            "monitors": [
                "prometheus",
                "jaeger"
            ],
            "discos": [
                "thrift",
                "grpc"
            ]
        },
        {
            "path": "/examples/models/h2o_mojo/pom.xml",
            "dbs": [],
            "servers": [
                "spring"
            ],
            "buses": [],
            "gates": [],
            "monitors": [],
            "discos": [
                "grpc"
            ]
        },
        {
            "path": "/testing/s2i/java/pom.xml",
            "dbs": [],
            "servers": [],
            "buses": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/incubating/examples/nodejs_tensorflow/package.json",
            "dbs": [],
            "servers": [
                "node"
            ],
            "buses": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/incubating/examples/nodejs_mnist/package.json",
            "dbs": [],
            "servers": [
                "node"
            ],
            "buses": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/incubating/wrappers/s2i/nodejs/package.json",
            "dbs": [],
            "servers": [
                "express"
            ],
            "buses": [],
            "gates": [],
            "monitors": [],
            "discos": [
                "grpc"
            ]
        },
        {
            "path": "/incubating/wrappers/s2i/nodejs/test/transformer-template-app/package.json",
            "dbs": [],
            "servers": [],
            "buses": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/incubating/wrappers/s2i/nodejs/test/model-template-app/package.json",
            "dbs": [],
            "servers": [
                "node"
            ],
            "buses": [],
            "gates": [],
            "monitors": [],
            "discos": []
        }
    ],
    "dbs": [
        "nexus",
        "redis"
    ],
    "servers": [
        "express",
        "spring",
        "flask",
        "tomcat",
        "node"
    ],
    "buses": [
        "kafka"
    ],
    "langs": [
        "html",
        "c++",
        "python",
        "jupyter notebook",
        "go"
    ],
    "gates": [],
    "monitors": [
        "prometheus",
        "jaeger"
    ],
    "discos": [
        "thrift",
        "grpc"
    ],
    "num_services": 6,
    "shared_dbs": false,
    "num_dockers": 33,
    "images": [],
    "num_dbs": 2,
    "num_servers": 5,
    "num_buses": 1,
    "num_langs": 5,
    "num_gates": 0,
    "num_monitors": 2,
    "num_discos": 2,
    "num_files": 102,
    "avg_size_service": 3396.818181818182
}