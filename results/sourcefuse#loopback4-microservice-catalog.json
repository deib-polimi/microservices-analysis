{
    "url": "git://github.com/sourcefuse/loopback4-microservice-catalog.git",
    "name": "sourcefuse/loopback4-microservice-catalog",
    "commiters": 38,
    "size": 28395,
    "languages": [
        "typescript"
    ],
    "dockers": [
        {
            "path": "/services/feature-toggle-service/Dockerfile",
            "cmd": "node .",
            "cmd_keywords": [
                "node"
            ],
            "from": "node",
            "from_full": "node:10-slim",
            "keywords": [
                "npm",
                "mkdir",
                "home",
                "node",
                "app"
            ],
            "dbs": [],
            "servers": [
                "node"
            ],
            "buses": [],
            "langs": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/services/search-service/Dockerfile",
            "cmd": "node .",
            "cmd_keywords": [
                "node"
            ],
            "from": "node",
            "from_full": "node:16-slim",
            "keywords": [
                "npm",
                "mkdir",
                "home",
                "node",
                "app"
            ],
            "dbs": [],
            "servers": [
                "node"
            ],
            "buses": [],
            "langs": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/services/payment-service/Dockerfile",
            "cmd": "node .",
            "cmd_keywords": [
                "node"
            ],
            "from": "node",
            "from_full": "node:10-slim",
            "keywords": [
                "npm",
                "mkdir",
                "home",
                "node",
                "app"
            ],
            "dbs": [],
            "servers": [
                "node"
            ],
            "buses": [],
            "langs": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/sandbox/search-ms-example/Dockerfile",
            "cmd": "node .",
            "cmd_keywords": [
                "node"
            ],
            "from": "node",
            "from_full": "node:14-slim",
            "keywords": [
                "npm",
                "mkdir",
                "home",
                "node",
                "app"
            ],
            "dbs": [],
            "servers": [
                "node"
            ],
            "buses": [],
            "langs": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/sandbox/feature-toggle-example/Dockerfile",
            "cmd": "node .",
            "cmd_keywords": [
                "node"
            ],
            "from": "node",
            "from_full": "node:10-slim",
            "keywords": [
                "npm",
                "mkdir",
                "home",
                "node",
                "app"
            ],
            "dbs": [],
            "servers": [
                "node"
            ],
            "buses": [],
            "langs": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/sandbox/video-conferencing-ms-example/Dockerfile",
            "cmd": "node .",
            "cmd_keywords": [
                "node"
            ],
            "from": "node",
            "from_full": "node:14-slim",
            "keywords": [
                "npm",
                "mkdir",
                "home",
                "node",
                "app"
            ],
            "dbs": [],
            "servers": [
                "node"
            ],
            "buses": [],
            "langs": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/sandbox/notification-socket-example/Dockerfile",
            "cmd": "node .",
            "cmd_keywords": [
                "node"
            ],
            "from": "node",
            "from_full": "node:14-slim",
            "keywords": [
                "npm",
                "mkdir",
                "home",
                "node",
                "app"
            ],
            "dbs": [],
            "servers": [
                "node"
            ],
            "buses": [],
            "langs": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/sandbox/chat-notification-pubnub-example/services/notifications-service/Dockerfile",
            "cmd": "node .",
            "cmd_keywords": [
                "node"
            ],
            "from": "node",
            "from_full": "node:16-slim",
            "keywords": [
                "npm",
                "mkdir",
                "home",
                "node",
                "app"
            ],
            "dbs": [],
            "servers": [
                "node"
            ],
            "buses": [],
            "langs": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/sandbox/chat-notification-pubnub-example/services/chat-service/Dockerfile",
            "cmd": "node .",
            "cmd_keywords": [
                "node"
            ],
            "from": "node",
            "from_full": "node:16-slim",
            "keywords": [
                "npm",
                "mkdir",
                "home",
                "node",
                "app"
            ],
            "dbs": [],
            "servers": [
                "node"
            ],
            "buses": [],
            "langs": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/sandbox/chat-notification-pubnub-example/facade/Dockerfile",
            "cmd": "node .",
            "cmd_keywords": [
                "node"
            ],
            "from": "node",
            "from_full": "node:16-slim",
            "keywords": [
                "npm",
                "mkdir",
                "home",
                "node",
                "app"
            ],
            "dbs": [],
            "servers": [
                "node"
            ],
            "buses": [],
            "langs": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/sandbox/scheduler-example/Dockerfile",
            "cmd": "node .",
            "cmd_keywords": [
                "node"
            ],
            "from": "node",
            "from_full": "node:14-slim",
            "keywords": [
                "npm",
                "mkdir",
                "home",
                "node",
                "app"
            ],
            "dbs": [],
            "servers": [
                "node"
            ],
            "buses": [],
            "langs": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/sandbox/in-mail-example/Dockerfile",
            "cmd": "node .",
            "cmd_keywords": [
                "node"
            ],
            "from": "node",
            "from_full": "node:14-slim",
            "keywords": [
                "npm",
                "mkdir",
                "home",
                "node",
                "app"
            ],
            "dbs": [],
            "servers": [
                "node"
            ],
            "buses": [],
            "langs": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/sandbox/auth-multitenant-example/Dockerfile",
            "cmd": "node .",
            "cmd_keywords": [
                "node"
            ],
            "from": "node",
            "from_full": "node:14-slim",
            "keywords": [
                "npm",
                "mkdir",
                "home",
                "node",
                "app"
            ],
            "dbs": [],
            "servers": [
                "node"
            ],
            "buses": [],
            "langs": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/sandbox/search-client-example/Dockerfile",
            "cmd": "npm start",
            "cmd_keywords": [
                "npm",
                "start"
            ],
            "from": "node",
            "from_full": "node:14-slim",
            "keywords": [
                "npm",
                "mkdir",
                "home",
                "node",
                "app"
            ],
            "dbs": [],
            "servers": [
                "node"
            ],
            "buses": [],
            "langs": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/sandbox/audit-ms-example/Dockerfile",
            "cmd": "node .",
            "cmd_keywords": [
                "node"
            ],
            "from": "node",
            "from_full": "node:14-slim",
            "keywords": [
                "npm",
                "mkdir",
                "home",
                "node",
                "app"
            ],
            "dbs": [],
            "servers": [
                "node"
            ],
            "buses": [],
            "langs": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/sandbox/auth-ms-basic-example/Dockerfile",
            "cmd": "node .",
            "cmd_keywords": [
                "node"
            ],
            "from": "node",
            "from_full": "node:14-slim",
            "keywords": [
                "npm",
                "mkdir",
                "home",
                "node",
                "app"
            ],
            "dbs": [],
            "servers": [
                "node"
            ],
            "buses": [],
            "langs": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/sandbox/workflow-ms-example/Dockerfile",
            "cmd": "node .",
            "cmd_keywords": [
                "node"
            ],
            "from": "node",
            "from_full": "node:14-slim",
            "keywords": [
                "npm",
                "mkdir",
                "home",
                "node",
                "app"
            ],
            "dbs": [],
            "servers": [
                "node"
            ],
            "buses": [],
            "langs": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/sandbox/pubnub-example/Dockerfile",
            "cmd": "node .",
            "cmd_keywords": [
                "node"
            ],
            "from": "node",
            "from_full": "node:14-slim",
            "keywords": [
                "npm",
                "mkdir",
                "home",
                "node",
                "app"
            ],
            "dbs": [],
            "servers": [
                "node"
            ],
            "buses": [],
            "langs": [],
            "gates": [],
            "monitors": [],
            "discos": []
        }
    ],
    "structure": {
        "path": "/sandbox/docker-compose.yml",
        "num_services": 28,
        "services": [
            {
                "name": "chat-notification-pubnub-example",
                "image": "${REGISTRY",
                "image_full": "${REGISTRY:-localhost:32000}/chat-notification-pubnub-example",
                "dbs": [],
                "servers": [],
                "buses": [],
                "gates": [],
                "monitors": [],
                "discos": [],
                "depends_on": [
                    "postgres",
                    "redis",
                    "postgres_orchestrator",
                    "facade-chat-service",
                    "facade-notification-service"
                ]
            },
            {
                "name": "facade-chat-service",
                "image": "${REGISTRY",
                "image_full": "${REGISTRY:-localhost:32000}/facade-chat-service",
                "dbs": [],
                "servers": [],
                "buses": [],
                "gates": [],
                "monitors": [],
                "discos": [],
                "depends_on": [
                    "postgres",
                    "redis",
                    "postgres_orchestrator",
                    "facade-chat-migration"
                ]
            },
            {
                "name": "facade-chat-migration",
                "image": "${REGISTRY",
                "image_full": "${REGISTRY:-localhost:32000}/facade-chat-service",
                "dbs": [],
                "servers": [],
                "buses": [],
                "gates": [],
                "monitors": [],
                "discos": [],
                "depends_on": [
                    "postgres",
                    "postgres_orchestrator"
                ]
            },
            {
                "name": "facade-notification-service",
                "image": "${REGISTRY",
                "image_full": "${REGISTRY:-localhost:32000}/facade-notification-service",
                "dbs": [],
                "servers": [],
                "buses": [],
                "gates": [],
                "monitors": [],
                "discos": [],
                "depends_on": [
                    "postgres",
                    "redis",
                    "postgres_orchestrator",
                    "facade-notification-migration"
                ]
            },
            {
                "name": "facade-notification-migration",
                "image": "${REGISTRY",
                "image_full": "${REGISTRY:-localhost:32000}/facade-notification-service",
                "dbs": [],
                "servers": [],
                "buses": [],
                "gates": [],
                "monitors": [],
                "discos": [],
                "depends_on": [
                    "postgres",
                    "postgres_orchestrator"
                ]
            },
            {
                "name": "auth-multitenant-example",
                "image": "${REGISTRY",
                "image_full": "${REGISTRY:-localhost:32000}/auth-multitenant-example",
                "dbs": [],
                "servers": [],
                "buses": [],
                "gates": [],
                "monitors": [],
                "discos": [],
                "depends_on": [
                    "postgres",
                    "redis",
                    "postgres_orchestrator",
                    "auth-multitenant-migration"
                ]
            },
            {
                "name": "auth-multitenant-migration",
                "image": "${REGISTRY",
                "image_full": "${REGISTRY:-localhost:32000}/auth-multitenant-example",
                "dbs": [],
                "servers": [],
                "buses": [],
                "gates": [],
                "monitors": [],
                "discos": [],
                "depends_on": [
                    "postgres",
                    "postgres_orchestrator"
                ]
            },
            {
                "name": "notification-socket-example",
                "image": "${REGISTRY",
                "image_full": "${REGISTRY:-localhost:32000}/notification-socket-example",
                "dbs": [],
                "servers": [],
                "buses": [],
                "gates": [],
                "monitors": [],
                "discos": [],
                "depends_on": [
                    "postgres"
                ]
            },
            {
                "name": "workflow-ms-example",
                "image": "${REGISTRY",
                "image_full": "${REGISTRY:-localhost:32000}/workflow-ms-example",
                "dbs": [],
                "servers": [],
                "buses": [],
                "gates": [],
                "monitors": [],
                "discos": [],
                "depends_on": [
                    "postgres",
                    "camunda",
                    "postgres_orchestrator",
                    "workflow-migration"
                ]
            },
            {
                "name": "workflow-migration",
                "image": "${REGISTRY",
                "image_full": "${REGISTRY:-localhost:32000}/workflow-ms-example",
                "dbs": [],
                "servers": [],
                "buses": [],
                "gates": [],
                "monitors": [],
                "discos": [],
                "depends_on": [
                    "postgres",
                    "postgres_orchestrator"
                ]
            },
            {
                "name": "audit-ms-example",
                "image": "${REGISTRY",
                "image_full": "${REGISTRY:-localhost:32000}/audit-ms-example",
                "dbs": [],
                "servers": [],
                "buses": [],
                "gates": [],
                "monitors": [],
                "discos": [],
                "depends_on": [
                    "postgres",
                    "postgres_orchestrator",
                    "audit-ms-migration"
                ]
            },
            {
                "name": "search-ms-example",
                "image": "${REGISTRY",
                "image_full": "${REGISTRY:-localhost:32000}/search-ms-example",
                "dbs": [],
                "servers": [],
                "buses": [],
                "gates": [],
                "monitors": [],
                "discos": [],
                "depends_on": [
                    "postgres",
                    "postgres_orchestrator",
                    "search-ms-migration"
                ]
            },
            {
                "name": "search-ms-migration",
                "image": "${REGISTRY",
                "image_full": "${REGISTRY:-localhost:32000}/search-ms-example",
                "dbs": [],
                "servers": [],
                "buses": [],
                "gates": [],
                "monitors": [],
                "discos": [],
                "depends_on": [
                    "postgres",
                    "postgres_orchestrator"
                ]
            },
            {
                "name": "search-client-example",
                "image": "${REGISTRY",
                "image_full": "${REGISTRY:-localhost:32000}/search-client-example",
                "dbs": [],
                "servers": [],
                "buses": [],
                "gates": [],
                "monitors": [],
                "discos": [],
                "depends_on": []
            },
            {
                "name": "audit-ms-migration",
                "image": "${REGISTRY",
                "image_full": "${REGISTRY:-localhost:32000}/audit-ms-example",
                "dbs": [],
                "servers": [],
                "buses": [],
                "gates": [],
                "monitors": [],
                "discos": [],
                "depends_on": [
                    "postgres",
                    "postgres_orchestrator"
                ]
            },
            {
                "name": "pubnub-example",
                "image": "${REGISTRY",
                "image_full": "${REGISTRY:-localhost:32000}/pubnub-example",
                "dbs": [],
                "servers": [],
                "buses": [],
                "gates": [],
                "monitors": [],
                "discos": [],
                "depends_on": [
                    "postgres",
                    "postgres_orchestrator",
                    "pubnub-migration"
                ]
            },
            {
                "name": "pubnub-migration",
                "image": "${REGISTRY",
                "image_full": "${REGISTRY:-localhost:32000}/pubnub-example:latest",
                "dbs": [],
                "servers": [],
                "buses": [],
                "gates": [],
                "monitors": [],
                "discos": [],
                "depends_on": [
                    "postgres",
                    "postgres_orchestrator"
                ]
            },
            {
                "name": "feature-toggle-example",
                "image": "${REGISTRY",
                "image_full": "${REGISTRY:-localhost:32000}/feature-toggle-example",
                "dbs": [],
                "servers": [],
                "buses": [],
                "gates": [],
                "monitors": [],
                "discos": [],
                "depends_on": [
                    "postgres",
                    "postgres_orchestrator",
                    "feature-toggle-migration"
                ]
            },
            {
                "name": "feature-toggle-migration",
                "image": "${REGISTRY",
                "image_full": "${REGISTRY:-localhost:32000}/feature-toggle:latest",
                "dbs": [],
                "servers": [],
                "buses": [],
                "gates": [],
                "monitors": [],
                "discos": [],
                "depends_on": [
                    "postgres",
                    "postgres_orchestrator"
                ]
            },
            {
                "name": "scheduler-example",
                "image": "${REGISTRY",
                "image_full": "${REGISTRY:-localhost:32000}/scheduler-example",
                "dbs": [],
                "servers": [],
                "buses": [],
                "gates": [],
                "monitors": [],
                "discos": [],
                "depends_on": [
                    "postgres",
                    "postgres_orchestrator"
                ]
            },
            {
                "name": "video-conferencing-ms-example",
                "image": "${REGISTRY",
                "image_full": "${REGISTRY:-localhost:32000}/video-conferencing-ms-example",
                "dbs": [],
                "servers": [],
                "buses": [],
                "gates": [],
                "monitors": [],
                "discos": [],
                "depends_on": [
                    "postgres",
                    "postgres_orchestrator"
                ]
            },
            {
                "name": "video-conferencing-ms-migration",
                "image": "${REGISTRY",
                "image_full": "${REGISTRY:-localhost:32000}/video-conferencing-ms-example",
                "dbs": [],
                "servers": [],
                "buses": [],
                "gates": [],
                "monitors": [],
                "discos": [],
                "depends_on": [
                    "postgres",
                    "postgres_orchestrator"
                ]
            },
            {
                "name": "in-mail-example",
                "image": "${REGISTRY",
                "image_full": "${REGISTRY:-localhost:32000}/in-mail-example",
                "dbs": [],
                "servers": [],
                "buses": [],
                "gates": [],
                "monitors": [],
                "discos": [],
                "depends_on": [
                    "postgres",
                    "postgres_orchestrator"
                ]
            },
            {
                "name": "redis",
                "image": "redis",
                "image_full": "redis:alpine",
                "dbs": [
                    "redis"
                ],
                "servers": [],
                "buses": [],
                "gates": [],
                "monitors": [],
                "discos": [],
                "depends_on": []
            },
            {
                "name": "camunda",
                "image": "camunda/camunda-bpm-platform",
                "image_full": "camunda/camunda-bpm-platform:run-latest",
                "dbs": [],
                "servers": [],
                "buses": [],
                "gates": [],
                "monitors": [],
                "discos": [],
                "depends_on": []
            },
            {
                "name": "postgres",
                "image": "postgres",
                "image_full": "postgres",
                "dbs": [
                    "postgres"
                ],
                "servers": [],
                "buses": [],
                "gates": [],
                "monitors": [],
                "discos": [],
                "depends_on": []
            },
            {
                "name": "postgres_orchestrator",
                "image": "postgres",
                "image_full": "postgres",
                "dbs": [
                    "postgres"
                ],
                "servers": [],
                "buses": [],
                "gates": [],
                "monitors": [],
                "discos": [],
                "depends_on": [
                    "postgres"
                ]
            },
            {
                "name": "pgadmin",
                "image": "dpage/pgadmin4",
                "image_full": "dpage/pgadmin4",
                "dbs": [],
                "servers": [],
                "buses": [],
                "gates": [],
                "monitors": [],
                "discos": [],
                "depends_on": []
            }
        ],
        "detected_dbs": {
            "num": 3,
            "names": [
                "postgres",
                "redis"
            ],
            "services": [
                "redis",
                "postgres",
                "postgres_orchestrator"
            ],
            "shared_dbs": true
        },
        "dep_graph_full": {
            "nodes": 28,
            "edges": 59,
            "avg_deps_per_service": 2.107142857142857,
            "acyclic": true,
            "longest_path": 4
        },
        "dep_graph_micro": {
            "nodes": 25,
            "edges": 11,
            "avg_deps_per_service": 0.44,
            "acyclic": true,
            "longest_path": 2
        }
    },
    "files": [
        {
            "path": "/package.json",
            "dbs": [],
            "servers": [],
            "buses": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/services/audit-service/package.json",
            "dbs": [],
            "servers": [
                "node"
            ],
            "buses": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/services/authentication-service/package.json",
            "dbs": [],
            "servers": [
                "node"
            ],
            "buses": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/services/chat-service/package.json",
            "dbs": [
                "postgresql"
            ],
            "servers": [
                "node"
            ],
            "buses": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/services/feature-toggle-service/package.json",
            "dbs": [],
            "servers": [
                "node"
            ],
            "buses": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/services/search-service/package.json",
            "dbs": [
                "postgresql",
                "sql"
            ],
            "servers": [
                "node"
            ],
            "buses": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/services/notification-service/package.json",
            "dbs": [],
            "servers": [
                "node"
            ],
            "buses": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/services/in-mail-service/package.json",
            "dbs": [],
            "servers": [
                "node"
            ],
            "buses": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/services/video-conferencing-service/package.json",
            "dbs": [
                "postgresql"
            ],
            "servers": [
                "node"
            ],
            "buses": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/services/scheduler-service/package.json",
            "dbs": [],
            "servers": [
                "node"
            ],
            "buses": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/services/payment-service/package.json",
            "dbs": [],
            "servers": [
                "node"
            ],
            "buses": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/services/bpmn-service/package.json",
            "dbs": [
                "postgresql"
            ],
            "servers": [
                "node"
            ],
            "buses": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/packages/user-onboarding/package.json",
            "dbs": [],
            "servers": [
                "node"
            ],
            "buses": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/packages/user-onboarding/projects/user-onboarding-lib/package.json",
            "dbs": [],
            "servers": [
                "node"
            ],
            "buses": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/packages/core/package.json",
            "dbs": [],
            "servers": [
                "node"
            ],
            "buses": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/packages/custom-sf-changelog/package.json",
            "dbs": [],
            "servers": [
                "node"
            ],
            "buses": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/packages/search/package.json",
            "dbs": [],
            "servers": [
                "node"
            ],
            "buses": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/packages/search/projects/search-lib/package.json",
            "dbs": [],
            "servers": [
                "node"
            ],
            "buses": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/sandbox/search-ms-example/package.json",
            "dbs": [
                "postgresql",
                "mysql"
            ],
            "servers": [
                "node"
            ],
            "buses": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/sandbox/feature-toggle-example/package.json",
            "dbs": [
                "postgresql",
                "redis"
            ],
            "servers": [
                "node"
            ],
            "buses": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/sandbox/video-conferencing-ms-example/package.json",
            "dbs": [
                "postgresql"
            ],
            "servers": [
                "node"
            ],
            "buses": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/sandbox/notification-socket-example/package.json",
            "dbs": [],
            "servers": [
                "node"
            ],
            "buses": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/sandbox/chat-notification-pubnub-example/services/notifications-service/package.json",
            "dbs": [
                "postgresql",
                "redis"
            ],
            "servers": [
                "node"
            ],
            "buses": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/sandbox/chat-notification-pubnub-example/services/chat-service/package.json",
            "dbs": [
                "postgresql",
                "redis"
            ],
            "servers": [
                "node"
            ],
            "buses": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/sandbox/chat-notification-pubnub-example/facade/package.json",
            "dbs": [
                "postgresql",
                "redis"
            ],
            "servers": [
                "node"
            ],
            "buses": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/sandbox/scheduler-example/package.json",
            "dbs": [
                "postgresql"
            ],
            "servers": [
                "node"
            ],
            "buses": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/sandbox/in-mail-example/package.json",
            "dbs": [
                "postgresql"
            ],
            "servers": [
                "node"
            ],
            "buses": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/sandbox/auth-multitenant-example/package.json",
            "dbs": [
                "postgresql",
                "redis"
            ],
            "servers": [
                "node"
            ],
            "buses": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/sandbox/search-client-example/package.json",
            "dbs": [],
            "servers": [
                "node"
            ],
            "buses": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/sandbox/audit-ms-example/package.json",
            "dbs": [
                "postgresql"
            ],
            "servers": [
                "node"
            ],
            "buses": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/sandbox/auth-ms-basic-example/package.json",
            "dbs": [
                "postgresql",
                "redis"
            ],
            "servers": [
                "node"
            ],
            "buses": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/sandbox/workflow-ms-example/package.json",
            "dbs": [
                "postgresql"
            ],
            "servers": [
                "node"
            ],
            "buses": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/sandbox/pubnub-example/package.json",
            "dbs": [
                "postgresql",
                "redis"
            ],
            "servers": [
                "node"
            ],
            "buses": [],
            "gates": [],
            "monitors": [],
            "discos": []
        }
    ],
    "dbs": [
        "postgres",
        "postgresql",
        "redis",
        "mysql",
        "sql"
    ],
    "servers": [
        "node"
    ],
    "buses": [],
    "langs": [
        "typescript"
    ],
    "gates": [],
    "monitors": [],
    "discos": [],
    "num_services": 28,
    "shared_dbs": true,
    "num_dockers": 18,
    "images": [
        "node"
    ],
    "num_dbs": 5,
    "num_servers": 1,
    "num_buses": 0,
    "num_langs": 1,
    "num_gates": 0,
    "num_monitors": 0,
    "num_discos": 0,
    "num_files": 52,
    "avg_size_service": 1577.5
}