{
    "url": "git://github.com/TaitoUnited/full-stack-template.git",
    "name": "TaitoUnited/full-stack-template",
    "commiters": 12,
    "size": 8817,
    "languages": [
        "shell",
        "typescript"
    ],
    "dockers": [
        {
            "path": "/www/Dockerfile",
            "cmd": ". ~/.bashrc && ./develop.sh",
            "cmd_keywords": [
                "bashrc",
                "develop"
            ],
            "from": "node",
            "from_full": "node:lts-buster-slim",
            "keywords": [
                "install",
                "npm",
                "mkdir",
                "develop",
                "loglevel"
            ],
            "dbs": [],
            "servers": [
                "node"
            ],
            "buses": [],
            "langs": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/storage/Dockerfile",
            "cmd": "server /develop",
            "cmd_keywords": [
                "server",
                "develop"
            ],
            "from": "minio/minio",
            "from_full": "minio/minio",
            "keywords": [
                "mkdir",
                "develop"
            ],
            "dbs": [],
            "servers": [],
            "buses": [],
            "langs": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/client/Dockerfile",
            "cmd": "npm install; npm run start",
            "cmd_keywords": [
                "npm",
                "install",
                "run",
                "start"
            ],
            "from": "ghcr.io/taitounited/cypress",
            "from_full": "ghcr.io/taitounited/cypress:8.7.0",
            "keywords": [
                "mkdir",
                "develop",
                "npm",
                "install",
                "loglevel"
            ],
            "dbs": [],
            "servers": [],
            "buses": [],
            "langs": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/worker/Dockerfile",
            "cmd": "npm install; npm run start",
            "cmd_keywords": [
                "npm",
                "install",
                "run",
                "start"
            ],
            "from": "node",
            "from_full": "node:lts-alpine",
            "keywords": [
                "mkdir",
                "develop",
                "npm",
                "install",
                "loglevel"
            ],
            "dbs": [],
            "servers": [
                "node"
            ],
            "buses": [],
            "langs": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/server/Dockerfile",
            "cmd": "npm install; npm run start",
            "cmd_keywords": [
                "npm",
                "install",
                "run",
                "start"
            ],
            "from": "node",
            "from_full": "node:lts-alpine",
            "keywords": [
                "mkdir",
                "develop",
                "npm",
                "install",
                "loglevel"
            ],
            "dbs": [],
            "servers": [
                "node"
            ],
            "buses": [],
            "langs": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/alternatives/server-flask/Dockerfile",
            "cmd": "pip-compile requirements-dev.in;     pip-compile requirements-prod.in;     pip3 install -r requirements-dev.txt;     python -m debugpy --listen 0.0.0.0:9229 -m       flask run --host $API_BINDADDR --port $API_PORT --no-debugger",
            "cmd_keywords": [
                "pip",
                "requirements",
                "compile",
                "dev",
                "api"
            ],
            "from": "python",
            "from_full": "python:3.9-alpine3.13",
            "keywords": [
                "dev",
                "pip",
                "install",
                "apk",
                "add"
            ],
            "dbs": [
                "postgresql"
            ],
            "servers": [
                "flask"
            ],
            "buses": [],
            "langs": [
                "python"
            ],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/alternatives/client-static/Dockerfile",
            "cmd": "",
            "cmd_keywords": [],
            "from": "nginx",
            "from_full": "nginx:stable-alpine",
            "keywords": [
                "nginx",
                "etc",
                "develop",
                "conf",
                "sed"
            ],
            "dbs": [],
            "servers": [],
            "buses": [],
            "langs": [],
            "gates": [
                "nginx"
            ],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/alternatives/server-micronaut-java/Dockerfile",
            "cmd": "DATABASE_PASSWORD=$(cat /run/secrets/DATABASE_PASSWORD) ./gradlew run",
            "cmd_keywords": [
                "database",
                "password",
                "run",
                "cat",
                "secrets"
            ],
            "from": "adoptopenjdk/openjdk11-openj9",
            "from_full": "adoptopenjdk/openjdk11-openj9:jdk-11.0.1.13-alpine-slim",
            "keywords": [
                "mkdir",
                "develop",
                "gradlew"
            ],
            "dbs": [],
            "servers": [],
            "buses": [],
            "langs": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/alternatives/server-django/Dockerfile",
            "cmd": "pip-compile requirements-dev.in;     pip-compile requirements-prod.in;     pip3 install -r requirements-dev.txt;     python -m debugpy --listen 0.0.0.0:9229 -m       src/manage.py runserver 0.0.0.0:8080",
            "cmd_keywords": [
                "pip",
                "requirements",
                "compile",
                "dev",
                "prod"
            ],
            "from": "python",
            "from_full": "python:3.9-alpine3.13",
            "keywords": [
                "dev",
                "pip",
                "install",
                "apk",
                "add"
            ],
            "dbs": [
                "postgresql"
            ],
            "servers": [],
            "buses": [],
            "langs": [
                "python"
            ],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/admin/Dockerfile",
            "cmd": "npm install; npm run start",
            "cmd_keywords": [
                "npm",
                "install",
                "run",
                "start"
            ],
            "from": "ghcr.io/taitounited/cypress",
            "from_full": "ghcr.io/taitounited/cypress:8.7.0",
            "keywords": [
                "mkdir",
                "develop",
                "npm",
                "install",
                "loglevel"
            ],
            "dbs": [],
            "servers": [],
            "buses": [],
            "langs": [],
            "gates": [],
            "monitors": [],
            "discos": []
        }
    ],
    "structure": {
        "path": [],
        "num_services": 0,
        "services": [],
        "detected_dbs": {
            "num": 0,
            "names": [],
            "services": [],
            "shared_dbs": false
        }
    },
    "files": [
        {
            "path": "/alternatives/server-flask/requirements.txt",
            "dbs": [],
            "servers": [
                "flask"
            ],
            "buses": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/alternatives/server-django/requirements.txt",
            "dbs": [],
            "servers": [
                "django"
            ],
            "buses": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/alternatives/server-micronaut-java/settings.gradle",
            "dbs": [],
            "servers": [],
            "buses": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/alternatives/server-micronaut-java/build.gradle",
            "dbs": [
                "postgresql"
            ],
            "servers": [
                "spring"
            ],
            "buses": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/package.json",
            "dbs": [
                "sql"
            ],
            "servers": [],
            "buses": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/www/package.json",
            "dbs": [],
            "servers": [],
            "buses": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/www/site/package.json",
            "dbs": [],
            "servers": [],
            "buses": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/client/package.json",
            "dbs": [],
            "servers": [
                "node"
            ],
            "buses": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/worker/package.json",
            "dbs": [],
            "servers": [
                "node"
            ],
            "buses": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/server/package.json",
            "dbs": [],
            "servers": [
                "node"
            ],
            "buses": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/alternatives/server-flask/package.json",
            "dbs": [],
            "servers": [],
            "buses": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/alternatives/server-micronaut-java/package.json",
            "dbs": [],
            "servers": [],
            "buses": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/alternatives/server-django/package.json",
            "dbs": [],
            "servers": [],
            "buses": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/admin/package.json",
            "dbs": [],
            "servers": [
                "node"
            ],
            "buses": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/shared/package.json",
            "dbs": [],
            "servers": [],
            "buses": [],
            "gates": [],
            "monitors": [],
            "discos": []
        }
    ],
    "dbs": [
        "postgresql",
        "sql"
    ],
    "servers": [
        "spring",
        "node",
        "flask",
        "django"
    ],
    "buses": [],
    "langs": [
        "typescript",
        "python",
        "shell"
    ],
    "gates": [
        "nginx"
    ],
    "monitors": [],
    "discos": [],
    "num_services": 0,
    "shared_dbs": false,
    "num_dockers": 10,
    "images": [
        "ghcr.io/taitounited/cypress",
        "minio/minio",
        "adoptopenjdk/openjdk11-openj9",
        "nginx",
        "node",
        "python"
    ],
    "num_dbs": 2,
    "num_servers": 4,
    "num_buses": 0,
    "num_langs": 3,
    "num_gates": 1,
    "num_monitors": 0,
    "num_discos": 0,
    "num_files": 26,
    "avg_size_service": 881.7
}