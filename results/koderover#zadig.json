{
    "url": "git://github.com/koderover/zadig.git",
    "name": "koderover/zadig",
    "commiters": 30,
    "size": 6692,
    "languages": [
        "go"
    ],
    "dockers": [
        {
            "path": "/examples/voting-app/Dockerfile",
            "cmd": "",
            "cmd_keywords": [],
            "from": "python",
            "from_full": "python:3.6-alpine",
            "keywords": [
                "apk",
                "mirrors",
                "aliyun",
                "com",
                "pytest"
            ],
            "dbs": [],
            "servers": [],
            "buses": [],
            "langs": [
                "python"
            ],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/examples/voting-app/result/Dockerfile",
            "cmd": "node server.js",
            "cmd_keywords": [
                "node",
                "server"
            ],
            "from": "node",
            "from_full": "node:10-slim",
            "keywords": [
                "npm",
                "node",
                "modules",
                "install",
                "nodemon"
            ],
            "dbs": [],
            "servers": [
                "node"
            ],
            "buses": [],
            "langs": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/examples/voting-app/result/dotnet/Dockerfile",
            "cmd": "",
            "cmd_keywords": [],
            "from": "microsoft/dotnet",
            "from_full": "microsoft/dotnet:2.1-aspnetcore-runtime-nanoserver-sac2016",
            "keywords": [
                "dotnet",
                "restore",
                "publish",
                "release",
                "out"
            ],
            "dbs": [],
            "servers": [],
            "buses": [],
            "langs": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/examples/voting-app/result/tests/Dockerfile",
            "cmd": "/app/tests.sh",
            "cmd_keywords": [
                "app",
                "tests"
            ],
            "from": "wernight/phantomjs",
            "from_full": "wernight/phantomjs",
            "keywords": [
                "apt",
                "sed",
                "debian",
                "org",
                "mirrors"
            ],
            "dbs": [],
            "servers": [],
            "buses": [],
            "langs": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/examples/voting-app/vote/Dockerfile",
            "cmd": "gunicorn app:app -b 0.0.0.0:80 --log-file - --access-logfile - --workers 4 --keep-alive 0",
            "cmd_keywords": [
                "app",
                "gunicorn",
                "log",
                "file",
                "access"
            ],
            "from": "python",
            "from_full": "python:3.6-alpine",
            "keywords": [
                "pip",
                "install",
                "requirements",
                "txt",
                "https"
            ],
            "dbs": [],
            "servers": [],
            "buses": [],
            "langs": [
                "python"
            ],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/examples/voting-app/vote/dotnet/Dockerfile",
            "cmd": "",
            "cmd_keywords": [],
            "from": "microsoft/dotnet",
            "from_full": "microsoft/dotnet:2.1-aspnetcore-runtime-nanoserver-sac2016",
            "keywords": [
                "dotnet",
                "restore",
                "publish",
                "release",
                "out"
            ],
            "dbs": [],
            "servers": [],
            "buses": [],
            "langs": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/examples/voting-app/worker/Dockerfile",
            "cmd": "dotnet src/Worker/Worker.dll",
            "cmd_keywords": [
                "worker",
                "dotnet",
                "src",
                "dll"
            ],
            "from": "mcr.microsoft.com/dotnet/sdk",
            "from_full": "mcr.microsoft.com/dotnet/sdk",
            "keywords": [
                "dotnet",
                "src",
                "worker",
                "restore",
                "minimal"
            ],
            "dbs": [],
            "servers": [],
            "buses": [],
            "langs": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/examples/voting-app/worker/dotnet/Dockerfile",
            "cmd": "",
            "cmd_keywords": [],
            "from": "microsoft/dotnet",
            "from_full": "microsoft/dotnet:2.1-runtime-nanoserver-sac2016",
            "keywords": [
                "dotnet",
                "restore",
                "publish",
                "release",
                "out"
            ],
            "dbs": [],
            "servers": [],
            "buses": [],
            "langs": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/examples/nginx/Dockerfile",
            "cmd": "",
            "cmd_keywords": [],
            "from": "ccr.ccs.tencentyun.com/shuhe/nginx",
            "from_full": "ccr.ccs.tencentyun.com/shuhe/nginx:stable",
            "keywords": [],
            "dbs": [],
            "servers": [],
            "buses": [],
            "langs": [],
            "gates": [
                "nginx"
            ],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/examples/website/Dockerfile",
            "cmd": "",
            "cmd_keywords": [],
            "from": "nginx",
            "from_full": "nginx:1.16.0",
            "keywords": [],
            "dbs": [],
            "servers": [],
            "buses": [],
            "langs": [],
            "gates": [
                "nginx"
            ],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/examples/multi-service-demo/Dockerfile",
            "cmd": "",
            "cmd_keywords": [],
            "from": "ubuntu",
            "from_full": "ubuntu:18.04",
            "keywords": [],
            "dbs": [],
            "servers": [],
            "buses": [],
            "langs": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/examples/microservice-demo/frontend/Dockerfile",
            "cmd": "",
            "cmd_keywords": [],
            "from": "nginx",
            "from_full": "nginx:1.16.0",
            "keywords": [
                "frontend",
                "make",
                "install",
                "dep",
                "build"
            ],
            "dbs": [],
            "servers": [],
            "buses": [],
            "langs": [],
            "gates": [
                "nginx"
            ],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/examples/microservice-demo/frontend/vm/Dockerfile",
            "cmd": "",
            "cmd_keywords": [],
            "from": "nginx",
            "from_full": "nginx:1.16.0",
            "keywords": [],
            "dbs": [],
            "servers": [],
            "buses": [],
            "langs": [],
            "gates": [
                "nginx"
            ],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/examples/microservice-demo/backend/Dockerfile",
            "cmd": "./backend",
            "cmd_keywords": [
                "backend"
            ],
            "from": "ubuntu",
            "from_full": "ubuntu:14.04",
            "keywords": [],
            "dbs": [],
            "servers": [],
            "buses": [],
            "langs": [],
            "gates": [],
            "monitors": [],
            "discos": []
        }
    ],
    "structure": {
        "path": [],
        "num_services": 0,
        "services": [],
        "detected_dbs": {
            "num": 0,
            "names": [],
            "services": [],
            "shared_dbs": false
        }
    },
    "files": [
        {
            "path": "/examples/voting-app/vote/requirements.txt",
            "dbs": [
                "redis"
            ],
            "servers": [
                "flask"
            ],
            "buses": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/examples/spring-boot-demo/pom.xml",
            "dbs": [],
            "servers": [
                "spring"
            ],
            "buses": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/examples/voting-app/worker/pom.xml",
            "dbs": [
                "postgresql",
                "redis"
            ],
            "servers": [
                "spring"
            ],
            "buses": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/examples/voting-app/result/package.json",
            "dbs": [],
            "servers": [
                "express"
            ],
            "buses": [],
            "gates": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/examples/microservice-demo/frontend/package.json",
            "dbs": [],
            "servers": [
                "node"
            ],
            "buses": [],
            "gates": [],
            "monitors": [],
            "discos": []
        }
    ],
    "dbs": [
        "postgresql",
        "redis"
    ],
    "servers": [
        "spring",
        "node",
        "flask",
        "express"
    ],
    "buses": [],
    "langs": [
        "go",
        "python"
    ],
    "gates": [
        "nginx"
    ],
    "monitors": [],
    "discos": [],
    "num_services": 0,
    "shared_dbs": false,
    "num_dockers": 14,
    "images": [
        "mcr.microsoft.com/dotnet/sdk",
        "ccr.ccs.tencentyun.com/shuhe/nginx",
        "nginx",
        "wernight/phantomjs",
        "python",
        "node",
        "ubuntu",
        "microsoft/dotnet"
    ],
    "num_dbs": 2,
    "num_servers": 4,
    "num_buses": 0,
    "num_langs": 2,
    "num_gates": 1,
    "num_monitors": 0,
    "num_discos": 0,
    "num_files": 20,
    "avg_size_service": 478.0
}