{
    "servers": [
        "flask",
        "jetty",
        "spring",
        "node",
        "tomcat",
        "django",
        "express",
        "busybox",
        "glassfish",
        "jboss"
    ],
    "name": "lucmichalski/vision-kube",
    "num_gates": 3,
    "avg_size_service": 16306.216346153846,
    "structure": {
        "services": [],
        "num_services": 0,
        "path": "/kube-system-plugins/containers-registry/docker-distribution/docker-compose.yml",
        "detected_dbs": {
            "num": 0,
            "names": [],
            "services": [],
            "shared_dbs": false
        }
    },
    "num_dbs": 20,
    "buses": [
        "amqp",
        "rabbitmq",
        "kafka",
        "stomp"
    ],
    "langs": [
        "ruby",
        "python",
        "php",
        "perl",
        "c++",
        "scratch",
        "gcc",
        "golang",
        "html",
        "jupyternotebook",
        "cmake",
        "bash",
        "java"
    ],
    "shared_dbs": false,
    "files": [
        {
            "gates": [],
            "buses": [],
            "path": "/kube-system-plugins/cluster-insight/collector/requirements.txt",
            "servers": [
                "flask"
            ],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/kube-local-compose/kubernetes/cluster/juju/charms/trusty/kubernetes/requirements.txt",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/kube-local-compose/kubernetes/cluster/juju/charms/trusty/kubernetes-master/requirements.txt",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/social_networks/reveal-user-classification/requirements.txt",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/knowledge_graphs/foodpedia/foodpedia-parser-v2/requirements.txt",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/deep-vision/deephashing-fir-2015/examples/web_demo/requirements.txt",
            "servers": [
                "flask"
            ],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/deep-vision/deephashing-fir-2015/python/requirements.txt",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/deep-vision/caffe-fast-rcnn/examples/web_demo/requirements.txt",
            "servers": [
                "flask"
            ],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/deep-vision/caffe-fast-rcnn/python/requirements.txt",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/deep-vision/caffe-frameworks/caffe/examples/web_demo/requirements.txt",
            "servers": [
                "flask"
            ],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/deep-vision/caffe-frameworks/caffe/python/requirements.txt",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/deep-vision/caffe-frameworks/DIGITS/requirements.txt",
            "servers": [
                "flask"
            ],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/deep-vision/caffe-frameworks/DIGITS/examples/classification/requirements.txt",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/deep-vision/deepbinary-ssdh-caffe/examples/web_demo/requirements.txt",
            "servers": [
                "flask"
            ],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/deep-vision/deepbinary-ssdh-caffe/python/requirements.txt",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/mir-vision/axes-project/axes-home/server/requirements.txt",
            "servers": [
                "flask"
            ],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/mir-vision/axes-project/cpuvisor-srv/requirements.txt",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/mir-vision/axes-project/cpuvisor-srv/webservice/requirements.txt",
            "servers": [
                "flask"
            ],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/crawlers/imsearch-tools/requirements.txt",
            "servers": [
                "flask"
            ],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/crawlers/GoogleScraper/requirements.txt",
            "servers": [],
            "dbs": [
                "redis"
            ],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/images-services/europeana-creative-IIIF/embed/requirements.txt",
            "servers": [
                "flask"
            ],
            "dbs": [
                "redis"
            ],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/images-services/europeana-creative-IIIF/ingest/requirements.txt",
            "servers": [
                "flask"
            ],
            "dbs": [
                "redis"
            ],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [
                "kong"
            ],
            "buses": [],
            "path": "/services/reverse_proxies/kong/backend/deployment/requirements.txt",
            "servers": [
                "django"
            ],
            "dbs": [
                "redis"
            ],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/kube-local-compose/kubernetes/examples/cassandra/java/pom.xml",
            "servers": [],
            "dbs": [
                "cassandra"
            ],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [
                "kafka"
            ],
            "path": "/services/metrics_benchmark/oryx/pom.xml",
            "servers": [
                "jetty",
                "express",
                "tomcat",
                "glassfish",
                "spring"
            ],
            "dbs": [
                "zookeeper",
                "max",
                "velocity"
            ],
            "monitors": [],
            "discos": [
                "zookeeper"
            ]
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/metrics_benchmark/oryx/deploy/oryx-speed/pom.xml",
            "servers": [
                "express"
            ],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/metrics_benchmark/oryx/deploy/oryx-batch/pom.xml",
            "servers": [
                "express"
            ],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/metrics_benchmark/oryx/deploy/oryx-serving/pom.xml",
            "servers": [
                "express",
                "glassfish"
            ],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/metrics_benchmark/oryx/app/example/pom.xml",
            "servers": [
                "express"
            ],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/metrics_benchmark/oryx/app/oryx-app-api/pom.xml",
            "servers": [
                "express"
            ],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/metrics_benchmark/oryx/app/oryx-app-common/pom.xml",
            "servers": [
                "express"
            ],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [
                "kafka"
            ],
            "path": "/services/metrics_benchmark/oryx/app/oryx-app-mllib/pom.xml",
            "servers": [
                "express"
            ],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [
                "kafka"
            ],
            "path": "/services/metrics_benchmark/oryx/app/oryx-app-serving/pom.xml",
            "servers": [
                "express",
                "glassfish"
            ],
            "dbs": [
                "zookeeper"
            ],
            "monitors": [],
            "discos": [
                "zookeeper"
            ]
        },
        {
            "gates": [],
            "buses": [
                "kafka"
            ],
            "path": "/services/metrics_benchmark/oryx/app/oryx-app/pom.xml",
            "servers": [
                "express"
            ],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [
                "kafka"
            ],
            "path": "/services/metrics_benchmark/oryx/framework/kafka-util/pom.xml",
            "servers": [
                "express"
            ],
            "dbs": [
                "zookeeper"
            ],
            "monitors": [],
            "discos": [
                "zookeeper"
            ]
        },
        {
            "gates": [],
            "buses": [
                "kafka"
            ],
            "path": "/services/metrics_benchmark/oryx/framework/oryx-lambda-serving/pom.xml",
            "servers": [
                "express",
                "tomcat",
                "glassfish",
                "spring"
            ],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/metrics_benchmark/oryx/framework/oryx-common/pom.xml",
            "servers": [
                "express"
            ],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/metrics_benchmark/oryx/framework/oryx-api/pom.xml",
            "servers": [
                "express"
            ],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [
                "kafka"
            ],
            "path": "/services/metrics_benchmark/oryx/framework/oryx-lambda/pom.xml",
            "servers": [
                "express"
            ],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [
                "kafka"
            ],
            "path": "/services/metrics_benchmark/oryx/framework/oryx-ml/pom.xml",
            "servers": [
                "express"
            ],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [
                "amqp",
                "rabbitmq"
            ],
            "path": "/services/social_networks/mklab-stream-manager/pom.xml",
            "servers": [],
            "dbs": [
                "hbase"
            ],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/social_networks/image-verification-corpus/mediaeval2015/src/featureextraction/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/social_networks/socialmedia-abstractions/pom.xml",
            "servers": [],
            "dbs": [
                "nexus"
            ],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/social_networks/simmo/pom.xml",
            "servers": [],
            "dbs": [
                "mongodb",
                "nexus",
                "oracle"
            ],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/security/webcrawler-verifier/pom.xml",
            "servers": [],
            "dbs": [
                "nexus"
            ],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [
                "gateway"
            ],
            "buses": [],
            "path": "/services/big-data/spring-cloud-polyglot-persistence-example/pom.xml",
            "servers": [
                "spring"
            ],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [
                "zuul"
            ],
            "buses": [],
            "path": "/services/big-data/spring-cloud-polyglot-persistence-example/movie-microservice/pom.xml",
            "servers": [
                "spring"
            ],
            "dbs": [
                "mysql",
                "hsqldb"
            ],
            "monitors": [],
            "discos": [
                "eureka"
            ]
        },
        {
            "gates": [
                "zuul",
                "gateway"
            ],
            "buses": [],
            "path": "/services/big-data/spring-cloud-polyglot-persistence-example/api-gateway-microservice/pom.xml",
            "servers": [
                "spring"
            ],
            "dbs": [],
            "monitors": [],
            "discos": [
                "eureka"
            ]
        },
        {
            "gates": [
                "zuul"
            ],
            "buses": [],
            "path": "/services/big-data/spring-cloud-polyglot-persistence-example/rating-microservice/pom.xml",
            "servers": [
                "spring"
            ],
            "dbs": [],
            "monitors": [],
            "discos": [
                "eureka"
            ]
        },
        {
            "gates": [
                "zuul"
            ],
            "buses": [],
            "path": "/services/big-data/spring-cloud-polyglot-persistence-example/ui-search/pom.xml",
            "servers": [
                "spring"
            ],
            "dbs": [],
            "monitors": [],
            "discos": [
                "eureka"
            ]
        },
        {
            "gates": [
                "zuul"
            ],
            "buses": [],
            "path": "/services/big-data/spring-cloud-polyglot-persistence-example/config-microservice/pom.xml",
            "servers": [
                "spring"
            ],
            "dbs": [],
            "monitors": [],
            "discos": [
                "eureka"
            ]
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/big-data/spring-cloud-polyglot-persistence-example/discovery-microservice/pom.xml",
            "servers": [
                "spring"
            ],
            "dbs": [],
            "monitors": [],
            "discos": [
                "eureka"
            ]
        },
        {
            "gates": [
                "zuul"
            ],
            "buses": [],
            "path": "/services/big-data/spring-cloud-polyglot-persistence-example/user-microservice/pom.xml",
            "servers": [
                "spring"
            ],
            "dbs": [
                "couchbase"
            ],
            "monitors": [],
            "discos": [
                "eureka"
            ]
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/big-data/spring-doge-microservice/pom.xml",
            "servers": [
                "spring"
            ],
            "dbs": [],
            "monitors": [],
            "discos": [
                "eureka"
            ]
        },
        {
            "gates": [],
            "buses": [
                "amqp"
            ],
            "path": "/services/big-data/spring-doge-microservice/doge-service/pom.xml",
            "servers": [
                "spring"
            ],
            "dbs": [
                "mongodb"
            ],
            "monitors": [],
            "discos": [
                "eureka"
            ]
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/big-data/spring-doge-microservice/hystrix-service/pom.xml",
            "servers": [
                "spring"
            ],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/big-data/spring-doge-microservice/config-service/pom.xml",
            "servers": [
                "spring"
            ],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/big-data/spring-doge-microservice/account-service/pom.xml",
            "servers": [
                "spring"
            ],
            "dbs": [],
            "monitors": [],
            "discos": [
                "eureka"
            ]
        },
        {
            "gates": [
                "zuul"
            ],
            "buses": [],
            "path": "/services/big-data/spring-doge-microservice/webapp/pom.xml",
            "servers": [
                "spring"
            ],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/big-data/spring-doge-microservice/eureka-service/pom.xml",
            "servers": [
                "spring"
            ],
            "dbs": [],
            "monitors": [],
            "discos": [
                "eureka"
            ]
        },
        {
            "gates": [],
            "buses": [
                "amqp",
                "rabbitmq"
            ],
            "path": "/services/big-data/neo4j-mazerunner/src/spark/pom.xml",
            "servers": [
                "jetty"
            ],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [
                "amqp",
                "rabbitmq"
            ],
            "path": "/services/big-data/neo4j-mazerunner/src/extension/pom.xml",
            "servers": [
                "spring"
            ],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [
                "kafka"
            ],
            "path": "/services/big-data/spring-cloud-stream/pom.xml",
            "servers": [
                "spring"
            ],
            "dbs": [
                "redis"
            ],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/big-data/spring-cloud-stream/docs/pom.xml",
            "servers": [
                "spring"
            ],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/big-data/spring-cloud-stream/spring-cloud-stream-test-support/pom.xml",
            "servers": [
                "spring"
            ],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/big-data/spring-cloud-stream/spring-cloud-stream-module-launcher/pom.xml",
            "servers": [
                "jetty",
                "spring"
            ],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/big-data/spring-cloud-stream/spring-cloud-stream-codec/pom.xml",
            "servers": [
                "spring"
            ],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [
                "kafka"
            ],
            "path": "/services/big-data/spring-cloud-stream/spring-cloud-stream-starters/pom.xml",
            "servers": [
                "spring"
            ],
            "dbs": [
                "redis"
            ],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [
                "kafka"
            ],
            "path": "/services/big-data/spring-cloud-stream/spring-cloud-stream-starters/spring-cloud-starter-stream-kafka/pom.xml",
            "servers": [
                "spring"
            ],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/big-data/spring-cloud-stream/spring-cloud-stream-starters/spring-cloud-starter-stream-rabbit/pom.xml",
            "servers": [
                "spring"
            ],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/big-data/spring-cloud-stream/spring-cloud-stream-starters/spring-cloud-starter-stream-redis/pom.xml",
            "servers": [
                "spring"
            ],
            "dbs": [
                "redis"
            ],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/big-data/spring-cloud-stream/spring-cloud-stream-rxjava/pom.xml",
            "servers": [
                "spring"
            ],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/big-data/spring-cloud-stream/spring-cloud-stream/pom.xml",
            "servers": [
                "spring"
            ],
            "dbs": [
                "redis"
            ],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [
                "kafka"
            ],
            "path": "/services/big-data/spring-cloud-stream/spring-cloud-stream-binders/pom.xml",
            "servers": [
                "spring"
            ],
            "dbs": [
                "redis"
            ],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/big-data/spring-cloud-stream/spring-cloud-stream-binders/spring-cloud-stream-binder-spi/pom.xml",
            "servers": [
                "spring"
            ],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/big-data/spring-cloud-stream/spring-cloud-stream-binders/spring-cloud-stream-binder-redis/pom.xml",
            "servers": [
                "spring"
            ],
            "dbs": [
                "redis"
            ],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [
                "kafka"
            ],
            "path": "/services/big-data/spring-cloud-stream/spring-cloud-stream-binders/spring-cloud-stream-binder-kafka/pom.xml",
            "servers": [
                "spring"
            ],
            "dbs": [],
            "monitors": [],
            "discos": [
                "avro"
            ]
        },
        {
            "gates": [],
            "buses": [
                "amqp"
            ],
            "path": "/services/big-data/spring-cloud-stream/spring-cloud-stream-binders/spring-cloud-stream-binder-test/pom.xml",
            "servers": [
                "spring"
            ],
            "dbs": [],
            "monitors": [],
            "discos": [
                "avro"
            ]
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/big-data/spring-cloud-stream/spring-cloud-stream-binders/spring-cloud-stream-binder-local/pom.xml",
            "servers": [
                "spring"
            ],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [
                "amqp",
                "rabbitmq"
            ],
            "path": "/services/big-data/spring-cloud-stream/spring-cloud-stream-binders/spring-cloud-stream-binder-rabbit/pom.xml",
            "servers": [
                "spring"
            ],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/big-data/spring-cloud-stream/spring-cloud-stream-samples/pom.xml",
            "servers": [
                "spring"
            ],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/big-data/spring-cloud-stream/spring-cloud-stream-samples/extended/pom.xml",
            "servers": [
                "spring"
            ],
            "dbs": [
                "redis"
            ],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/big-data/spring-cloud-stream/spring-cloud-stream-samples/sink/pom.xml",
            "servers": [
                "spring"
            ],
            "dbs": [
                "redis"
            ],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/big-data/spring-cloud-stream/spring-cloud-stream-samples/double/pom.xml",
            "servers": [
                "spring"
            ],
            "dbs": [
                "redis"
            ],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/big-data/spring-cloud-stream/spring-cloud-stream-samples/source/pom.xml",
            "servers": [
                "spring"
            ],
            "dbs": [
                "redis"
            ],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/big-data/spring-cloud-stream/spring-cloud-stream-samples/rxjava-processor/pom.xml",
            "servers": [
                "spring"
            ],
            "dbs": [
                "redis"
            ],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/big-data/spring-cloud-stream/spring-cloud-stream-samples/transform/pom.xml",
            "servers": [
                "spring"
            ],
            "dbs": [
                "redis"
            ],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/big-data/spring-cloud-stream/spring-cloud-stream-samples/tap/pom.xml",
            "servers": [
                "spring"
            ],
            "dbs": [
                "redis"
            ],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/big-data/spring-data-commons/pom.xml",
            "servers": [
                "spring"
            ],
            "dbs": [
                "enterprise"
            ],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [
                "gateway"
            ],
            "buses": [],
            "path": "/services/big-data/spring-cloud-microservice-example/pom.xml",
            "servers": [
                "spring"
            ],
            "dbs": [],
            "monitors": [],
            "discos": [
                "consul"
            ]
        },
        {
            "gates": [
                "zuul"
            ],
            "buses": [],
            "path": "/services/big-data/spring-cloud-microservice-example/users-microservice/pom.xml",
            "servers": [
                "spring"
            ],
            "dbs": [],
            "monitors": [],
            "discos": [
                "eureka"
            ]
        },
        {
            "gates": [
                "zuul"
            ],
            "buses": [],
            "path": "/services/big-data/spring-cloud-microservice-example/movie-microservice/pom.xml",
            "servers": [
                "spring"
            ],
            "dbs": [],
            "monitors": [],
            "discos": [
                "eureka"
            ]
        },
        {
            "gates": [
                "zuul",
                "gateway"
            ],
            "buses": [],
            "path": "/services/big-data/spring-cloud-microservice-example/api-gateway-microservice/pom.xml",
            "servers": [
                "spring"
            ],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/big-data/spring-cloud-microservice-example/hystrix-dashboard/pom.xml",
            "servers": [
                "spring"
            ],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [
                "zuul"
            ],
            "buses": [],
            "path": "/services/big-data/spring-cloud-microservice-example/recommendation-microservice/pom.xml",
            "servers": [
                "spring"
            ],
            "dbs": [],
            "monitors": [],
            "discos": [
                "eureka"
            ]
        },
        {
            "gates": [
                "zuul"
            ],
            "buses": [],
            "path": "/services/big-data/spring-cloud-microservice-example/movies-ui/pom.xml",
            "servers": [
                "spring"
            ],
            "dbs": [],
            "monitors": [],
            "discos": [
                "eureka"
            ]
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/big-data/spring-cloud-microservice-example/config-microservice/pom.xml",
            "servers": [
                "spring"
            ],
            "dbs": [],
            "monitors": [],
            "discos": [
                "eureka"
            ]
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/big-data/spring-cloud-microservice-example/discovery-microservice/pom.xml",
            "servers": [
                "spring"
            ],
            "dbs": [],
            "monitors": [],
            "discos": [
                "eureka"
            ]
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/big-data/spring-cloud-microservice-example/consul-microservice/pom.xml",
            "servers": [
                "spring"
            ],
            "dbs": [],
            "monitors": [],
            "discos": [
                "consul"
            ]
        },
        {
            "path": "/services/knowledge_graphs/natural-text-processing/language-detector/pom.xml"
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/knowledge_graphs/foodpedia/foodpedia-parser/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/knowledge_graphs/foodpedia/foodpedia-home/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/services/knowledge_graphs/Europeana-Cloud/pom.xml"
        },
        {
            "gates": [],
            "buses": [
                "kafka"
            ],
            "path": "/services/knowledge_graphs/Europeana-Cloud/service/dls/pom.xml",
            "servers": [
                "glassfish",
                "spring"
            ],
            "dbs": [
                "zookeeper"
            ],
            "monitors": [],
            "discos": [
                "zookeeper"
            ]
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/knowledge_graphs/Europeana-Cloud/service/ics/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/knowledge_graphs/Europeana-Cloud/service/ics/converter/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/knowledge_graphs/Europeana-Cloud/service/ics/rest/pom.xml",
            "servers": [
                "glassfish",
                "spring"
            ],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/knowledge_graphs/Europeana-Cloud/service/mcs/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [
                "kafka"
            ],
            "path": "/services/knowledge_graphs/Europeana-Cloud/service/mcs/rest/pom.xml",
            "servers": [
                "glassfish",
                "spring"
            ],
            "dbs": [
                "zookeeper",
                "cassandra"
            ],
            "monitors": [],
            "discos": [
                "zookeeper"
            ]
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/knowledge_graphs/Europeana-Cloud/service/mcs/driver/pom.xml",
            "servers": [
                "glassfish"
            ],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/knowledge_graphs/Europeana-Cloud/service/mcs/inmemory/pom.xml",
            "servers": [
                "glassfish",
                "spring"
            ],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/knowledge_graphs/Europeana-Cloud/service/mcs/utils/pom.xml",
            "servers": [
                "glassfish"
            ],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/knowledge_graphs/Europeana-Cloud/service/mcs/api/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [
                "kafka"
            ],
            "path": "/services/knowledge_graphs/Europeana-Cloud/service/mcs/persistent/pom.xml",
            "servers": [
                "spring"
            ],
            "dbs": [
                "cassandra"
            ],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/knowledge_graphs/Europeana-Cloud/service/uis/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [
                "kafka"
            ],
            "path": "/services/knowledge_graphs/Europeana-Cloud/service/uis/rest/pom.xml",
            "servers": [
                "glassfish",
                "spring"
            ],
            "dbs": [
                "zookeeper",
                "cassandra"
            ],
            "monitors": [],
            "discos": [
                "zookeeper"
            ]
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/knowledge_graphs/Europeana-Cloud/service/uis/registration/pom.xml",
            "servers": [
                "spring",
                "jboss"
            ],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/knowledge_graphs/Europeana-Cloud/service/uis/inmemory/pom.xml",
            "servers": [
                "spring"
            ],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/knowledge_graphs/Europeana-Cloud/service/uis/utils/pom.xml",
            "servers": [
                "spring"
            ],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/knowledge_graphs/Europeana-Cloud/service/uis/api/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/knowledge_graphs/Europeana-Cloud/service/uis/persistent/pom.xml",
            "servers": [
                "glassfish",
                "spring"
            ],
            "dbs": [
                "cassandra"
            ],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/knowledge_graphs/Europeana-Cloud/service/uis/rest-client-java/pom.xml",
            "servers": [
                "glassfish",
                "spring"
            ],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/knowledge_graphs/Europeana-Cloud/service/aas/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [
                "kafka"
            ],
            "path": "/services/knowledge_graphs/Europeana-Cloud/service/aas/rest/pom.xml",
            "servers": [
                "glassfish",
                "spring"
            ],
            "dbs": [
                "zookeeper"
            ],
            "monitors": [],
            "discos": [
                "zookeeper"
            ]
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/knowledge_graphs/Europeana-Cloud/service/aas/authentication/pom.xml",
            "servers": [
                "spring"
            ],
            "dbs": [
                "cassandra"
            ],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/knowledge_graphs/Europeana-Cloud/service/aas/authorization/pom.xml",
            "servers": [
                "spring"
            ],
            "dbs": [
                "cassandra"
            ],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/knowledge_graphs/Europeana-Cloud/service/aas/rest-client-java/pom.xml",
            "servers": [
                "glassfish",
                "spring"
            ],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [
                "kafka"
            ],
            "path": "/services/knowledge_graphs/Europeana-Cloud/service/commons/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [
                "kafka"
            ],
            "path": "/services/knowledge_graphs/Europeana-Cloud/service/dps/pom.xml",
            "servers": [],
            "dbs": [
                "cassandra"
            ],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/knowledge_graphs/Europeana-Cloud/service/dps/zoo-service/pom.xml",
            "servers": [
                "spring"
            ],
            "dbs": [
                "zookeeper"
            ],
            "monitors": [],
            "discos": [
                "zookeeper"
            ]
        },
        {
            "gates": [],
            "buses": [
                "kafka"
            ],
            "path": "/services/knowledge_graphs/Europeana-Cloud/service/dps/rest/pom.xml",
            "servers": [
                "tomcat",
                "glassfish",
                "spring"
            ],
            "dbs": [
                "zookeeper",
                "cassandra"
            ],
            "monitors": [],
            "discos": [
                "zookeeper"
            ]
        },
        {
            "gates": [],
            "buses": [
                "kafka"
            ],
            "path": "/services/knowledge_graphs/Europeana-Cloud/service/dps/kafka-service/pom.xml",
            "servers": [
                "spring"
            ],
            "dbs": [
                "zookeeper"
            ],
            "monitors": [],
            "discos": [
                "zookeeper"
            ]
        },
        {
            "gates": [],
            "buses": [
                "kafka"
            ],
            "path": "/services/knowledge_graphs/Europeana-Cloud/service/dps/storm/examples/pom.xml",
            "servers": [
                "spring"
            ],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/knowledge_graphs/Europeana-Cloud/service/dps/storm/topologies/extract_and_index/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [
                "kafka"
            ],
            "path": "/services/knowledge_graphs/Europeana-Cloud/service/dps/storm/topologies/text/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [
                "kafka"
            ],
            "path": "/services/knowledge_graphs/Europeana-Cloud/service/dps/storm/topologies/xslt/pom.xml",
            "servers": [
                "spring"
            ],
            "dbs": [
                "zookeeper"
            ],
            "monitors": [],
            "discos": [
                "zookeeper"
            ]
        },
        {
            "gates": [],
            "buses": [
                "kafka"
            ],
            "path": "/services/knowledge_graphs/Europeana-Cloud/service/dps/storm/topologies/indexer/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/knowledge_graphs/Europeana-Cloud/service/dps/storm/io/pom.xml",
            "servers": [
                "spring"
            ],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/knowledge_graphs/Europeana-Cloud/service/dps/storm/common/pom.xml",
            "servers": [
                "spring"
            ],
            "dbs": [
                "cassandra"
            ],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [
                "kafka"
            ],
            "path": "/services/knowledge_graphs/Europeana-Cloud/service/dps/storm/kafka/pom.xml",
            "servers": [
                "spring"
            ],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/knowledge_graphs/Europeana-Cloud/service/dps/storm/transform/text/pom.xml",
            "servers": [
                "jetty",
                "spring"
            ],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/knowledge_graphs/Europeana-Cloud/service/dps/storm/transform/xslt/pom.xml",
            "servers": [
                "spring"
            ],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/knowledge_graphs/Europeana-Cloud/service/dps/cassandra/pom.xml",
            "servers": [],
            "dbs": [
                "cassandra"
            ],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/knowledge_graphs/Europeana-Cloud/service/dps/similarity/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/knowledge_graphs/Europeana-Cloud/service/dps/api/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/knowledge_graphs/Europeana-Cloud/service/dps/index/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/knowledge_graphs/Europeana-Cloud/service/dps/rest-client-java/pom.xml",
            "servers": [
                "glassfish",
                "spring"
            ],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/knowledge_graphs/Europeana-Cloud/service/cos/pom.xml",
            "servers": [
                "spring",
                "tomcat",
                "jboss"
            ],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/knowledge_graphs/Europeana-Cloud/integration/pom.xml",
            "servers": [
                "glassfish",
                "spring"
            ],
            "dbs": [
                "cassandra"
            ],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/knowledge_graphs/Europeana-Cloud/solr/pom.xml",
            "servers": [
                "tomcat"
            ],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/knowledge_graphs/Europeana-Cloud/solr/custom/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/knowledge_graphs/Europeana-Cloud/solr/distr/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/knowledge_graphs/Europeana-Cloud/common/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/knowledge_graphs/Europeana-Cloud/tools/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/knowledge_graphs/Europeana-Cloud/tools/ecloud-swift-migration-tool/EuropeanaSwiftMigrate/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/knowledge_graphs/Europeana-Cloud/tools/ecloud-dlf-ingestion-tool/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/knowledge_graphs/Europeana-Cloud/cassandra-connector/pom.xml",
            "servers": [
                "spring"
            ],
            "dbs": [
                "cassandra"
            ],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/deep-vision/deeplearning4j/deeplearning4j/pom.xml",
            "servers": [
                "express",
                "spring"
            ],
            "dbs": [
                "nexus"
            ],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/deep-vision/deeplearning4j/deeplearning4j/dl4j-caffe/pom.xml",
            "servers": [
                "spring"
            ],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/deep-vision/deeplearning4j/deeplearning4j/deeplearning4j-ui/pom.xml",
            "servers": [
                "express",
                "glassfish",
                "spring"
            ],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/deep-vision/deeplearning4j/deeplearning4j/deeplearning4j-cli/pom.xml",
            "servers": [
                "express"
            ],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/deep-vision/deeplearning4j/deeplearning4j/deeplearning4j-cli/deeplearning4j-cli-api/pom.xml",
            "servers": [
                "express",
                "spring"
            ],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/deep-vision/deeplearning4j/deeplearning4j/deeplearning4j-scaleout/pom.xml",
            "servers": [
                "express"
            ],
            "dbs": [
                "zookeeper"
            ],
            "monitors": [],
            "discos": [
                "zookeeper"
            ]
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/deep-vision/deeplearning4j/deeplearning4j/deeplearning4j-scaleout/hadoop-yarn/pom.xml",
            "servers": [
                "express"
            ],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/deep-vision/deeplearning4j/deeplearning4j/deeplearning4j-scaleout/hadoop-yarn/deeplearning4j-nlp-yarn/pom.xml",
            "servers": [
                "express"
            ],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/deep-vision/deeplearning4j/deeplearning4j/deeplearning4j-scaleout/hadoop-yarn/deeplearning4j-hadoop/pom.xml",
            "servers": [
                "express",
                "jboss"
            ],
            "dbs": [
                "zookeeper"
            ],
            "monitors": [],
            "discos": [
                "zookeeper"
            ]
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/deep-vision/deeplearning4j/deeplearning4j/deeplearning4j-scaleout/hadoop-yarn/cdh4/pom.xml",
            "servers": [
                "express"
            ],
            "dbs": [],
            "monitors": [],
            "discos": [
                "avro"
            ]
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/deep-vision/deeplearning4j/deeplearning4j/deeplearning4j-scaleout/deeplearning4j-scaleout-api/pom.xml",
            "servers": [
                "express"
            ],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/deep-vision/deeplearning4j/deeplearning4j/deeplearning4j-scaleout/deeplearning4j-scaleout-zookeeper/pom.xml",
            "servers": [
                "express"
            ],
            "dbs": [
                "zookeeper"
            ],
            "monitors": [],
            "discos": [
                "zookeeper"
            ]
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/deep-vision/deeplearning4j/deeplearning4j/deeplearning4j-scaleout/spark/pom.xml",
            "servers": [
                "express"
            ],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/deep-vision/deeplearning4j/deeplearning4j/deeplearning4j-scaleout/spark/dl4j-spark-ml/pom.xml",
            "servers": [
                "express"
            ],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/deep-vision/deeplearning4j/deeplearning4j/deeplearning4j-scaleout/spark/dl4j-spark/pom.xml",
            "servers": [
                "express"
            ],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/deep-vision/deeplearning4j/deeplearning4j/deeplearning4j-scaleout/spark/dl4j-spark-nlp/pom.xml",
            "servers": [
                "express"
            ],
            "dbs": [
                "hazelcast"
            ],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/deep-vision/deeplearning4j/deeplearning4j/deeplearning4j-scaleout/deeplearning4j-aws/pom.xml",
            "servers": [
                "express"
            ],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/deep-vision/deeplearning4j/deeplearning4j/deeplearning4j-scaleout/deeplearning4j-scaleout-akka/pom.xml",
            "servers": [
                "express",
                "jboss",
                "spring"
            ],
            "dbs": [
                "zookeeper",
                "hazelcast"
            ],
            "monitors": [],
            "discos": [
                "zookeeper"
            ]
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/deep-vision/deeplearning4j/deeplearning4j/deeplearning4j-scaleout/deeplearning4j-nlp/pom.xml",
            "servers": [
                "express",
                "spring"
            ],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/deep-vision/deeplearning4j/deeplearning4j/dl4j-test-resources/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/deep-vision/deeplearning4j/deeplearning4j/deeplearning4j-core/pom.xml",
            "servers": [
                "express",
                "spring"
            ],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/deep-vision/deeplearning4j/scene-classification-spark/pom.xml",
            "servers": [
                "spring"
            ],
            "dbs": [
                "nexus"
            ],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/mir-vision/multimedia-indexing/pom.xml",
            "servers": [],
            "dbs": [
                "nexus",
                "oracle"
            ],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [
                "kafka"
            ],
            "path": "/services/vision/opencv-vision/storm/pom.xml",
            "servers": [
                "express",
                "jboss",
                "jetty"
            ],
            "dbs": [
                "zookeeper",
                "foundation",
                "redis",
                "hbase",
                "derby"
            ],
            "monitors": [],
            "discos": [
                "zookeeper",
                "thrift"
            ]
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/opencv-vision/storm/storm-multilang/javascript/pom.xml",
            "servers": [
                "express"
            ],
            "dbs": [
                "foundation"
            ],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/opencv-vision/storm/storm-multilang/ruby/pom.xml",
            "servers": [
                "express"
            ],
            "dbs": [
                "foundation"
            ],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/opencv-vision/storm/storm-multilang/python/pom.xml",
            "servers": [
                "express"
            ],
            "dbs": [
                "foundation"
            ],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/opencv-vision/storm/storm-dist/binary/pom.xml",
            "servers": [
                "express"
            ],
            "dbs": [
                "foundation"
            ],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/opencv-vision/storm/storm-dist/source/pom.xml",
            "servers": [
                "express"
            ],
            "dbs": [
                "foundation"
            ],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [
                "kafka"
            ],
            "path": "/services/vision/opencv-vision/storm/examples/storm-starter/pom.xml",
            "servers": [
                "express"
            ],
            "dbs": [
                "zookeeper",
                "foundation"
            ],
            "monitors": [],
            "discos": [
                "zookeeper"
            ]
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/opencv-vision/storm/storm-buildtools/storm-maven-plugins/pom.xml",
            "servers": [
                "express"
            ],
            "dbs": [
                "foundation"
            ],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/opencv-vision/storm/storm-buildtools/maven-shade-clojure-transformer/pom.xml",
            "servers": [
                "express"
            ],
            "dbs": [
                "foundation"
            ],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [
                "kafka"
            ],
            "path": "/services/vision/opencv-vision/storm/external/flux/pom.xml",
            "servers": [
                "express"
            ],
            "dbs": [
                "zookeeper",
                "foundation"
            ],
            "monitors": [],
            "discos": [
                "zookeeper"
            ]
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/opencv-vision/storm/external/flux/flux-wrappers/pom.xml",
            "servers": [
                "express"
            ],
            "dbs": [
                "foundation"
            ],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [
                "kafka"
            ],
            "path": "/services/vision/opencv-vision/storm/external/flux/flux-examples/pom.xml",
            "servers": [
                "express",
                "jetty"
            ],
            "dbs": [
                "zookeeper",
                "foundation",
                "hbase"
            ],
            "monitors": [],
            "discos": [
                "zookeeper"
            ]
        },
        {
            "gates": [],
            "buses": [
                "kafka"
            ],
            "path": "/services/vision/opencv-vision/storm/external/flux/flux-core/pom.xml",
            "servers": [
                "express"
            ],
            "dbs": [
                "foundation",
                "hbase"
            ],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/opencv-vision/storm/external/storm-solr/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/opencv-vision/storm/external/storm-elasticsearch/pom.xml",
            "servers": [
                "express"
            ],
            "dbs": [
                "foundation"
            ],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [
                "kafka"
            ],
            "path": "/services/vision/opencv-vision/storm/external/storm-kafka/pom.xml",
            "servers": [
                "express"
            ],
            "dbs": [
                "zookeeper",
                "foundation"
            ],
            "monitors": [],
            "discos": [
                "zookeeper"
            ]
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/opencv-vision/storm/external/storm-hbase/pom.xml",
            "servers": [
                "express"
            ],
            "dbs": [
                "zookeeper",
                "foundation",
                "hbase"
            ],
            "monitors": [],
            "discos": [
                "zookeeper"
            ]
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/opencv-vision/storm/external/storm-eventhubs/pom.xml",
            "servers": [
                "express"
            ],
            "dbs": [
                "foundation"
            ],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/opencv-vision/storm/external/storm-jdbc/pom.xml",
            "servers": [
                "express"
            ],
            "dbs": [
                "foundation",
                "sql",
                "hsqldb"
            ],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/opencv-vision/storm/external/storm-redis/pom.xml",
            "servers": [
                "express"
            ],
            "dbs": [
                "foundation",
                "redis"
            ],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/opencv-vision/storm/external/storm-hive/pom.xml",
            "servers": [
                "express"
            ],
            "dbs": [
                "foundation"
            ],
            "monitors": [],
            "discos": [
                "thrift"
            ]
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/opencv-vision/storm/external/storm-hdfs/pom.xml",
            "servers": [
                "express"
            ],
            "dbs": [
                "foundation"
            ],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/opencv-vision/storm/storm-core/pom.xml",
            "servers": [
                "express",
                "jboss",
                "jetty"
            ],
            "dbs": [
                "zookeeper",
                "foundation"
            ],
            "monitors": [],
            "discos": [
                "thrift",
                "zookeeper"
            ]
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/opencv-vision/storm-visual/pom.xml",
            "servers": [],
            "dbs": [
                "oracle"
            ],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/services/vision/svm-vision/CBIRetrieval/pom.xml"
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/imageterrier/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/imageterrier/ImageClusterTool/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/imageterrier/ImageTerrierTools/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/imageterrier/HadoopImageTerrier/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/imageterrier/ImageTerrier/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/pom.xml",
            "servers": [],
            "dbs": [
                "nexus"
            ],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/core/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/core/core/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/core/core-math/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/core/core-image/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/core/core-video/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/core/core-feature/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/core/core-citation/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/core/core-experiment/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/core/core-audio/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/core/core-aop-support/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/documentation/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/documentation/tutorial/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/documentation/tutorial/tutorial-code/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/documentation/tutorial/tutorial-pdf/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/documentation/tutorial/tutorial-html/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/documentation/tutorial/tutorial-content/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/archetypes/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/archetypes/openimaj-subproject-archetype/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/archetypes/openimaj-subproject-archetype/src/main/resources/archetype-resources/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/archetypes/openimaj-quickstart-archetype/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/archetypes/openimaj-quickstart-archetype/src/main/resources/archetype-resources/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/streams/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/streams/common-stream/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/streams/storm/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/streams/storm/core-storm/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/streams/storm/tools/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/streams/storm/tools/core-storm-tool/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/streams/storm/tools/StormTwitterPreprocessingTool/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/streams/storm/tools/NaiveBayesStorm/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/machine-learning/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/machine-learning/machine-learning/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/machine-learning/clustering/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/machine-learning/nearest-neighbour/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/hadoop/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/hadoop/core-hadoop/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/hadoop/tools/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/hadoop/tools/SequenceFileMerger/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/hadoop/tools/HadoopEXIFTool/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/hadoop/tools/HadoopDownloader/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/hadoop/tools/HadoopGlobalFeaturesTool/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/hadoop/tools/SequenceFileTool/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/hadoop/tools/core-hadoop-tool/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/hadoop/tools/SequenceFileIndexer/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/hadoop/tools/HadoopTwitterTokenTool/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/hadoop/tools/HadoopImageIndexer/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/hadoop/tools/HadoopFastKMeans/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/hadoop/tools/HadoopLocalFeaturesTool/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/hadoop/tools/HadoopTwitterPreprocessingTool/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/hadoop/tools/HadoopClusterQuantiserTool/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/thirdparty/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/thirdparty/ImprovedArgs4J/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/thirdparty/JTransforms/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/thirdparty/MatrixLib/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/thirdparty/FaceTracker/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/thirdparty/IREval/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/thirdparty/tld/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/thirdparty/klt-tracker/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/thirdparty/processing-core/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/audio/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/audio/audio-processing/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/hardware/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/hardware/kinect/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/hardware/gps/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/hardware/nmea-parser/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/hardware/core-gpgpu/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/hardware/core-video-capture/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/hardware/serial-driver/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/hardware/turntable/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/hardware/compass/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/video/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/video/gstreamer-video/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/video/video-processing/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/video/xuggle-video/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/ide-integration/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/ide-integration/EclipsePlugin/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/distribution/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/text/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/text/nlp/pom.xml",
            "servers": [],
            "dbs": [
                "mysql"
            ],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/demos/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/demos/SimpleMosaic/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/demos/SimpleOCR/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/demos/sandbox/pom.xml",
            "servers": [],
            "dbs": [
                "mongodb",
                "mongo"
            ],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/demos/examples/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/demos/demos/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/demos/CampusView/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/demos/touchtable/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/demos/ACMMM-Presentation/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/test-resources/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/image/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/image/faces/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/image/image-annotation/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/image/multiview/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/image/vector-image/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/image/camera-calibration/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/image/image-processing/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/image/image-indexing-retrieval/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/image/object-detection/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/image/image-local-features/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/image/image-feature-extraction/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/content/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/content/visualisations/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/content/slideshow/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/content/animation/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/tools/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/tools/ClusterQuantiserTool/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/tools/TwitterPreprocessingTool/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/tools/openimaj-processing/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/tools/CBIRTools/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/tools/ReferencesTool/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/tools/ReferencesTool/src/test/TestJarProject/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/tools/SimilarityMatrixTool/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/tools/CityLandscapeClassifier/pom.xml",
            "servers": [],
            "dbs": [
                "coherence"
            ],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/tools/FaceTools/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/tools/OCRTools/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/tools/ImageCollectionTool/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/tools/WebTools/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/tools/core-tool/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/tools/GlobalFeaturesTool/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/tools/FeatureVisualisation/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/tools/RedditHarvester/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/tools/picslurper/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/tools/LocalFeaturesTool/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/knowledge/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/knowledge/ontologies/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/knowledge/ontologies/sioc/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/knowledge/core-rdf/pom.xml",
            "servers": [
                "spring"
            ],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/knowledge/core-rdf/src/main/resources/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/knowledge/geocoder/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/web/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/web/core-web/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/web/webpage-analysis/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/web/readability4j/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/web/twitter/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj/web/data-scraping/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj-2012/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj-2012/core/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj-2012/core/core/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj-2012/core/core-math/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj-2012/core/core-image/pom.xml",
            "servers": [
                "jboss"
            ],
            "dbs": [
                "nexus"
            ],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj-2012/core/core-video/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj-2012/core/core-feature/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj-2012/core/core-citation/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj-2012/core/core-experiment/pom.xml",
            "servers": [],
            "dbs": [
                "nexus"
            ],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj-2012/core/core-audio/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj-2012/archetypes/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj-2012/archetypes/openimaj-quickstart-archetype/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj-2012/archetypes/openimaj-quickstart-archetype/src/main/resources/archetype-resources/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj-2012/machine-learning/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj-2012/machine-learning/machine-learning/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj-2012/machine-learning/clustering/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj-2012/machine-learning/nearest-neighbour/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj-2012/hadoop/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj-2012/hadoop/core-hadoop/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj-2012/hadoop/tools/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj-2012/hadoop/tools/HadoopEXIFTool/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj-2012/hadoop/tools/HadoopGlobalFeaturesTool/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj-2012/hadoop/tools/SequenceFileTool/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj-2012/hadoop/tools/core-hadoop-tool/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj-2012/hadoop/tools/SequenceFileIndexer/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj-2012/hadoop/tools/HadoopTwitterTokenTool/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj-2012/hadoop/tools/HadoopImageDownload/pom.xml",
            "servers": [
                "jboss"
            ],
            "dbs": [
                "nexus"
            ],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj-2012/hadoop/tools/HadoopFastKMeans/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj-2012/hadoop/tools/HadoopLocalFeaturesTool/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj-2012/hadoop/tools/HadoopTwitterPreprocessingTool/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj-2012/hadoop/tools/HadoopClusterQuantiserTool/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj-2012/thirdparty/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj-2012/thirdparty/ImprovedArgs4J/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj-2012/thirdparty/CLMFaceTracker/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj-2012/thirdparty/IREval/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj-2012/thirdparty/tld/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj-2012/thirdparty/klt-tracker/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj-2012/audio/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj-2012/audio/audio-processing/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj-2012/hardware/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj-2012/hardware/kinect/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj-2012/hardware/gps/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj-2012/hardware/nmea-parser/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj-2012/hardware/core-video-capture/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj-2012/hardware/serial-driver/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj-2012/hardware/turntable/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj-2012/hardware/compass/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj-2012/video/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj-2012/video/video-analysis/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj-2012/video/video-processing/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj-2012/video/xuggle-video/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj-2012/ide-integration/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj-2012/ide-integration/EclipsePlugin/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj-2012/text/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj-2012/text/nlp/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj-2012/demos/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj-2012/demos/SimpleMosaic/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj-2012/demos/sandbox/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj-2012/demos/demos/pom.xml",
            "servers": [],
            "dbs": [
                "nexus"
            ],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj-2012/demos/CampusView/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj-2012/demos/touchtable/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj-2012/demos/ACMMM-Presentation/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj-2012/test-resources/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj-2012/image/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj-2012/image/faces/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj-2012/image/image-annotation/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj-2012/image/image-processing/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj-2012/image/image-local-features/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj-2012/image/image-feature-extraction/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj-2012/content/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj-2012/content/visualisations/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj-2012/content/slideshow/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj-2012/content/animation/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj-2012/tools/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj-2012/tools/ClusterQuantiserTool/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj-2012/tools/TwitterPreprocessingTool/pom.xml",
            "servers": [],
            "dbs": [
                "foundation"
            ],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj-2012/tools/SimilarityMatrixTool/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj-2012/tools/CityLandscapeClassifier/pom.xml",
            "servers": [],
            "dbs": [
                "coherence"
            ],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj-2012/tools/FaceTools/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj-2012/tools/OCRTools/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj-2012/tools/ImageCollectionTool/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj-2012/tools/WebTools/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj-2012/tools/core-tool/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj-2012/tools/GlobalFeaturesTool/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj-2012/tools/FeatureVisualisation/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj-2012/tools/LocalFeaturesTool/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj-2012/web/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj-2012/web/core-web/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj-2012/web/webpage-analysis/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj-2012/web/readability4j/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/openimaj-2012/web/twitter/pom.xml",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/CBIRestAPI/pom.xml",
            "servers": [
                "node",
                "jetty",
                "tomcat",
                "spring"
            ],
            "dbs": [
                "postgresql",
                "redis"
            ],
            "monitors": [
                "graphite"
            ],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/crawlers/reveal-crawler/pom.xml",
            "servers": [],
            "dbs": [
                "mongodb",
                "oracle"
            ],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/crawlers/mklab-focused-crawler/pom.xml",
            "servers": [],
            "dbs": [
                "redis"
            ],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/kube-system-plugins/vision/vmx-utils/vmx-jsfeat/package.json",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/kube-system-plugins/docker-kubernetes-ui/www/master/package.json",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/kube-system-plugins/kube-ui/master/package.json",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/kube-system-plugins/kube-ui/third_party/ui/bower_components/angular-material/package.json",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/kube-system-plugins/kube-ui/third_party/ui/bower_components/angular-route/package.json",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/kube-system-plugins/kube-ui/third_party/ui/bower_components/angular-cookies/package.json",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/kube-system-plugins/kube-ui/third_party/ui/bower_components/angular-aria/package.json",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/kube-system-plugins/kube-ui/third_party/ui/bower_components/string-format-js/package.json",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/kube-system-plugins/kube-ui/third_party/ui/bower_components/angular-mocks/package.json",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/kube-system-plugins/kube-ui/third_party/ui/bower_components/angular/package.json",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "path": "/kube-system-plugins/kube-ui/third_party/ui/bower_components/jsonpath/package.json"
        },
        {
            "gates": [],
            "buses": [],
            "path": "/kube-system-plugins/kube-ui/third_party/ui/bower_components/hammerjs/package.json",
            "servers": [
                "node"
            ],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/kube-system-plugins/kube-ui/third_party/ui/bower_components/sprintf/package.json",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/kube-system-plugins/kube-ui/third_party/ui/bower_components/ng-lodash/package.json",
            "servers": [
                "node"
            ],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/kube-system-plugins/kube-ui/third_party/ui/bower_components/angular-animate/package.json",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/kube-local-compose/kubernetes/docs/getting-started-guides/coreos/azure/package.json",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/big-data/stackoverflow-analytics/dashboard/package.json",
            "servers": [
                "node",
                "express"
            ],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/big-data/stackoverflow-analytics/api/package.json",
            "servers": [
                "node",
                "express"
            ],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [
                "stomp"
            ],
            "path": "/services/big-data/spring-doge-microservice/webapp/src/main/resources/public/lib/stomp-websocket/package.json",
            "servers": [
                "node"
            ],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/big-data/spring-doge-microservice/webapp/src/main/resources/public/lib/requirejs-domready/package.json",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/big-data/neo4j-swagger-ui/package.json",
            "servers": [
                "node"
            ],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/big-data/neo4j-app-movies-ui/package.json",
            "servers": [
                "express"
            ],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/ui-frontoffice/angular-admin-seed/package.json",
            "servers": [
                "node",
                "express"
            ],
            "dbs": [
                "sqlite",
                "mysql"
            ],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/deep-vision/deeplearning4j/deeplearning4j/deeplearning4j-ui/src/main/resources/assets/node_modules/react-dropzone/package.json",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/deep-vision/deeplearning4j/deeplearning4j/deeplearning4j-ui/src/main/resources/org/deeplearning4j/ui/tsne/package.json",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/deep-vision/deeplearning4j/deeplearning4j/deeplearning4j-ui/src/main/resources/org/deeplearning4j/ui/renders/package.json",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/deep-vision/deeplearning4j/deeplearning4j/deeplearning4j-ui/src/main/resources/org/deeplearning4j/ui/nearestneighbors/package.json",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/deep-vision/deeplearning4j/deeplearning4j/deeplearning4j-ui/src/main/resources/org/deeplearning4j/ui/nearestneighbors/word2vec/package.json",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/deep-vision/deeplearning4j/deeplearning4j/deeplearning4j-ui/src/main/resources/org/deeplearning4j/ui/activation/package.json",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/deep-vision/deeplearning4j/deeplearning4j/deeplearning4j-ui/src/main/resources/org/deeplearning4j/ui/weights/package.json",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/hybrid-vision/ibeis/ibeis/web/static/include/Chart.js/package.json",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/mir-vision/axes-project/cpuvisor-srv/webservice-node/server/package.json",
            "servers": [
                "node",
                "express"
            ],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/opencv-vision/d-colors/dockerfiles/package.json",
            "servers": [
                "express"
            ],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/opencv-vision/d-colors/dockerfiles/public/javascripts/package.json",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/opencv-vision/node-opencv/package.json",
            "servers": [
                "node"
            ],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/custom-vision/vision-plus/vision-plus-server/dominantColors-restApi/package.json",
            "servers": [
                "express"
            ],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/CBIRestAPI/package.json",
            "servers": [
                "node"
            ],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/CBIRestAPI/src/main/webapp/bower_components/swagger-ui/package.json",
            "servers": [
                "node"
            ],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/CBIRestAPI/src/main/webapp/bower_components/ng-table/package.json",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/CBIRestAPI/src/main/webapp/bower_components/angular-cookies/package.json",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/CBIRestAPI/src/main/webapp/bower_components/angular-mocks/package.json",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/CBIRestAPI/src/main/webapp/bower_components/angular-cache-buster/package.json",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/CBIRestAPI/src/main/webapp/bower_components/angular-i18n/package.json",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/CBIRestAPI/src/main/webapp/bower_components/angular/package.json",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/CBIRestAPI/src/main/webapp/bower_components/bootstrap-sass/package.json",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/CBIRestAPI/src/main/webapp/bower_components/angular-dynamic-locale/package.json",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/svm-vision/CBIRestAPI/src/main/webapp/bower_components/underscore/package.json",
            "servers": [
                "node"
            ],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/vision/tracking-vision/jsfeat/package.json",
            "servers": [],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/reverse_proxies/vulcand-framework/vulcand-with-utils/vulcan-salute/package.json",
            "servers": [
                "node"
            ],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/reverse_proxies/vulcand-framework/vulcan-salute/package.json",
            "servers": [
                "node"
            ],
            "dbs": [],
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "buses": [],
            "path": "/services/reverse_proxies/kong/backend/jungle/package.json",
            "servers": [
                "node"
            ],
            "dbs": [],
            "monitors": [],
            "discos": []
        }
    ],
    "size": 3391693,
    "num_dockers": 208,
    "url": "git://github.com/lucmichalski/vision-kube.git",
    "gates": [
        "zuul",
        "kong",
        "nginx"
    ],
    "num_servers": 10,
    "images": [
        "python",
        "jsafrane/nfsexporter",
        "jayunit100/redis",
        "aksw/ontowiki-ubuntu-nginx",
        "cassandra",
        "stain/jena-fuseki",
        "google/python",
        "karfai/fast-rcnn-cpu",
        "gliderlabs/alpine",
        "quay.io/pires/docker-jre",
        "rethinkdb",
        "google/golang",
        "karfai/fast-rcnn-cpu-env",
        "rdhyee/scipyserver-ansible",
        "gcr.io/google_containers/spark-base",
        "karfai/ubuntu-cuda",
        "debian",
        "nginx",
        "karfai/caffe-cpu-env",
        "google/debian",
        "rtux/py-opencv",
        "karfai/caffe-gpu-env",
        "sequenceiq/pam",
        "kubernetes/test-webserver",
        "google/cloud-sdk",
        "dduportal/docker-compose",
        "library/celery",
        "vikingco/django",
        "tomcat",
        "ubuntu",
        "busybox",
        "fedora",
        "google/nodejs",
        "haproxy",
        "vulcand/release",
        "node",
        "quay.io/pires/docker-logstash",
        "golang",
        "klokantech/supervisord",
        "karfai/caffe-cpu",
        "progrium/busybox",
        "scratch",
        "ipython/scipyserver",
        "brendanburns/php",
        "java",
        "tleyden5iwx/caffe-gpu-master",
        "centos",
        "alpine",
        "karfai/fast-rcnn-gpu-env",
        "quay.io/pires/docker-elasticsearch",
        "alantrrs/docker-node-opencv3",
        "ubuntu-debootstrap",
        "tleyden5iwx/caffe-cpu-master",
        "karfai/caffe-gpu",
        "karfai/fast-rcnn-gpu",
        "redis"
    ],
    "num_services": 0,
    "languages": [
        "jupyternotebook",
        "java",
        "html",
        "c++"
    ],
    "num_files": 699,
    "discos": [
        "thrift",
        "consul",
        "avro",
        "traefik",
        "zookeeper",
        "eureka"
    ],
    "dockers": [
        {
            "gates": [],
            "from_full": "quay.io/pires/docker-logstash:1.5.4",
            "cmd_keywords": [],
            "path": "/kube-system-plugins/elk-cluster/logstash/Dockerfile",
            "servers": [],
            "cmd": "",
            "from": "quay.io/pires/docker-logstash",
            "buses": [],
            "langs": [],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": []
        },
        {
            "gates": [],
            "from_full": "gliderlabs/alpine:3.2",
            "cmd_keywords": [
                "etc",
                "sbin",
                "service",
                "runsvdir"
            ],
            "path": "/kube-system-plugins/elk-components/docker-logstash-forwarder/Dockerfile",
            "servers": [],
            "cmd": "/sbin/runsvdir -P /etc/service",
            "from": "gliderlabs/alpine",
            "buses": [],
            "langs": [],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "apk",
                "etc",
                "http",
                "echo",
                "edge"
            ]
        },
        {
            "gates": [],
            "from_full": "quay.io/pires/docker-elasticsearch:1.7.2",
            "cmd_keywords": [],
            "path": "/kube-system-plugins/elk-components/docker-elasticsearch-kubernetes/Dockerfile",
            "servers": [],
            "cmd": "",
            "from": "quay.io/pires/docker-elasticsearch",
            "buses": [],
            "langs": [],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "elasticsearch",
                "plugin",
                "verbose",
                "bin",
                "kubernetes"
            ]
        },
        {
            "gates": [],
            "from_full": "alpine:3.2",
            "cmd_keywords": [],
            "path": "/kube-system-plugins/elk-components/docker-kibana/Dockerfile",
            "servers": [
                "node"
            ],
            "cmd": "",
            "from": "alpine",
            "buses": [],
            "langs": [],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "kibana",
                "node",
                "opt",
                "version",
                "apk"
            ]
        },
        {
            "gates": [],
            "from_full": "quay.io/pires/docker-jre:8u60",
            "cmd_keywords": [
                "logstash",
                "conf",
                "quiet",
                "config",
                "bin"
            ],
            "path": "/kube-system-plugins/elk-components/docker-logstash/Dockerfile",
            "servers": [],
            "cmd": "/logstash/bin/logstash --quiet -f /logstash/config/logstash.conf",
            "from": "quay.io/pires/docker-jre",
            "buses": [],
            "langs": [
                "bash"
            ],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "logstash",
                "curl",
                "name",
                "pkg",
                "tar"
            ]
        },
        {
            "gates": [],
            "from_full": "ubuntu",
            "cmd_keywords": [
                "vmx",
                "middle"
            ],
            "path": "/kube-system-plugins/vision/vmx-v1.x-backend-ui/vmx-server-v1/Dockerfile",
            "servers": [],
            "cmd": "/vmx/middle/vmx",
            "from": "ubuntu",
            "buses": [],
            "langs": [],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "tar",
                "vmx",
                "linux",
                "wget",
                "files"
            ]
        },
        {
            "gates": [],
            "from_full": "dduportal/docker-compose:latest",
            "cmd_keywords": [
                "version"
            ],
            "path": "/kube-system-plugins/vision/vmx-metrics/Dockerfile",
            "servers": [],
            "cmd": "--version",
            "from": "dduportal/docker-compose",
            "buses": [],
            "langs": [],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "logstash",
                "forwarder",
                "app",
                "conf",
                "key"
            ]
        },
        {
            "gates": [
                "nginx"
            ],
            "from_full": "ubuntu:vivid",
            "cmd_keywords": [
                "nginx"
            ],
            "path": "/kube-system-plugins/vision/vmx-metrics/nginx/Dockerfile",
            "servers": [],
            "cmd": "nginx",
            "from": "ubuntu",
            "buses": [],
            "langs": [],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "apt",
                "nginx",
                "etc",
                "get",
                "kibana"
            ]
        },
        {
            "gates": [],
            "from_full": "golang:1.5-wheezy",
            "cmd_keywords": [
                "forwarder",
                "logstash",
                "config",
                "json",
                "opt"
            ],
            "path": "/kube-system-plugins/vision/vmx-metrics/forwarder/Dockerfile",
            "servers": [],
            "cmd": "/opt/logstash-forwarder/logstash-forwarder -config /etc/logstash-forwarder/config.json",
            "from": "golang",
            "buses": [],
            "langs": [
                "golang"
            ],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "logstash",
                "forwarder",
                "opt",
                "mkdir",
                "target"
            ]
        },
        {
            "gates": [],
            "from_full": "java:openjdk-8-jdk",
            "cmd_keywords": [
                "bootstrap",
                "etc"
            ],
            "path": "/kube-system-plugins/vision/vmx-metrics/graphdb/Dockerfile",
            "servers": [],
            "cmd": "/etc/bootstrap.sh -d",
            "from": "java",
            "buses": [],
            "langs": [
                "java"
            ],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "neo",
                "lib",
                "server",
                "var",
                "org"
            ]
        },
        {
            "gates": [],
            "from_full": "ubuntu:vivid",
            "cmd_keywords": [],
            "path": "/kube-system-plugins/vision/vmx-metrics/logstash/Dockerfile",
            "servers": [],
            "cmd": "",
            "from": "ubuntu",
            "buses": [],
            "langs": [],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "apt",
                "get",
                "elasticsearch",
                "install",
                "http"
            ]
        },
        {
            "gates": [],
            "from_full": "java:openjdk-8-jdk",
            "cmd_keywords": [
                "bootstrap",
                "mazerunner",
                "etc"
            ],
            "path": "/kube-system-plugins/vision/vmx-metrics/mazerunner/Dockerfile",
            "servers": [],
            "cmd": "/etc/mazerunner/bootstrap.sh -d",
            "from": "java",
            "buses": [
                "rabbitmq"
            ],
            "langs": [
                "java"
            ],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "rabbitmq",
                "apt",
                "etc",
                "get",
                "key"
            ]
        },
        {
            "gates": [],
            "from_full": "sequenceiq/pam:centos-6.5",
            "cmd_keywords": [
                "bootstrap",
                "etc"
            ],
            "path": "/kube-system-plugins/vision/vmx-metrics/hdfs/Dockerfile",
            "servers": [],
            "cmd": "/etc/bootstrap.sh -d",
            "from": "sequenceiq/pam",
            "buses": [],
            "langs": [
                "java"
            ],
            "dbs": [
                "oracle"
            ],
            "discos": [],
            "monitors": [],
            "keywords": [
                "hadoop",
                "etc",
                "ssh",
                "prefix",
                "usr"
            ]
        },
        {
            "gates": [],
            "from_full": "ubuntu:vivid",
            "cmd_keywords": [],
            "path": "/kube-system-plugins/vision/vmx-metrics/kibana/Dockerfile",
            "servers": [],
            "cmd": "",
            "from": "ubuntu",
            "buses": [],
            "langs": [],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "kibana",
                "get",
                "apt",
                "tar",
                "linux"
            ]
        },
        {
            "gates": [],
            "from_full": "ubuntu:vivid",
            "cmd_keywords": [],
            "path": "/kube-system-plugins/vision/vmx-metrics/elasticsearch/Dockerfile",
            "servers": [],
            "cmd": "",
            "from": "ubuntu",
            "buses": [],
            "langs": [],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "elasticsearch",
                "apt",
                "get",
                "usr",
                "share"
            ]
        },
        {
            "gates": [],
            "from_full": "ubuntu",
            "cmd_keywords": [
                "vmx",
                "middle"
            ],
            "path": "/kube-system-plugins/vision/vmx-v2.x-backend-ui/vmx-server-v2/Dockerfile",
            "servers": [],
            "cmd": "/vmx/middle/vmx",
            "from": "ubuntu",
            "buses": [],
            "langs": [],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "tar",
                "latest",
                "vmx",
                "linux",
                "wget"
            ]
        },
        {
            "gates": [],
            "from_full": "python:2-onbuild",
            "cmd_keywords": [
                "python",
                "insight",
                "cluster"
            ],
            "path": "/kube-system-plugins/cluster-insight/collector/Dockerfile",
            "servers": [],
            "cmd": "python ./cluster_insight.py",
            "from": "python",
            "buses": [],
            "langs": [
                "python"
            ],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": []
        },
        {
            "gates": [],
            "from_full": "ubuntu:14.04",
            "cmd_keywords": [
                "server",
                "nodejs"
            ],
            "path": "/kube-system-plugins/etcd-tools/etcd-browser/etcd-browser/Dockerfile",
            "servers": [],
            "cmd": "nodejs server.js",
            "from": "ubuntu",
            "buses": [],
            "langs": [],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "get",
                "apt",
                "update",
                "install",
                "nodejs"
            ]
        },
        {
            "gates": [
                "gateway"
            ],
            "from_full": "ubuntu:14.04",
            "cmd_keywords": [],
            "path": "/kube-system-plugins/etcd-tools/sync-gateway-coreos/Dockerfile",
            "servers": [],
            "cmd": "",
            "from": "ubuntu",
            "buses": [],
            "langs": [
                "golang"
            ],
            "dbs": [
                "couchbase"
            ],
            "discos": [],
            "monitors": [],
            "keywords": [
                "get",
                "com",
                "git",
                "github",
                "emacs"
            ]
        },
        {
            "gates": [],
            "from_full": "google/nodejs",
            "cmd_keywords": [
                "supervisord",
                "supervisor",
                "bin",
                "usr",
                "conf"
            ],
            "path": "/kube-system-plugins/docker-kubernetes-ui/Dockerfile",
            "servers": [],
            "cmd": "/usr/bin/supervisord -n -c /etc/supervisor/supervisord.conf",
            "from": "google/nodejs",
            "buses": [],
            "langs": [],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "install",
                "bower",
                "kubernetes",
                "save",
                "npm"
            ]
        },
        {
            "gates": [],
            "from_full": "scratch",
            "cmd_keywords": [],
            "path": "/kube-system-plugins/kube-ui/Dockerfile",
            "servers": [],
            "cmd": "",
            "from": "scratch",
            "buses": [],
            "langs": [
                "scratch"
            ],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": []
        },
        {
            "gates": [],
            "from_full": "debian:jessie",
            "cmd_keywords": [
                "tar",
                "dev",
                "make",
                "stderr",
                "bash"
            ],
            "path": "/kube-local-compose/kubernetes/docs/design/clustering/Dockerfile",
            "servers": [],
            "cmd": "bash -c 'make >/dev/stderr && tar cf - *.png'",
            "from": "debian",
            "buses": [],
            "langs": [
                "bash"
            ],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "droidsansmono",
                "curl",
                "ttf",
                "get",
                "apt"
            ]
        },
        {
            "gates": [],
            "from_full": "kubernetes/test-webserver",
            "cmd_keywords": [],
            "path": "/kube-local-compose/kubernetes/docs/user-guide/update-demo/images/nautilus/Dockerfile",
            "servers": [],
            "cmd": "",
            "from": "kubernetes/test-webserver",
            "buses": [],
            "langs": [],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": []
        },
        {
            "gates": [],
            "from_full": "kubernetes/test-webserver",
            "cmd_keywords": [],
            "path": "/kube-local-compose/kubernetes/docs/user-guide/update-demo/images/kitten/Dockerfile",
            "servers": [],
            "cmd": "",
            "from": "kubernetes/test-webserver",
            "buses": [],
            "langs": [],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": []
        },
        {
            "gates": [],
            "from_full": "scratch",
            "cmd_keywords": [],
            "path": "/kube-local-compose/kubernetes/docs/user-guide/liveness/image/Dockerfile",
            "servers": [],
            "cmd": "",
            "from": "scratch",
            "buses": [],
            "langs": [
                "scratch"
            ],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": []
        },
        {
            "gates": [],
            "from_full": "golang:onbuild",
            "cmd_keywords": [],
            "path": "/kube-local-compose/kubernetes/docs/user-guide/environment-guide/containers/backend/Dockerfile",
            "servers": [],
            "cmd": "",
            "from": "golang",
            "buses": [],
            "langs": [
                "golang"
            ],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": []
        },
        {
            "gates": [],
            "from_full": "golang:onbuild",
            "cmd_keywords": [],
            "path": "/kube-local-compose/kubernetes/docs/user-guide/environment-guide/containers/show/Dockerfile",
            "servers": [],
            "cmd": "",
            "from": "golang",
            "buses": [],
            "langs": [
                "golang"
            ],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": []
        },
        {
            "gates": [],
            "from_full": "scratch",
            "cmd_keywords": [],
            "path": "/kube-local-compose/kubernetes/examples/kubectl-container/Dockerfile",
            "servers": [],
            "cmd": "",
            "from": "scratch",
            "buses": [],
            "langs": [
                "scratch"
            ],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": []
        },
        {
            "gates": [],
            "from_full": "node:0.10",
            "cmd_keywords": [],
            "path": "/kube-local-compose/kubernetes/examples/meteor/dockerbase/Dockerfile",
            "servers": [
                "node"
            ],
            "cmd": "",
            "from": "node",
            "buses": [],
            "langs": [],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": []
        },
        {
            "gates": [],
            "from_full": "gcr.io/google_containers/spark-base",
            "cmd_keywords": [],
            "path": "/kube-local-compose/kubernetes/examples/spark/images/master/Dockerfile",
            "servers": [],
            "cmd": "",
            "from": "gcr.io/google_containers/spark-base",
            "buses": [],
            "langs": [],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": []
        },
        {
            "gates": [],
            "from_full": "gcr.io/google_containers/spark-base",
            "cmd_keywords": [],
            "path": "/kube-local-compose/kubernetes/examples/spark/images/worker/Dockerfile",
            "servers": [],
            "cmd": "",
            "from": "gcr.io/google_containers/spark-base",
            "buses": [],
            "langs": [],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": []
        },
        {
            "gates": [],
            "from_full": "java:latest",
            "cmd_keywords": [],
            "path": "/kube-local-compose/kubernetes/examples/spark/images/base/Dockerfile",
            "servers": [],
            "cmd": "",
            "from": "java",
            "buses": [],
            "langs": [
                "java"
            ],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "spark",
                "bin",
                "hadoop",
                "tgz",
                "opt"
            ]
        },
        {
            "gates": [],
            "from_full": "redis",
            "cmd_keywords": [
                "run"
            ],
            "path": "/kube-local-compose/kubernetes/examples/guestbook/redis-slave/Dockerfile",
            "servers": [],
            "cmd": "/run.sh",
            "from": "redis",
            "buses": [],
            "langs": [],
            "dbs": [
                "redis"
            ],
            "discos": [],
            "monitors": [],
            "keywords": [
                "run",
                "chmod"
            ]
        },
        {
            "gates": [],
            "from_full": "brendanburns/php",
            "cmd_keywords": [
                "run"
            ],
            "path": "/kube-local-compose/kubernetes/examples/guestbook/php-redis/Dockerfile",
            "servers": [],
            "cmd": "/run.sh",
            "from": "brendanburns/php",
            "buses": [],
            "langs": [
                "php"
            ],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": []
        },
        {
            "gates": [],
            "from_full": "jsafrane/nfsexporter",
            "cmd_keywords": [],
            "path": "/kube-local-compose/kubernetes/examples/nfs/nfs-data/Dockerfile",
            "servers": [],
            "cmd": "",
            "from": "jsafrane/nfsexporter",
            "buses": [],
            "langs": [],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": []
        },
        {
            "gates": [],
            "from_full": "fedora:21",
            "cmd_keywords": [],
            "path": "/kube-local-compose/kubernetes/examples/nfs/exporter/Dockerfile",
            "servers": [],
            "cmd": "",
            "from": "fedora",
            "buses": [],
            "langs": [],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "yum",
                "nfs",
                "local",
                "run",
                "install"
            ]
        },
        {
            "gates": [],
            "from_full": "redis:2.8",
            "cmd_keywords": [
                "run"
            ],
            "path": "/kube-local-compose/kubernetes/examples/redis/image/Dockerfile",
            "servers": [],
            "cmd": "/run.sh",
            "from": "redis",
            "buses": [],
            "langs": [
                "python"
            ],
            "dbs": [
                "redis"
            ],
            "discos": [],
            "monitors": [],
            "keywords": [
                "apt",
                "get",
                "install",
                "update",
                "python"
            ]
        },
        {
            "gates": [],
            "from_full": "google/debian:wheezy",
            "cmd_keywords": [
                "run"
            ],
            "path": "/kube-local-compose/kubernetes/examples/cassandra/image/Dockerfile",
            "servers": [],
            "cmd": "/run.sh",
            "from": "google/debian",
            "buses": [],
            "langs": [],
            "dbs": [
                "cassandra"
            ],
            "discos": [],
            "monitors": [],
            "keywords": [
                "gpg",
                "apt",
                "edu",
                "keyserver",
                "key"
            ]
        },
        {
            "gates": [],
            "from_full": "library/celery",
            "cmd_keywords": [
                "bin",
                "local",
                "bash",
                "usr",
                "run"
            ],
            "path": "/kube-local-compose/kubernetes/examples/celery-rabbitmq/celery-app-add/Dockerfile",
            "servers": [],
            "cmd": "/bin/bash /usr/local/bin/run.sh",
            "from": "library/celery",
            "buses": [],
            "langs": [
                "bash"
            ],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": []
        },
        {
            "gates": [],
            "from_full": "ubuntu:trusty",
            "cmd_keywords": [
                "bin",
                "local",
                "usr",
                "run",
                "flower"
            ],
            "path": "/kube-local-compose/kubernetes/examples/celery-rabbitmq/flower/Dockerfile",
            "servers": [],
            "cmd": "/bin/bash /usr/local/bin/run_flower.sh",
            "from": "ubuntu",
            "buses": [],
            "langs": [
                "bash"
            ],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "python",
                "install",
                "get",
                "apt",
                "pip"
            ]
        },
        {
            "gates": [],
            "from_full": "scratch",
            "cmd_keywords": [],
            "path": "/kube-local-compose/kubernetes/examples/explorer/Dockerfile",
            "servers": [],
            "cmd": "",
            "from": "scratch",
            "buses": [],
            "langs": [
                "scratch"
            ],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": []
        },
        {
            "gates": [],
            "from_full": "jayunit100/redis:2.8.19",
            "cmd_keywords": [
                "run"
            ],
            "path": "/kube-local-compose/kubernetes/examples/k8petstore/redis-slave/Dockerfile",
            "servers": [],
            "cmd": "/run.sh",
            "from": "jayunit100/redis",
            "buses": [],
            "langs": [],
            "dbs": [
                "redis"
            ],
            "discos": [],
            "monitors": [],
            "keywords": []
        },
        {
            "gates": [],
            "from_full": "jayunit100/redis:2.8.19",
            "cmd_keywords": [
                "redis",
                "conf",
                "server",
                "etc"
            ],
            "path": "/kube-local-compose/kubernetes/examples/k8petstore/redis-master/Dockerfile",
            "servers": [],
            "cmd": "redis-server /etc/redis/redis.conf",
            "from": "jayunit100/redis",
            "buses": [],
            "langs": [],
            "dbs": [
                "redis"
            ],
            "discos": [],
            "monitors": [],
            "keywords": []
        },
        {
            "gates": [],
            "from_full": "ubuntu",
            "cmd_keywords": [],
            "path": "/kube-local-compose/kubernetes/examples/k8petstore/redis/Dockerfile",
            "servers": [],
            "cmd": "",
            "from": "ubuntu",
            "buses": [],
            "langs": [],
            "dbs": [
                "redis"
            ],
            "discos": [],
            "monitors": [],
            "keywords": [
                "redis",
                "etc",
                "conf",
                "sed",
                "tar"
            ]
        },
        {
            "gates": [],
            "from_full": "google/golang:latest",
            "cmd_keywords": [
                "main",
                "bin",
                "gopath"
            ],
            "path": "/kube-local-compose/kubernetes/examples/k8petstore/web-server/Dockerfile",
            "servers": [],
            "cmd": "/gopath/bin/main",
            "from": "google/golang",
            "buses": [],
            "langs": [
                "golang"
            ],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "get",
                "opt",
                "test",
                "main",
                "chmod"
            ]
        },
        {
            "gates": [],
            "from_full": "python:2.7",
            "cmd_keywords": [
                "python",
                "server"
            ],
            "path": "/kube-local-compose/kubernetes/examples/cluster-dns/images/backend/Dockerfile",
            "servers": [],
            "cmd": "python server.py",
            "from": "python",
            "buses": [],
            "langs": [
                "python"
            ],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": []
        },
        {
            "gates": [],
            "from_full": "python:2.7",
            "cmd_keywords": [
                "python",
                "client"
            ],
            "path": "/kube-local-compose/kubernetes/examples/cluster-dns/images/frontend/Dockerfile",
            "servers": [],
            "cmd": "python client.py",
            "from": "python",
            "buses": [],
            "langs": [
                "python"
            ],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "pip",
                "install",
                "requests"
            ]
        },
        {
            "gates": [],
            "from_full": "google/golang:latest",
            "cmd_keywords": [
                "tar",
                "cvzf"
            ],
            "path": "/kube-local-compose/kubernetes/examples/guestbook-go/_src/Dockerfile",
            "servers": [],
            "cmd": "tar cvzf - .",
            "from": "google/golang",
            "buses": [],
            "langs": [
                "golang"
            ],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "src",
                "guestbook",
                "dockerfile",
                "bin",
                "get"
            ]
        },
        {
            "gates": [],
            "from_full": "busybox:ubuntu-14.04",
            "cmd_keywords": [
                "guestbook"
            ],
            "path": "/kube-local-compose/kubernetes/examples/guestbook-go/_src/guestbook/Dockerfile",
            "servers": [
                "busybox"
            ],
            "cmd": "./guestbook",
            "from": "busybox",
            "buses": [],
            "langs": [],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": []
        },
        {
            "gates": [
                "nginx"
            ],
            "from_full": "nginx",
            "cmd_keywords": [
                "nginx",
                "daemon",
                "off"
            ],
            "path": "/kube-local-compose/kubernetes/examples/https-nginx/Dockerfile",
            "servers": [],
            "cmd": "nginx -g daemon off;",
            "from": "nginx",
            "buses": [],
            "langs": [],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": []
        },
        {
            "gates": [],
            "from_full": "java:7-jre",
            "cmd_keywords": [
                "run"
            ],
            "path": "/kube-local-compose/kubernetes/examples/elasticsearch/Dockerfile",
            "servers": [],
            "cmd": "/run.sh",
            "from": "java",
            "buses": [],
            "langs": [
                "java"
            ],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "elasticsearch",
                "tar",
                "get",
                "apt",
                "curl"
            ]
        },
        {
            "gates": [],
            "from_full": "rethinkdb:1.16.0",
            "cmd_keywords": [
                "run",
                "usr",
                "bin"
            ],
            "path": "/kube-local-compose/kubernetes/examples/rethinkdb/image/Dockerfile",
            "servers": [],
            "cmd": "\"/usr/bin/run.sh\"",
            "from": "rethinkdb",
            "buses": [],
            "langs": [],
            "dbs": [
                "rethinkdb"
            ],
            "discos": [],
            "monitors": [],
            "keywords": [
                "apt",
                "bin",
                "usr",
                "var",
                "curl"
            ]
        },
        {
            "gates": [],
            "from_full": "quay.io/pires/docker-jre:8u45-2",
            "cmd_keywords": [
                "jar",
                "bootstrapper",
                "java"
            ],
            "path": "/kube-local-compose/kubernetes/examples/hazelcast/image/Dockerfile",
            "servers": [],
            "cmd": "java -jar /bootstrapper.jar",
            "from": "quay.io/pires/docker-jre",
            "buses": [],
            "langs": [
                "java"
            ],
            "dbs": [
                "hazelcast"
            ],
            "discos": [],
            "monitors": [],
            "keywords": [
                "bootstrapper",
                "kubernetes",
                "jar",
                "hazelcast",
                "curl"
            ]
        },
        {
            "gates": [],
            "from_full": "google/cloud-sdk",
            "cmd_keywords": [
                "run"
            ],
            "path": "/kube-local-compose/kubernetes/examples/phabricator/cloudsql-authenticator/Dockerfile",
            "servers": [],
            "cmd": "/run.sh",
            "from": "google/cloud-sdk",
            "buses": [],
            "langs": [],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "get",
                "apt",
                "curl",
                "update",
                "install"
            ]
        },
        {
            "gates": [],
            "from_full": "ubuntu:14.04",
            "cmd_keywords": [
                "run"
            ],
            "path": "/kube-local-compose/kubernetes/examples/phabricator/php-phabricator/Dockerfile",
            "servers": [],
            "cmd": "/run.sh",
            "from": "ubuntu",
            "buses": [],
            "langs": [
                "python"
            ],
            "dbs": [
                "mysql"
            ],
            "discos": [],
            "monitors": [],
            "keywords": [
                "php",
                "www",
                "data",
                "git",
                "home"
            ]
        },
        {
            "gates": [],
            "from_full": "busybox",
            "cmd_keywords": [],
            "path": "/kube-local-compose/kubernetes/cluster/addons/dns/kube2sky/Dockerfile",
            "servers": [
                "busybox"
            ],
            "cmd": "",
            "from": "busybox",
            "buses": [],
            "langs": [],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": []
        },
        {
            "gates": [],
            "from_full": "busybox",
            "cmd_keywords": [],
            "path": "/kube-local-compose/kubernetes/cluster/addons/dns/skydns/Dockerfile",
            "servers": [
                "busybox"
            ],
            "cmd": "",
            "from": "busybox",
            "buses": [],
            "langs": [],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": []
        },
        {
            "gates": [],
            "from_full": "ubuntu:14.04",
            "cmd_keywords": [
                "fluentd",
                "log",
                "google",
                "var",
                "sbin"
            ],
            "path": "/kube-local-compose/kubernetes/cluster/addons/fluentd-gcp/fluentd-gcp-image/Dockerfile",
            "servers": [],
            "cmd": "/usr/sbin/google-fluentd \"$FLUENTD_ARGS\" > /var/log/google-fluentd.log",
            "from": "ubuntu",
            "buses": [],
            "langs": [
                "bash"
            ],
            "dbs": [],
            "discos": [],
            "monitors": [
                "fluentd"
            ],
            "keywords": [
                "google",
                "get",
                "fluentd",
                "apt",
                "install"
            ]
        },
        {
            "gates": [],
            "from_full": "java:openjdk-7-jre",
            "cmd_keywords": [
                "run"
            ],
            "path": "/kube-local-compose/kubernetes/cluster/addons/fluentd-elasticsearch/kibana-image/Dockerfile",
            "servers": [],
            "cmd": "/run.sh",
            "from": "java",
            "buses": [],
            "langs": [
                "java"
            ],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "kibana",
                "tar",
                "get",
                "linux",
                "apt"
            ]
        },
        {
            "gates": [],
            "from_full": "java:openjdk-7-jre",
            "cmd_keywords": [
                "run"
            ],
            "path": "/kube-local-compose/kubernetes/cluster/addons/fluentd-elasticsearch/es-image/Dockerfile",
            "servers": [],
            "cmd": "/run.sh",
            "from": "java",
            "buses": [],
            "langs": [
                "java"
            ],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "elasticsearch",
                "tar",
                "get",
                "apt",
                "curl"
            ]
        },
        {
            "gates": [],
            "from_full": "ubuntu:14.04",
            "cmd_keywords": [
                "agent",
                "log",
                "fluentd",
                "sbin",
                "var"
            ],
            "path": "/kube-local-compose/kubernetes/cluster/addons/fluentd-elasticsearch/fluentd-es-image/Dockerfile",
            "servers": [],
            "cmd": "/usr/sbin/td-agent \"$FLUENTD_ARGS\" > /var/log/td-agent/td-agent.log",
            "from": "ubuntu",
            "buses": [],
            "langs": [],
            "dbs": [],
            "discos": [],
            "monitors": [
                "fluentd"
            ],
            "keywords": [
                "agent",
                "install",
                "apt",
                "get",
                "usr"
            ]
        },
        {
            "gates": [],
            "from_full": "scratch",
            "cmd_keywords": [],
            "path": "/kube-local-compose/kubernetes/cluster/addons/kube-ui/image/Dockerfile",
            "servers": [],
            "cmd": "",
            "from": "scratch",
            "buses": [],
            "langs": [
                "scratch"
            ],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": []
        },
        {
            "gates": [],
            "from_full": "google/debian:wheezy",
            "cmd_keywords": [],
            "path": "/kube-local-compose/kubernetes/cluster/images/hyperkube/Dockerfile",
            "servers": [],
            "cmd": "",
            "from": "google/debian",
            "buses": [],
            "langs": [],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "chmod",
                "get",
                "apt",
                "update",
                "safe"
            ]
        },
        {
            "gates": [
                "nginx"
            ],
            "from_full": "google/debian:wheezy",
            "cmd_keywords": [],
            "path": "/kube-local-compose/kubernetes/cluster/images/nginx/Dockerfile",
            "servers": [],
            "cmd": "",
            "from": "google/debian",
            "buses": [],
            "langs": [],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "get",
                "apt",
                "wheezy",
                "update",
                "install"
            ]
        },
        {
            "gates": [],
            "from_full": "busybox",
            "cmd_keywords": [],
            "path": "/kube-local-compose/kubernetes/cluster/images/etcd/Dockerfile",
            "servers": [
                "busybox"
            ],
            "cmd": "",
            "from": "busybox",
            "buses": [],
            "langs": [],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": []
        },
        {
            "gates": [],
            "from_full": "centos",
            "cmd_keywords": [
                "kubelet"
            ],
            "path": "/kube-local-compose/kubernetes/cluster/images/kubelet/Dockerfile",
            "servers": [],
            "cmd": "/kubelet",
            "from": "centos",
            "buses": [],
            "langs": [],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "nsenter",
                "usr",
                "bin",
                "kubelet",
                "chmod"
            ]
        },
        {
            "gates": [],
            "from_full": "busybox",
            "cmd_keywords": [],
            "path": "/kube-local-compose/plugins/dns/kube2sky/Dockerfile",
            "servers": [
                "busybox"
            ],
            "cmd": "",
            "from": "busybox",
            "buses": [],
            "langs": [],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": []
        },
        {
            "gates": [],
            "from_full": "busybox",
            "cmd_keywords": [],
            "path": "/kube-local-compose/plugins/dns/skydns/Dockerfile",
            "servers": [
                "busybox"
            ],
            "cmd": "",
            "from": "busybox",
            "buses": [],
            "langs": [],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": []
        },
        {
            "gates": [],
            "from_full": "haproxy:1.5",
            "cmd_keywords": [
                "proxy",
                "run",
                "usr",
                "bin"
            ],
            "path": "/kube-local-compose/plugins/registry/images/Dockerfile",
            "servers": [],
            "cmd": "/usr/bin/run_proxy",
            "from": "haproxy",
            "buses": [],
            "langs": [],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "bin",
                "run",
                "proxy",
                "usr",
                "get"
            ]
        },
        {
            "gates": [],
            "from_full": "ubuntu:14.04",
            "cmd_keywords": [
                "fluentd",
                "google",
                "usr",
                "sbin",
                "args"
            ],
            "path": "/kube-local-compose/plugins/stats-fluentd-gcp/fluentd-gcp-image/Dockerfile",
            "servers": [],
            "cmd": "/usr/sbin/google-fluentd \"$FLUENTD_ARGS\"",
            "from": "ubuntu",
            "buses": [],
            "langs": [
                "bash"
            ],
            "dbs": [],
            "discos": [],
            "monitors": [
                "fluentd"
            ],
            "keywords": [
                "get",
                "fluentd",
                "google",
                "apt",
                "install"
            ]
        },
        {
            "gates": [],
            "from_full": "java:openjdk-7-jre",
            "cmd_keywords": [
                "run"
            ],
            "path": "/kube-local-compose/plugins/stats-fluentd-elasticsearch/kibana-image/Dockerfile",
            "servers": [],
            "cmd": "/run.sh",
            "from": "java",
            "buses": [],
            "langs": [
                "java"
            ],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "kibana",
                "tar",
                "get",
                "linux",
                "apt"
            ]
        },
        {
            "gates": [],
            "from_full": "java:openjdk-7-jre",
            "cmd_keywords": [
                "run"
            ],
            "path": "/kube-local-compose/plugins/stats-fluentd-elasticsearch/es-image/Dockerfile",
            "servers": [],
            "cmd": "/run.sh",
            "from": "java",
            "buses": [],
            "langs": [
                "java"
            ],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "elasticsearch",
                "tar",
                "get",
                "apt",
                "curl"
            ]
        },
        {
            "gates": [],
            "from_full": "ubuntu:14.04",
            "cmd_keywords": [],
            "path": "/kube-local-compose/plugins/stats-fluentd-elasticsearch/fluentd-es-image/Dockerfile",
            "servers": [],
            "cmd": "",
            "from": "ubuntu",
            "buses": [],
            "langs": [],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "agent",
                "apt",
                "install",
                "get",
                "fluent"
            ]
        },
        {
            "gates": [],
            "from_full": "busybox",
            "cmd_keywords": [],
            "path": "/kube-aws/vpc_config_builder/build/dns/kube2sky/Dockerfile",
            "servers": [
                "busybox"
            ],
            "cmd": "",
            "from": "busybox",
            "buses": [],
            "langs": [],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": []
        },
        {
            "gates": [],
            "from_full": "busybox",
            "cmd_keywords": [],
            "path": "/kube-aws/vpc_config_builder/build/dns/skydns/Dockerfile",
            "servers": [
                "busybox"
            ],
            "cmd": "",
            "from": "busybox",
            "buses": [],
            "langs": [],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": []
        },
        {
            "gates": [],
            "from_full": "ubuntu:14.04",
            "cmd_keywords": [
                "fluentd",
                "google",
                "usr",
                "sbin",
                "args"
            ],
            "path": "/kube-aws/vpc_config_builder/build/fluentd-gcp/fluentd-gcp-image/Dockerfile",
            "servers": [],
            "cmd": "/usr/sbin/google-fluentd \"$FLUENTD_ARGS\"",
            "from": "ubuntu",
            "buses": [],
            "langs": [
                "bash"
            ],
            "dbs": [],
            "discos": [],
            "monitors": [
                "fluentd"
            ],
            "keywords": [
                "get",
                "fluentd",
                "google",
                "apt",
                "install"
            ]
        },
        {
            "gates": [],
            "from_full": "haproxy:1.5",
            "cmd_keywords": [
                "proxy",
                "run",
                "usr",
                "bin"
            ],
            "path": "/kube-aws/vpc_config_builder/build/registry/images/Dockerfile",
            "servers": [],
            "cmd": "/usr/bin/run_proxy",
            "from": "haproxy",
            "buses": [],
            "langs": [],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "bin",
                "run",
                "proxy",
                "usr",
                "get"
            ]
        },
        {
            "gates": [],
            "from_full": "java:openjdk-7-jre",
            "cmd_keywords": [
                "run"
            ],
            "path": "/kube-aws/vpc_config_builder/build/fluentd-elasticsearch/kibana-image/Dockerfile",
            "servers": [],
            "cmd": "/run.sh",
            "from": "java",
            "buses": [],
            "langs": [
                "java"
            ],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "kibana",
                "tar",
                "get",
                "linux",
                "apt"
            ]
        },
        {
            "gates": [],
            "from_full": "java:openjdk-7-jre",
            "cmd_keywords": [
                "run"
            ],
            "path": "/kube-aws/vpc_config_builder/build/fluentd-elasticsearch/es-image/Dockerfile",
            "servers": [],
            "cmd": "/run.sh",
            "from": "java",
            "buses": [],
            "langs": [
                "java"
            ],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "elasticsearch",
                "tar",
                "get",
                "apt",
                "curl"
            ]
        },
        {
            "gates": [],
            "from_full": "ubuntu:14.04",
            "cmd_keywords": [],
            "path": "/kube-aws/vpc_config_builder/build/fluentd-elasticsearch/fluentd-es-image/Dockerfile",
            "servers": [],
            "cmd": "",
            "from": "ubuntu",
            "buses": [],
            "langs": [],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "agent",
                "apt",
                "install",
                "get",
                "fluent"
            ]
        },
        {
            "gates": [
                "nginx"
            ],
            "from_full": "ubuntu",
            "cmd_keywords": [
                "metrilyx",
                "bash",
                "start",
                "bin",
                "opt"
            ],
            "path": "/services/metrics_benchmark/metrilyx/Dockerfile",
            "servers": [],
            "cmd": "/bin/bash /opt/metrilyx/start.sh",
            "from": "ubuntu",
            "buses": [],
            "langs": [
                "bash"
            ],
            "dbs": [
                "sqlite"
            ],
            "discos": [],
            "monitors": [],
            "keywords": [
                "metrilyx",
                "opt",
                "data",
                "etc",
                "www"
            ]
        },
        {
            "gates": [
                "nginx"
            ],
            "from_full": "ubuntu:vivid",
            "cmd_keywords": [
                "nginx"
            ],
            "path": "/services/metrics_benchmark/vision-cyclops/nginx/Dockerfile",
            "servers": [],
            "cmd": "nginx",
            "from": "ubuntu",
            "buses": [],
            "langs": [],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "apt",
                "nginx",
                "etc",
                "get",
                "kibana"
            ]
        },
        {
            "gates": [],
            "from_full": "golang:1.5-wheezy",
            "cmd_keywords": [
                "forwarder",
                "logstash",
                "config",
                "json",
                "opt"
            ],
            "path": "/services/metrics_benchmark/vision-cyclops/forwarder/Dockerfile",
            "servers": [],
            "cmd": "/opt/logstash-forwarder/logstash-forwarder -config /etc/logstash-forwarder/config.json",
            "from": "golang",
            "buses": [],
            "langs": [
                "golang"
            ],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "logstash",
                "forwarder",
                "opt",
                "mkdir",
                "target"
            ]
        },
        {
            "gates": [],
            "from_full": "java:openjdk-8-jdk",
            "cmd_keywords": [
                "bootstrap",
                "etc"
            ],
            "path": "/services/metrics_benchmark/vision-cyclops/graphdb/Dockerfile",
            "servers": [],
            "cmd": "/etc/bootstrap.sh -d",
            "from": "java",
            "buses": [],
            "langs": [
                "java"
            ],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "neo",
                "lib",
                "server",
                "var",
                "org"
            ]
        },
        {
            "gates": [],
            "from_full": "ubuntu:vivid",
            "cmd_keywords": [],
            "path": "/services/metrics_benchmark/vision-cyclops/logstash/Dockerfile",
            "servers": [],
            "cmd": "",
            "from": "ubuntu",
            "buses": [],
            "langs": [],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "apt",
                "get",
                "elasticsearch",
                "install",
                "http"
            ]
        },
        {
            "gates": [],
            "from_full": "java:openjdk-8-jdk",
            "cmd_keywords": [
                "bootstrap",
                "mazerunner",
                "etc"
            ],
            "path": "/services/metrics_benchmark/vision-cyclops/mazerunner/Dockerfile",
            "servers": [],
            "cmd": "/etc/mazerunner/bootstrap.sh -d",
            "from": "java",
            "buses": [
                "rabbitmq"
            ],
            "langs": [
                "java"
            ],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "rabbitmq",
                "apt",
                "etc",
                "get",
                "key"
            ]
        },
        {
            "gates": [],
            "from_full": "sequenceiq/pam:centos-6.5",
            "cmd_keywords": [
                "bootstrap",
                "etc"
            ],
            "path": "/services/metrics_benchmark/vision-cyclops/hdfs/Dockerfile",
            "servers": [],
            "cmd": "/etc/bootstrap.sh -d",
            "from": "sequenceiq/pam",
            "buses": [],
            "langs": [
                "java"
            ],
            "dbs": [
                "oracle"
            ],
            "discos": [],
            "monitors": [],
            "keywords": [
                "hadoop",
                "etc",
                "ssh",
                "prefix",
                "usr"
            ]
        },
        {
            "gates": [],
            "from_full": "ubuntu:vivid",
            "cmd_keywords": [],
            "path": "/services/metrics_benchmark/vision-cyclops/kibana/Dockerfile",
            "servers": [],
            "cmd": "",
            "from": "ubuntu",
            "buses": [],
            "langs": [],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "kibana",
                "get",
                "apt",
                "tar",
                "linux"
            ]
        },
        {
            "gates": [],
            "from_full": "ubuntu:vivid",
            "cmd_keywords": [],
            "path": "/services/metrics_benchmark/vision-cyclops/elasticsearch/Dockerfile",
            "servers": [],
            "cmd": "",
            "from": "ubuntu",
            "buses": [],
            "langs": [],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "elasticsearch",
                "apt",
                "get",
                "share",
                "usr"
            ]
        },
        {
            "gates": [],
            "from_full": "ubuntu:14.04",
            "cmd_keywords": [],
            "path": "/services/annotations-tools/docent-learner/Dockerfile",
            "servers": [],
            "cmd": "",
            "from": "ubuntu",
            "buses": [],
            "langs": [
                "python"
            ],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "basedir",
                "var",
                "mkdir",
                "chmod",
                "learner"
            ]
        },
        {
            "gates": [],
            "from_full": "java:8",
            "cmd_keywords": [],
            "path": "/services/big-data/spring-cloud-polyglot-persistence-example/movie-microservice/src/main/docker/Dockerfile",
            "servers": [],
            "cmd": "",
            "from": "java",
            "buses": [],
            "langs": [
                "java"
            ],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "app",
                "bash",
                "jar",
                "touch"
            ]
        },
        {
            "gates": [],
            "from_full": "java:8",
            "cmd_keywords": [],
            "path": "/services/big-data/spring-cloud-polyglot-persistence-example/api-gateway-microservice/src/main/docker/Dockerfile",
            "servers": [],
            "cmd": "",
            "from": "java",
            "buses": [],
            "langs": [
                "java"
            ],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "app",
                "bash",
                "jar",
                "touch"
            ]
        },
        {
            "gates": [],
            "from_full": "java:8",
            "cmd_keywords": [],
            "path": "/services/big-data/spring-cloud-polyglot-persistence-example/rating-microservice/src/main/docker/Dockerfile",
            "servers": [],
            "cmd": "",
            "from": "java",
            "buses": [],
            "langs": [
                "java"
            ],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "app",
                "bash",
                "jar",
                "touch"
            ]
        },
        {
            "gates": [],
            "from_full": "java:8",
            "cmd_keywords": [],
            "path": "/services/big-data/spring-cloud-polyglot-persistence-example/ui-search/src/main/docker/Dockerfile",
            "servers": [],
            "cmd": "",
            "from": "java",
            "buses": [],
            "langs": [
                "java"
            ],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "app",
                "bash",
                "jar",
                "touch"
            ]
        },
        {
            "gates": [],
            "from_full": "java:8",
            "cmd_keywords": [],
            "path": "/services/big-data/spring-cloud-polyglot-persistence-example/config-microservice/src/main/docker/Dockerfile",
            "servers": [],
            "cmd": "",
            "from": "java",
            "buses": [],
            "langs": [
                "java"
            ],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "app",
                "bash",
                "jar",
                "touch"
            ]
        },
        {
            "gates": [],
            "from_full": "java:8",
            "cmd_keywords": [],
            "path": "/services/big-data/spring-cloud-polyglot-persistence-example/discovery-microservice/src/main/docker/Dockerfile",
            "servers": [],
            "cmd": "",
            "from": "java",
            "buses": [],
            "langs": [
                "java"
            ],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "app",
                "bash",
                "jar",
                "touch"
            ]
        },
        {
            "gates": [],
            "from_full": "java:8",
            "cmd_keywords": [],
            "path": "/services/big-data/spring-cloud-polyglot-persistence-example/user-microservice/src/main/docker/Dockerfile",
            "servers": [],
            "cmd": "",
            "from": "java",
            "buses": [],
            "langs": [
                "java"
            ],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "app",
                "bash",
                "jar",
                "touch"
            ]
        },
        {
            "gates": [],
            "from_full": "sequenceiq/pam:centos-6.5",
            "cmd_keywords": [
                "bootstrap",
                "etc"
            ],
            "path": "/services/big-data/hadoop-docker/Dockerfile",
            "servers": [],
            "cmd": "/etc/bootstrap.sh -d",
            "from": "sequenceiq/pam",
            "buses": [],
            "langs": [
                "java"
            ],
            "dbs": [
                "oracle"
            ],
            "discos": [],
            "monitors": [],
            "keywords": [
                "hadoop",
                "etc",
                "ssh",
                "prefix",
                "usr"
            ]
        },
        {
            "gates": [],
            "from_full": "java:openjdk-8-jdk",
            "cmd_keywords": [
                "bootstrap",
                "mazerunner",
                "etc"
            ],
            "path": "/services/big-data/neo4j-mazerunner/docker/Dockerfile",
            "servers": [],
            "cmd": "/etc/mazerunner/bootstrap.sh -d",
            "from": "java",
            "buses": [
                "rabbitmq"
            ],
            "langs": [
                "java"
            ],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "rabbitmq",
                "etc",
                "apt",
                "get",
                "mazerunner"
            ]
        },
        {
            "gates": [],
            "from_full": "java:8",
            "cmd_keywords": [],
            "path": "/services/big-data/spring-cloud-stream/spring-cloud-stream-module-launcher/src/main/docker/Dockerfile",
            "servers": [],
            "cmd": "",
            "from": "java",
            "buses": [],
            "langs": [
                "java"
            ],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "module",
                "bash",
                "jar",
                "launcher",
                "touch"
            ]
        },
        {
            "gates": [],
            "from_full": "java:8",
            "cmd_keywords": [],
            "path": "/services/big-data/spring-cloud-microservice-example/users-microservice/src/main/docker/Dockerfile",
            "servers": [],
            "cmd": "",
            "from": "java",
            "buses": [],
            "langs": [
                "java"
            ],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "app",
                "bash",
                "jar",
                "touch"
            ]
        },
        {
            "gates": [],
            "from_full": "java:8",
            "cmd_keywords": [],
            "path": "/services/big-data/spring-cloud-microservice-example/movie-microservice/src/main/docker/Dockerfile",
            "servers": [],
            "cmd": "",
            "from": "java",
            "buses": [],
            "langs": [
                "java"
            ],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "app",
                "bash",
                "jar",
                "touch"
            ]
        },
        {
            "gates": [],
            "from_full": "java:8",
            "cmd_keywords": [],
            "path": "/services/big-data/spring-cloud-microservice-example/api-gateway-microservice/src/main/docker/Dockerfile",
            "servers": [],
            "cmd": "",
            "from": "java",
            "buses": [],
            "langs": [
                "java"
            ],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "app",
                "bash",
                "jar",
                "touch"
            ]
        },
        {
            "gates": [],
            "from_full": "java:8",
            "cmd_keywords": [],
            "path": "/services/big-data/spring-cloud-microservice-example/hystrix-dashboard/src/main/docker/Dockerfile",
            "servers": [],
            "cmd": "",
            "from": "java",
            "buses": [],
            "langs": [
                "java"
            ],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "app",
                "bash",
                "jar",
                "touch"
            ]
        },
        {
            "gates": [],
            "from_full": "java:8",
            "cmd_keywords": [],
            "path": "/services/big-data/spring-cloud-microservice-example/recommendation-microservice/src/main/docker/Dockerfile",
            "servers": [],
            "cmd": "",
            "from": "java",
            "buses": [],
            "langs": [
                "java"
            ],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "app",
                "bash",
                "jar",
                "touch"
            ]
        },
        {
            "gates": [],
            "from_full": "java:8",
            "cmd_keywords": [],
            "path": "/services/big-data/spring-cloud-microservice-example/movies-ui/src/main/docker/Dockerfile",
            "servers": [],
            "cmd": "",
            "from": "java",
            "buses": [],
            "langs": [
                "java"
            ],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "app",
                "bash",
                "jar",
                "touch"
            ]
        },
        {
            "gates": [],
            "from_full": "java:8",
            "cmd_keywords": [],
            "path": "/services/big-data/spring-cloud-microservice-example/config-microservice/src/main/docker/Dockerfile",
            "servers": [],
            "cmd": "",
            "from": "java",
            "buses": [],
            "langs": [
                "java"
            ],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "app",
                "bash",
                "jar",
                "touch"
            ]
        },
        {
            "gates": [],
            "from_full": "java:8",
            "cmd_keywords": [],
            "path": "/services/big-data/spring-cloud-microservice-example/discovery-microservice/src/main/docker/Dockerfile",
            "servers": [],
            "cmd": "",
            "from": "java",
            "buses": [],
            "langs": [
                "java"
            ],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "app",
                "bash",
                "jar",
                "touch"
            ]
        },
        {
            "gates": [],
            "from_full": "java:8",
            "cmd_keywords": [],
            "path": "/services/big-data/spring-cloud-microservice-example/consul-microservice/src/main/docker/Dockerfile",
            "servers": [],
            "cmd": "",
            "from": "java",
            "buses": [],
            "langs": [
                "java"
            ],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "app",
                "bash",
                "jar",
                "touch"
            ]
        },
        {
            "gates": [],
            "from_full": "java:openjdk-8-jdk",
            "cmd_keywords": [
                "bootstrap",
                "etc"
            ],
            "path": "/services/big-data/docker-neo4j/Dockerfile",
            "servers": [],
            "cmd": "/etc/bootstrap.sh -d",
            "from": "java",
            "buses": [],
            "langs": [
                "java"
            ],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "neo",
                "lib",
                "server",
                "var",
                "org"
            ]
        },
        {
            "gates": [],
            "from_full": "ubuntu:14.04",
            "cmd_keywords": [
                "usr",
                "supervisord",
                "bin"
            ],
            "path": "/services/ui-frontoffice/angular-admin-seed/Dockerfile",
            "servers": [
                "node"
            ],
            "cmd": "/usr/bin/supervisord",
            "from": "ubuntu",
            "buses": [],
            "langs": [
                "python"
            ],
            "dbs": [
                "sqlite"
            ],
            "discos": [],
            "monitors": [],
            "keywords": [
                "install",
                "node",
                "npm",
                "tar",
                "latest"
            ]
        },
        {
            "gates": [],
            "from_full": "ipython/scipyserver",
            "cmd_keywords": [
                "notebook"
            ],
            "path": "/services/knowledge_graphs/wikimedia_data_learning/Dockerfile",
            "servers": [],
            "cmd": "/notebook.sh",
            "from": "ipython/scipyserver",
            "buses": [],
            "langs": [
                "python"
            ],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "install",
                "pip",
                "dev",
                "git",
                "python"
            ]
        },
        {
            "gates": [],
            "from_full": "ubuntu:14.04",
            "cmd_keywords": [
                "python",
                "langid"
            ],
            "path": "/services/knowledge_graphs/natural-text-processing/language-identification/Dockerfile",
            "servers": [],
            "cmd": "['python','langid.py']",
            "from": "ubuntu",
            "buses": [],
            "langs": [
                "python"
            ],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "python",
                "setup",
                "install",
                "get",
                "build"
            ]
        },
        {
            "gates": [],
            "from_full": "tleyden5iwx/caffe-gpu-master",
            "cmd_keywords": [],
            "path": "/services/knowledge_graphs/natural-text-processing/deep-simplification/Dockerfile",
            "servers": [],
            "cmd": "",
            "from": "tleyden5iwx/caffe-gpu-master",
            "buses": [],
            "langs": [
                "python"
            ],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "run",
                "nvidia",
                "install",
                "dev",
                "installers"
            ]
        },
        {
            "gates": [],
            "from_full": "ubuntu:14.10",
            "cmd_keywords": [],
            "path": "/services/knowledge_graphs/natural-text-processing/docker-ner/Dockerfile",
            "servers": [],
            "cmd": "",
            "from": "ubuntu",
            "buses": [],
            "langs": [
                "python"
            ],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "ner",
                "stanford",
                "python",
                "zip",
                "install"
            ]
        },
        {
            "gates": [],
            "from_full": "java:openjdk-7-jdk",
            "cmd_keywords": [
                "usr",
                "supervisord",
                "bin"
            ],
            "path": "/services/knowledge_graphs/natural-text-processing/apache-stanbol/dockerfiles/Dockerfile",
            "servers": [],
            "cmd": "/usr/bin/supervisord",
            "from": "java",
            "buses": [],
            "langs": [
                "java"
            ],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "apt",
                "get",
                "stanbol",
                "var",
                "opt"
            ]
        },
        {
            "gates": [],
            "from_full": "google/python",
            "cmd_keywords": [
                "foodstuffs"
            ],
            "path": "/services/knowledge_graphs/foodpedia/foodpedia-parser-v2/Dockerfile",
            "servers": [],
            "cmd": "Foodstuffs",
            "from": "google/python",
            "buses": [],
            "langs": [
                "python"
            ],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "dev",
                "install",
                "get",
                "upload",
                "apt"
            ]
        },
        {
            "gates": [],
            "from_full": "stain/jena-fuseki",
            "cmd_keywords": [
                "fuseki",
                "jena",
                "config",
                "agrovoc",
                "substances"
            ],
            "path": "/services/knowledge_graphs/foodpedia/foodpedia-parser-v2/AGROVOC-products-substances/Dockerfile",
            "servers": [],
            "cmd": "mkdir /fuseki/databases/ && /jena-fuseki/load.sh agrovoc agrovoc_products_substances.n3 && /jena-fuseki/fuseki-server --config /fuseki/config.ttl",
            "from": "stain/jena-fuseki",
            "buses": [],
            "langs": [],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": []
        },
        {
            "gates": [],
            "from_full": "fedora",
            "cmd_keywords": [
                "json",
                "ldf",
                "config",
                "server"
            ],
            "path": "/services/knowledge_graphs/foodpedia/foodpedia-ldf/Dockerfile",
            "servers": [],
            "cmd": "ldf-server config.json 5000 4",
            "from": "fedora",
            "buses": [],
            "langs": [],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "install",
                "yum",
                "npm",
                "upgrade",
                "make"
            ]
        },
        {
            "gates": [],
            "from_full": "tomcat:8-jre8",
            "cmd_keywords": [],
            "path": "/services/knowledge_graphs/foodpedia/foodpedia-home/Dockerfile",
            "servers": [
                "tomcat"
            ],
            "cmd": "",
            "from": "tomcat",
            "buses": [],
            "langs": [],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "webapps",
                "catalina",
                "home"
            ]
        },
        {
            "gates": [
                "nginx"
            ],
            "from_full": "nginx",
            "cmd_keywords": [],
            "path": "/services/knowledge_graphs/foodpedia/foodpedia-pathrouter/Dockerfile",
            "servers": [],
            "cmd": "",
            "from": "nginx",
            "buses": [],
            "langs": [],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "nginx",
                "conf",
                "etc"
            ]
        },
        {
            "gates": [],
            "from_full": "python:3",
            "cmd_keywords": [
                "python",
                "server",
                "updater"
            ],
            "path": "/services/knowledge_graphs/foodpedia/food-ontology-updater/Dockerfile",
            "servers": [],
            "cmd": "python -u updater-server.py",
            "from": "python",
            "buses": [],
            "langs": [
                "python"
            ],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": []
        },
        {
            "gates": [
                "nginx"
            ],
            "from_full": "aksw/ontowiki-ubuntu-nginx",
            "cmd_keywords": [],
            "path": "/services/knowledge_graphs/foodpedia/foodpedia-endpoint/Dockerfile",
            "servers": [],
            "cmd": "",
            "from": "aksw/ontowiki-ubuntu-nginx",
            "buses": [],
            "langs": [],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "upload",
                "chmod",
                "mkdir",
                "dump",
                "backup"
            ]
        },
        {
            "gates": [
                "nginx"
            ],
            "from_full": "ubuntu:14.10",
            "cmd_keywords": [
                "start"
            ],
            "path": "/services/knowledge_graphs/foodpedia/dockerfiles/webapps/Dockerfile",
            "servers": [
                "tomcat"
            ],
            "cmd": "./start.sh",
            "from": "ubuntu",
            "buses": [],
            "langs": [],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "home",
                "foodpedia",
                "nginx",
                "tomcat",
                "webapps"
            ]
        },
        {
            "gates": [],
            "from_full": "tomcat:7.0",
            "cmd_keywords": [],
            "path": "/services/knowledge_graphs/foodpedia/foodpedia-servlet/Dockerfile",
            "servers": [
                "tomcat"
            ],
            "cmd": "",
            "from": "tomcat",
            "buses": [],
            "langs": [
                "java"
            ],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "foodpedia",
                "inf",
                "dir",
                "classes",
                "web"
            ]
        },
        {
            "gates": [],
            "from_full": "tomcat:7.0",
            "cmd_keywords": [
                "http",
                "locahost"
            ],
            "path": "/services/knowledge_graphs/foodpedia/foodpedia-pubby/pubby/Dockerfile",
            "servers": [
                "tomcat"
            ],
            "cmd": "http://locahost:8080",
            "from": "tomcat",
            "buses": [],
            "langs": [],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "get",
                "apt",
                "local",
                "update",
                "install"
            ]
        },
        {
            "gates": [],
            "from_full": "debian",
            "cmd_keywords": [],
            "path": "/services/knowledge_graphs/foodpedia/foodpedia-pubby/pubby-builder/Dockerfile",
            "servers": [],
            "cmd": "",
            "from": "debian",
            "buses": [],
            "langs": [],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "catalina",
                "pubby",
                "tmp",
                "webapps",
                "home"
            ]
        },
        {
            "gates": [],
            "from_full": "ubuntu:14.04",
            "cmd_keywords": [
                "host",
                "run",
                "and",
                "change",
                "etc"
            ],
            "path": "/services/knowledge_graphs/Europeana-Cloud/docker/cassandra/Dockerfile",
            "servers": [],
            "cmd": "sh /etc/cassandra/change_host_and_run.sh",
            "from": "ubuntu",
            "buses": [],
            "langs": [
                "python"
            ],
            "dbs": [
                "cassandra"
            ],
            "discos": [],
            "monitors": [],
            "keywords": [
                "cassandra",
                "apache",
                "data",
                "opt",
                "sed"
            ]
        },
        {
            "gates": [],
            "from_full": "ubuntu:14.04",
            "cmd_keywords": [
                "local",
                "usr",
                "startmain",
                "bin"
            ],
            "path": "/services/knowledge_graphs/Europeana-Cloud/docker/docker-swift-onlyone/Dockerfile",
            "servers": [],
            "cmd": "/usr/local/bin/startmain.sh",
            "from": "ubuntu",
            "buses": [],
            "langs": [],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "local",
                "var",
                "supervisor",
                "update",
                "usr"
            ]
        },
        {
            "gates": [],
            "from_full": "tomcat:7.0",
            "cmd_keywords": [
                "run",
                "catalina",
                "bin"
            ],
            "path": "/services/knowledge_graphs/Europeana-Cloud/docker/tomcat/Dockerfile",
            "servers": [
                "tomcat"
            ],
            "cmd": "bin/catalina.sh run",
            "from": "tomcat",
            "buses": [],
            "langs": [],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "admin",
                "gui",
                "tomcat",
                "local",
                "manager"
            ]
        },
        {
            "gates": [],
            "from_full": "ubuntu:14.04",
            "cmd_keywords": [],
            "path": "/services/vision/ocr-vision/octopress/Dockerfile",
            "servers": [],
            "cmd": "",
            "from": "ubuntu",
            "buses": [],
            "langs": [
                "ruby"
            ],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "git",
                "install",
                "get",
                "apt",
                "octopress"
            ]
        },
        {
            "gates": [],
            "from_full": "rtux/py-opencv",
            "cmd_keywords": [],
            "path": "/services/vision/ocr-vision/ocr-parking-ticket/Dockerfile",
            "servers": [],
            "cmd": "",
            "from": "rtux/py-opencv",
            "buses": [],
            "langs": [],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "pip",
                "update",
                "install",
                "get",
                "apt"
            ]
        },
        {
            "gates": [],
            "from_full": "ubuntu:14.04",
            "cmd_keywords": [],
            "path": "/services/vision/ocr-vision/ocropus/Dockerfile",
            "servers": [],
            "cmd": "",
            "from": "ubuntu",
            "buses": [],
            "langs": [
                "python"
            ],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "install",
                "apt",
                "get",
                "ocropuspath",
                "python"
            ]
        },
        {
            "gates": [],
            "from_full": "debian:latest",
            "cmd_keywords": [],
            "path": "/services/vision/deep-vision/deepdream-cpu/dockerfiles/Dockerfile",
            "servers": [],
            "cmd": "",
            "from": "debian",
            "buses": [],
            "langs": [
                "python"
            ],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "python",
                "dev",
                "makefile",
                "config",
                "bvlc"
            ]
        },
        {
            "gates": [],
            "from_full": "tleyden5iwx/caffe-gpu-master",
            "cmd_keywords": [],
            "path": "/services/vision/deep-vision/theia/dockerfiles/Dockerfile",
            "servers": [],
            "cmd": "",
            "from": "tleyden5iwx/caffe-gpu-master",
            "buses": [],
            "langs": [
                "python"
            ],
            "dbs": [
                "oracle"
            ],
            "discos": [],
            "monitors": [],
            "keywords": [
                "java",
                "tar",
                "version",
                "install",
                "http"
            ]
        },
        {
            "gates": [],
            "from_full": "tleyden5iwx/caffe-cpu-master",
            "cmd_keywords": [],
            "path": "/services/vision/deep-vision/theia/dockerfiles/cpu-only/Dockerfile",
            "servers": [],
            "cmd": "",
            "from": "tleyden5iwx/caffe-cpu-master",
            "buses": [],
            "langs": [
                "python"
            ],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "tar",
                "wget",
                "edu",
                "zip",
                "coco"
            ]
        },
        {
            "gates": [],
            "from_full": "tleyden5iwx/caffe-cpu-master",
            "cmd_keywords": [],
            "path": "/services/vision/deep-vision/elastic-thought/docker/cpu/master/Dockerfile",
            "servers": [],
            "cmd": "",
            "from": "tleyden5iwx/caffe-cpu-master",
            "buses": [],
            "langs": [
                "golang"
            ],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "tar",
                "get",
                "linux",
                "amd",
                "elastic"
            ]
        },
        {
            "gates": [],
            "from_full": "tleyden5iwx/caffe-cpu-master",
            "cmd_keywords": [],
            "path": "/services/vision/deep-vision/elastic-thought/docker/cpu/develop/Dockerfile",
            "servers": [],
            "cmd": "",
            "from": "tleyden5iwx/caffe-cpu-master",
            "buses": [],
            "langs": [
                "golang"
            ],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "tar",
                "get",
                "linux",
                "amd",
                "elastic"
            ]
        },
        {
            "gates": [],
            "from_full": "tleyden5iwx/caffe-gpu-master",
            "cmd_keywords": [],
            "path": "/services/vision/deep-vision/elastic-thought/docker/gpu/master/Dockerfile",
            "servers": [],
            "cmd": "",
            "from": "tleyden5iwx/caffe-gpu-master",
            "buses": [],
            "langs": [
                "golang"
            ],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "tar",
                "get",
                "linux",
                "amd",
                "elastic"
            ]
        },
        {
            "gates": [],
            "from_full": "tleyden5iwx/caffe-gpu-master",
            "cmd_keywords": [],
            "path": "/services/vision/deep-vision/elastic-thought/docker/gpu/develop/Dockerfile",
            "servers": [],
            "cmd": "",
            "from": "tleyden5iwx/caffe-gpu-master",
            "buses": [],
            "langs": [
                "golang"
            ],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "tar",
                "get",
                "linux",
                "amd",
                "elastic"
            ]
        },
        {
            "gates": [],
            "from_full": "karfai/fast-rcnn-cpu-env",
            "cmd_keywords": [],
            "path": "/services/vision/deep-vision/caffe-frameworks/fast-rcnn-cpu/Dockerfile",
            "servers": [],
            "cmd": "",
            "from": "karfai/fast-rcnn-cpu-env",
            "buses": [],
            "langs": [
                "perl"
            ],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "nproc",
                "matlab",
                "make",
                "rcnn",
                "opt"
            ]
        },
        {
            "gates": [],
            "from_full": "karfai/ubuntu-cuda",
            "cmd_keywords": [],
            "path": "/services/vision/deep-vision/caffe-frameworks/fast-rcnn-gpu-env/Dockerfile",
            "servers": [],
            "cmd": "",
            "from": "karfai/ubuntu-cuda",
            "buses": [],
            "langs": [
                "cmake"
            ],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "rcnn",
                "fast",
                "opt",
                "usr",
                "install"
            ]
        },
        {
            "gates": [],
            "from_full": "karfai/fast-rcnn-gpu-env",
            "cmd_keywords": [],
            "path": "/services/vision/deep-vision/caffe-frameworks/fast-rcnn-gpu/Dockerfile",
            "servers": [],
            "cmd": "",
            "from": "karfai/fast-rcnn-gpu-env",
            "buses": [],
            "langs": [
                "perl"
            ],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "nproc",
                "matlab",
                "make",
                "rcnn",
                "opt"
            ]
        },
        {
            "gates": [],
            "from_full": "karfai/fast-rcnn-cpu",
            "cmd_keywords": [
                "sshd",
                "usr",
                "sbin"
            ],
            "path": "/services/vision/deep-vision/caffe-frameworks/fast-rcnn-cpu-ssh/Dockerfile",
            "servers": [],
            "cmd": "/usr/sbin/sshd -D",
            "from": "karfai/fast-rcnn-cpu",
            "buses": [],
            "langs": [],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "pam",
                "etc",
                "sshd",
                "loginuid",
                "permitrootlogin"
            ]
        },
        {
            "gates": [],
            "from_full": "karfai/caffe-gpu",
            "cmd_keywords": [
                "notebook",
                "ipython",
                "bin",
                "conda",
                "opt"
            ],
            "path": "/services/vision/deep-vision/caffe-frameworks/caffe-gpu-notebook/Dockerfile",
            "servers": [],
            "cmd": "/opt/conda/bin/ipython notebook --ip='*'",
            "from": "karfai/caffe-gpu",
            "buses": [],
            "langs": [
                "python"
            ],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "ipython",
                "python",
                "root",
                "conda",
                "opt"
            ]
        },
        {
            "gates": [],
            "from_full": "karfai/caffe-cpu-env",
            "cmd_keywords": [],
            "path": "/services/vision/deep-vision/caffe-frameworks/caffe-cpu/Dockerfile",
            "servers": [],
            "cmd": "",
            "from": "karfai/caffe-cpu-env",
            "buses": [],
            "langs": [
                "perl"
            ],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "matlab",
                "nproc",
                "zip",
                "make",
                "local"
            ]
        },
        {
            "gates": [],
            "from_full": "ubuntu:14.04",
            "cmd_keywords": [],
            "path": "/services/vision/deep-vision/caffe-frameworks/ubuntu-cuda/Dockerfile",
            "servers": [],
            "cmd": "",
            "from": "ubuntu",
            "buses": [],
            "langs": [
                "bash"
            ],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "cuda",
                "run",
                "linux",
                "nvidia",
                "installers"
            ]
        },
        {
            "gates": [],
            "from_full": "karfai/caffe-gpu-env",
            "cmd_keywords": [],
            "path": "/services/vision/deep-vision/caffe-frameworks/caffe-gpu/Dockerfile",
            "servers": [],
            "cmd": "",
            "from": "karfai/caffe-gpu-env",
            "buses": [],
            "langs": [
                "perl"
            ],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "matlab",
                "nproc",
                "zip",
                "make",
                "local"
            ]
        },
        {
            "gates": [],
            "from_full": "karfai/fast-rcnn-gpu",
            "cmd_keywords": [
                "notebook",
                "ipython",
                "bin",
                "conda",
                "opt"
            ],
            "path": "/services/vision/deep-vision/caffe-frameworks/fast-rcnn-gpu-notebook/Dockerfile",
            "servers": [],
            "cmd": "/opt/conda/bin/ipython notebook",
            "from": "karfai/fast-rcnn-gpu",
            "buses": [],
            "langs": [
                "python"
            ],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "ipython",
                "python",
                "root",
                "conda",
                "opt"
            ]
        },
        {
            "gates": [],
            "from_full": "ubuntu:14.04",
            "cmd_keywords": [],
            "path": "/services/vision/deep-vision/caffe-frameworks/caffe-cpu-env/Dockerfile",
            "servers": [],
            "cmd": "",
            "from": "ubuntu",
            "buses": [],
            "langs": [
                "cmake"
            ],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "usr",
                "opt",
                "python",
                "makefile",
                "caffe"
            ]
        },
        {
            "gates": [],
            "from_full": "karfai/caffe-cpu",
            "cmd_keywords": [
                "notebook",
                "ipython",
                "bin",
                "conda",
                "opt"
            ],
            "path": "/services/vision/deep-vision/caffe-frameworks/caffe-cpu-notebook/Dockerfile",
            "servers": [],
            "cmd": "/opt/conda/bin/ipython notebook",
            "from": "karfai/caffe-cpu",
            "buses": [],
            "langs": [
                "python"
            ],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "ipython",
                "python",
                "root",
                "conda",
                "opt"
            ]
        },
        {
            "gates": [],
            "from_full": "ubuntu:14.04",
            "cmd_keywords": [],
            "path": "/services/vision/deep-vision/caffe-frameworks/fast-rcnn-cpu-env/Dockerfile",
            "servers": [],
            "cmd": "",
            "from": "ubuntu",
            "buses": [],
            "langs": [
                "cmake"
            ],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "rcnn",
                "fast",
                "opt",
                "usr",
                "install"
            ]
        },
        {
            "gates": [],
            "from_full": "karfai/fast-rcnn-cpu",
            "cmd_keywords": [
                "notebook",
                "ipython",
                "bin",
                "conda",
                "opt"
            ],
            "path": "/services/vision/deep-vision/caffe-frameworks/fast-rcnn-cpu-notebook/Dockerfile",
            "servers": [],
            "cmd": "/opt/conda/bin/ipython notebook",
            "from": "karfai/fast-rcnn-cpu",
            "buses": [],
            "langs": [
                "python"
            ],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "ipython",
                "python",
                "root",
                "conda",
                "opt"
            ]
        },
        {
            "gates": [],
            "from_full": "karfai/ubuntu-cuda",
            "cmd_keywords": [],
            "path": "/services/vision/deep-vision/caffe-frameworks/caffe-gpu-env/Dockerfile",
            "servers": [],
            "cmd": "",
            "from": "karfai/ubuntu-cuda",
            "buses": [],
            "langs": [
                "cmake"
            ],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "usr",
                "opt",
                "caffe",
                "python",
                "makefile"
            ]
        },
        {
            "gates": [],
            "from_full": "karfai/fast-rcnn-gpu",
            "cmd_keywords": [
                "sshd",
                "usr",
                "sbin"
            ],
            "path": "/services/vision/deep-vision/caffe-frameworks/fast-rcnn-gpu-ssh/Dockerfile",
            "servers": [],
            "cmd": "/usr/sbin/sshd -D",
            "from": "karfai/fast-rcnn-gpu",
            "buses": [],
            "langs": [],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "pam",
                "etc",
                "sshd",
                "loginuid",
                "permitrootlogin"
            ]
        },
        {
            "gates": [],
            "from_full": "node:0.12.7",
            "cmd_keywords": [
                "start",
                "npm"
            ],
            "path": "/services/vision/opencv-vision/d-colors/dockerfiles/Dockerfile",
            "servers": [
                "node"
            ],
            "cmd": "npm start",
            "from": "node",
            "buses": [],
            "langs": [],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "cloudcv",
                "install",
                "bootstrap",
                "npm",
                "perm"
            ]
        },
        {
            "gates": [],
            "from_full": "alantrrs/docker-node-opencv3",
            "cmd_keywords": [
                "bash"
            ],
            "path": "/services/vision/opencv-vision/visual-object-tracking/Dockerfile",
            "servers": [
                "node"
            ],
            "cmd": "bash",
            "from": "alantrrs/docker-node-opencv3",
            "buses": [],
            "langs": [
                "bash"
            ],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "octave",
                "get",
                "apt",
                "install",
                "sudo"
            ]
        },
        {
            "gates": [],
            "from_full": "ubuntu:14.04",
            "cmd_keywords": [
                "find",
                "port",
                "object",
                "saved",
                "console"
            ],
            "path": "/services/vision/opencv-vision/find-object/dockerfiles/Dockerfile",
            "servers": [],
            "cmd": "/fo3/bin/find-object --objects /opt/datasets --images_not_saved --config /fo3/find-object.ini --Camera/8port 5500 --General/port 4400 --console",
            "from": "ubuntu",
            "buses": [],
            "langs": [
                "python"
            ],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "dev",
                "with",
                "git",
                "build",
                "install"
            ]
        },
        {
            "gates": [],
            "from_full": "ubuntu:14.04",
            "cmd_keywords": [],
            "path": "/services/vision/opencv-vision/simplecv/Dockerfile",
            "servers": [],
            "cmd": "",
            "from": "ubuntu",
            "buses": [],
            "langs": [
                "python"
            ],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "python",
                "install",
                "pip",
                "get",
                "apt"
            ]
        },
        {
            "gates": [],
            "from_full": "ubuntu:14.04",
            "cmd_keywords": [],
            "path": "/services/vision/opencv-vision/node-opencv/Dockerfile",
            "servers": [],
            "cmd": "",
            "from": "ubuntu",
            "buses": [],
            "langs": [
                "python"
            ],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "apt",
                "get",
                "install",
                "dev",
                "update"
            ]
        },
        {
            "gates": [],
            "from_full": "ubuntu:14.04",
            "cmd_keywords": [
                "ccv",
                "run"
            ],
            "path": "/services/vision/opencv-vision/libccv/dockerfiles/Dockerfile",
            "servers": [],
            "cmd": "/run_ccv.sh",
            "from": "ubuntu",
            "buses": [],
            "langs": [
                "gcc"
            ],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "dev",
                "git",
                "apt",
                "ccv",
                "make"
            ]
        },
        {
            "gates": [],
            "from_full": "debian:wheezy",
            "cmd_keywords": [
                "bash"
            ],
            "path": "/services/vision/opencv-vision/docker-opencv-compile/Dockerfile",
            "servers": [],
            "cmd": "bash",
            "from": "debian",
            "buses": [],
            "langs": [
                "bash"
            ],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "install",
                "chmod"
            ]
        },
        {
            "gates": [],
            "from_full": "node:0.12.2",
            "cmd_keywords": [
                "vmx",
                "middle"
            ],
            "path": "/services/vision/custom-vision/vision-plus/vision-plus-server/Dockerfile",
            "servers": [
                "node"
            ],
            "cmd": "/vmx/middle/vmx",
            "from": "node",
            "buses": [],
            "langs": [
                "python"
            ],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "tar",
                "dev",
                "linux",
                "vmx",
                "install"
            ]
        },
        {
            "gates": [],
            "from_full": "ubuntu",
            "cmd_keywords": [
                "start"
            ],
            "path": "/services/vision/svm-vision/vmx-v1.x-maxfactor/dockerfiles/Dockerfile",
            "servers": [],
            "cmd": "/start.sh",
            "from": "ubuntu",
            "buses": [],
            "langs": [
                "python"
            ],
            "dbs": [],
            "discos": [
                "traefik"
            ],
            "monitors": [],
            "keywords": [
                "tar",
                "vmx",
                "linux",
                "wget",
                "install"
            ]
        },
        {
            "gates": [],
            "from_full": "scratch",
            "cmd_keywords": [],
            "path": "/services/vision/svm-vision/vmx-v2.x-maxfactor/traefik/Dockerfile",
            "servers": [],
            "cmd": "",
            "from": "scratch",
            "buses": [],
            "langs": [
                "scratch"
            ],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": []
        },
        {
            "gates": [
                "nginx"
            ],
            "from_full": "ubuntu",
            "cmd_keywords": [
                "start"
            ],
            "path": "/services/vision/svm-vision/vmx-v2.x-maxfactor/dockerfiles/Dockerfile",
            "servers": [],
            "cmd": "/start.sh",
            "from": "ubuntu",
            "buses": [],
            "langs": [
                "python"
            ],
            "dbs": [],
            "discos": [
                "traefik"
            ],
            "monitors": [],
            "keywords": [
                "tar",
                "vmx",
                "linux",
                "wget",
                "build"
            ]
        },
        {
            "gates": [],
            "from_full": "ubuntu:14.04",
            "cmd_keywords": [],
            "path": "/services/vision/utils/matlab-runtime/dockerfiles/Dockerfile",
            "servers": [],
            "cmd": "",
            "from": "ubuntu",
            "buses": [],
            "langs": [],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "get",
                "apt",
                "wget",
                "curl",
                "update"
            ]
        },
        {
            "gates": [],
            "from_full": "progrium/busybox",
            "cmd_keywords": [],
            "path": "/services/vision/image-proxy/seaweedfs/Dockerfile",
            "servers": [
                "busybox"
            ],
            "cmd": "",
            "from": "progrium/busybox",
            "buses": [],
            "langs": [],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "curl",
                "bin",
                "weed",
                "href",
                "seaweedfs"
            ]
        },
        {
            "gates": [],
            "from_full": "centos:centos6",
            "cmd_keywords": [
                "traefik",
                "opt",
                "toml"
            ],
            "path": "/services/vision/proprietary-vision/ltuengin76/dockerfiles/Dockerfile",
            "servers": [],
            "cmd": "/opt/traefik_d /opt/traefik.toml",
            "from": "centos",
            "buses": [],
            "langs": [
                "python"
            ],
            "dbs": [],
            "discos": [
                "traefik"
            ],
            "monitors": [],
            "keywords": [
                "opt",
                "traefik",
                "python",
                "yum",
                "install"
            ]
        },
        {
            "gates": [],
            "from_full": "rdhyee/scipyserver-ansible",
            "cmd_keywords": [
                "notebook"
            ],
            "path": "/services/crawlers/commoncrawl-2014/Experiments/IPython-notebook-docker/Dockerfile",
            "servers": [],
            "cmd": "/notebook.sh",
            "from": "rdhyee/scipyserver-ansible",
            "buses": [],
            "langs": [
                "python"
            ],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "install",
                "gzipstream",
                "tmp",
                "pip",
                "git"
            ]
        },
        {
            "gates": [],
            "from_full": "cassandra:2.2",
            "cmd_keywords": [
                "cassandra"
            ],
            "path": "/services/database-frameworks/cassandra-kubernetes/image/Dockerfile",
            "servers": [],
            "cmd": "cassandra -f",
            "from": "cassandra",
            "buses": [],
            "langs": [],
            "dbs": [
                "cassandra"
            ],
            "discos": [],
            "monitors": [],
            "keywords": [
                "apt",
                "get",
                "dnsutils",
                "update",
                "lib"
            ]
        },
        {
            "gates": [],
            "from_full": "klokantech/supervisord",
            "cmd_keywords": [
                "supervisord",
                "local",
                "bin",
                "usr",
                "conf"
            ],
            "path": "/services/images-services/europeana-creative-IIIF/embed/Dockerfile",
            "servers": [],
            "cmd": "/usr/local/bin/supervisord -c /etc/supervisord/supervisord.conf",
            "from": "klokantech/supervisord",
            "buses": [],
            "langs": [
                "python"
            ],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "install",
                "python",
                "uwsgi",
                "pip",
                "get"
            ]
        },
        {
            "gates": [],
            "from_full": "debian:7",
            "cmd_keywords": [],
            "path": "/services/images-services/europeana-creative-IIIF/ingest/Dockerfile",
            "servers": [],
            "cmd": "",
            "from": "debian",
            "buses": [],
            "langs": [
                "python"
            ],
            "dbs": [
                "memcached"
            ],
            "discos": [],
            "monitors": [],
            "keywords": [
                "apt",
                "get",
                "install",
                "iiifserver",
                "update"
            ]
        },
        {
            "gates": [],
            "from_full": "progrium/busybox",
            "cmd_keywords": [],
            "path": "/services/nofs-filesystem/salesforce-seaweed-fs/dockerfiles/Dockerfile",
            "servers": [
                "busybox"
            ],
            "cmd": "",
            "from": "progrium/busybox",
            "buses": [],
            "langs": [],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "curl",
                "bin",
                "weed",
                "href",
                "seaweedfs"
            ]
        },
        {
            "gates": [],
            "from_full": "ubuntu:14.04",
            "cmd_keywords": [
                "bash",
                "bin"
            ],
            "path": "/services/nofs-filesystem/docker-s3fs/dockerfiles/Dockerfile",
            "servers": [],
            "cmd": "/bin/bash",
            "from": "ubuntu",
            "buses": [],
            "langs": [
                "bash"
            ],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "usr",
                "tar",
                "src",
                "fuse",
                "dev"
            ]
        },
        {
            "gates": [],
            "from_full": "debian:jessie",
            "cmd_keywords": [],
            "path": "/services/various/bombard-docker/Dockerfile",
            "servers": [],
            "cmd": "",
            "from": "debian",
            "buses": [],
            "langs": [
                "perl"
            ],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "make",
                "git",
                "install",
                "chart",
                "tar"
            ]
        },
        {
            "gates": [],
            "from_full": "alpine:3.2",
            "cmd_keywords": [],
            "path": "/services/various/alpine-linux-build/Dockerfile",
            "servers": [],
            "cmd": "",
            "from": "alpine",
            "buses": [],
            "langs": [],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "apk",
                "update",
                "github",
                "com",
                "get"
            ]
        },
        {
            "gates": [],
            "from_full": "gliderlabs/alpine",
            "cmd_keywords": [
                "make"
            ],
            "path": "/services/various/golang-alpine/Dockerfile",
            "servers": [],
            "cmd": "make",
            "from": "gliderlabs/alpine",
            "buses": [],
            "langs": [],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "bin",
                "constabulary",
                "docker",
                "install",
                "mkdir"
            ]
        },
        {
            "gates": [],
            "from_full": "ubuntu-debootstrap:14.04",
            "cmd_keywords": [
                "bash"
            ],
            "path": "/services/reverse_proxies/vmx-router/dockerfiles/Dockerfile",
            "servers": [],
            "cmd": "bash",
            "from": "ubuntu-debootstrap",
            "buses": [],
            "langs": [
                "bash"
            ],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "get",
                "apt",
                "wget",
                "noninteractive",
                "update"
            ]
        },
        {
            "gates": [],
            "from_full": "centos:6",
            "cmd_keywords": [
                "runner",
                "jetty",
                "eclipse",
                "jar",
                "org"
            ],
            "path": "/services/reverse_proxies/docker-hystrix-demo/hystrix-dashboard/Dockerfile",
            "servers": [
                "jetty"
            ],
            "cmd": "java -cp jetty-runner.jar org.eclipse.jetty.runner.Runner hystrix-dashboard.war",
            "from": "centos",
            "buses": [],
            "langs": [
                "java"
            ],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "jetty",
                "hystrix",
                "version",
                "curl",
                "maven"
            ]
        },
        {
            "gates": [],
            "from_full": "centos:7",
            "cmd_keywords": [
                "runner",
                "jetty",
                "eclipse",
                "jar",
                "org"
            ],
            "path": "/services/reverse_proxies/docker-hystrix-demo/hystrix-web-app/Dockerfile",
            "servers": [
                "jetty"
            ],
            "cmd": "java -cp jetty-runner.jar org.eclipse.jetty.runner.Runner hystrix-examples-webapp.war",
            "from": "centos",
            "buses": [],
            "langs": [
                "java"
            ],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "jetty",
                "hystrix",
                "version",
                "curl",
                "maven"
            ]
        },
        {
            "gates": [],
            "from_full": "ubuntu-debootstrap:14.04",
            "cmd_keywords": [],
            "path": "/services/reverse_proxies/distributed-search/Dockerfile",
            "servers": [],
            "cmd": "",
            "from": "ubuntu-debootstrap",
            "buses": [],
            "langs": [],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": []
        },
        {
            "gates": [],
            "from_full": "scratch",
            "cmd_keywords": [],
            "path": "/services/reverse_proxies/traefik/Dockerfile",
            "servers": [],
            "cmd": "",
            "from": "scratch",
            "buses": [],
            "langs": [
                "scratch"
            ],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": []
        },
        {
            "gates": [],
            "from_full": "golang",
            "cmd_keywords": [],
            "path": "/services/reverse_proxies/vulcand-framework/deployster/Dockerfile",
            "servers": [],
            "cmd": "",
            "from": "golang",
            "buses": [],
            "langs": [
                "golang"
            ],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "github",
                "com",
                "bmorton",
                "deployster",
                "install"
            ]
        },
        {
            "gates": [],
            "from_full": "golang:1.4-onbuild",
            "cmd_keywords": [],
            "path": "/services/reverse_proxies/vulcand-framework/vulcand/Dockerfile",
            "servers": [],
            "cmd": "",
            "from": "golang",
            "buses": [],
            "langs": [
                "golang"
            ],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "make",
                "install"
            ]
        },
        {
            "gates": [],
            "from_full": "vulcand/release",
            "cmd_keywords": [],
            "path": "/services/reverse_proxies/vulcand-framework/vulcand/scripts/Dockerfile",
            "servers": [],
            "cmd": "",
            "from": "vulcand/release",
            "buses": [],
            "langs": [
                "bash"
            ],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "alpha",
                "bash",
                "changelog",
                "tmp",
                "master"
            ]
        },
        {
            "gates": [],
            "from_full": "scratch",
            "cmd_keywords": [],
            "path": "/services/reverse_proxies/vulcand-framework/romulus_discovery/Dockerfile",
            "servers": [],
            "cmd": "",
            "from": "scratch",
            "buses": [],
            "langs": [
                "scratch"
            ],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": []
        },
        {
            "gates": [
                "nginx"
            ],
            "from_full": "ubuntu:14.04",
            "cmd_keywords": [
                "nginx"
            ],
            "path": "/services/reverse_proxies/vulcand-framework/vulcand-with-utils/vulcan-salute/Dockerfile",
            "servers": [],
            "cmd": "nginx",
            "from": "ubuntu",
            "buses": [],
            "langs": [
                "python"
            ],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "nginx",
                "install",
                "apt",
                "get",
                "python"
            ]
        },
        {
            "gates": [],
            "from_full": "golang:1.4-onbuild",
            "cmd_keywords": [],
            "path": "/services/reverse_proxies/vulcand-framework/vulcand-with-utils/vulcan-core/Dockerfile",
            "servers": [],
            "cmd": "",
            "from": "golang",
            "buses": [],
            "langs": [
                "golang"
            ],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "make",
                "install"
            ]
        },
        {
            "gates": [],
            "from_full": "vulcand/release",
            "cmd_keywords": [],
            "path": "/services/reverse_proxies/vulcand-framework/vulcand-with-utils/vulcan-core/scripts/Dockerfile",
            "servers": [],
            "cmd": "",
            "from": "vulcand/release",
            "buses": [],
            "langs": [
                "bash"
            ],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "alpha",
                "bash",
                "changelog",
                "tmp",
                "master"
            ]
        },
        {
            "gates": [
                "nginx"
            ],
            "from_full": "ubuntu:14.04",
            "cmd_keywords": [
                "nginx"
            ],
            "path": "/services/reverse_proxies/vulcand-framework/vulcan-salute/Dockerfile",
            "servers": [],
            "cmd": "nginx",
            "from": "ubuntu",
            "buses": [],
            "langs": [
                "bash"
            ],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "nginx",
                "install",
                "apt",
                "get",
                "curl"
            ]
        },
        {
            "gates": [],
            "from_full": "vikingco/django:3.4",
            "cmd_keywords": [],
            "path": "/services/reverse_proxies/kong/backend/Dockerfile",
            "servers": [
                "django"
            ],
            "cmd": "",
            "from": "vikingco/django",
            "buses": [],
            "langs": [],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "name",
                "apt",
                "install",
                "pip",
                "builddeps"
            ]
        },
        {
            "gates": [],
            "from_full": "node:wheezy",
            "cmd_keywords": [
                "grunt",
                "serve"
            ],
            "path": "/services/reverse_proxies/kong/backend/jungle/Dockerfile",
            "servers": [
                "node"
            ],
            "cmd": "grunt serve",
            "from": "node",
            "buses": [],
            "langs": [],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "core",
                "install",
                "npm",
                "config",
                "client"
            ]
        },
        {
            "gates": [
                "kong"
            ],
            "from_full": "debian:jessie",
            "cmd_keywords": [
                "kong",
                "local",
                "sleep",
                "usr",
                "tail"
            ],
            "path": "/services/reverse_proxies/kong/api/Dockerfile",
            "servers": [],
            "cmd": "echo \"Waiting 5 seconds...\"     && sleep 5     && kong start     && tail -f /usr/local/kong/logs/error.log",
            "from": "debian",
            "buses": [],
            "langs": [],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "kong",
                "builddeps",
                "base",
                "pkg",
                "git"
            ]
        },
        {
            "gates": [],
            "from_full": "debian:8.1",
            "cmd_keywords": [
                "version"
            ],
            "path": "/utils/docker-compose/Dockerfile",
            "servers": [],
            "cmd": "--version",
            "from": "debian",
            "buses": [],
            "langs": [],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "compose",
                "docker",
                "local",
                "curl",
                "install"
            ]
        },
        {
            "gates": [],
            "from_full": "debian:8.1",
            "cmd_keywords": [
                "version"
            ],
            "path": "/utils/docker-compose/tests/sample/Dockerfile",
            "servers": [],
            "cmd": "--version",
            "from": "debian",
            "buses": [],
            "langs": [],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "update",
                "apt",
                "get"
            ]
        },
        {
            "gates": [],
            "from_full": "python:2.7.10",
            "cmd_keywords": [],
            "path": "/utils/container-transform/Dockerfile",
            "servers": [],
            "cmd": "",
            "from": "python",
            "buses": [],
            "langs": [
                "python"
            ],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "container",
                "transform",
                "python",
                "setup",
                "install"
            ]
        },
        {
            "gates": [],
            "from_full": "gliderlabs/alpine",
            "cmd_keywords": [
                "make"
            ],
            "path": "/utils/alpine-golang/Dockerfile",
            "servers": [],
            "cmd": "make",
            "from": "gliderlabs/alpine",
            "buses": [],
            "langs": [],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "bin",
                "constabulary",
                "docker",
                "install",
                "mkdir"
            ]
        },
        {
            "gates": [],
            "from_full": "progrium/busybox",
            "cmd_keywords": [],
            "path": "/utils/seaweedfs/Dockerfile",
            "servers": [
                "busybox"
            ],
            "cmd": "",
            "from": "progrium/busybox",
            "buses": [],
            "langs": [],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "curl",
                "bin",
                "weed",
                "href",
                "seaweedfs"
            ]
        },
        {
            "gates": [],
            "from_full": "node:0.10-slim",
            "cmd_keywords": [],
            "path": "/utils/json2yaml/Dockerfile",
            "servers": [
                "node"
            ],
            "cmd": "",
            "from": "node",
            "buses": [],
            "langs": [],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "json",
                "npm",
                "yaml",
                "install",
                "clean"
            ]
        },
        {
            "gates": [],
            "from_full": "ubuntu:trusty",
            "cmd_keywords": [],
            "path": "/utils/s3fs-docker/Dockerfile",
            "servers": [],
            "cmd": "",
            "from": "ubuntu",
            "buses": [],
            "langs": [],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "get",
                "apt",
                "install",
                "dev",
                "openssl"
            ]
        },
        {
            "gates": [],
            "from_full": "golang:latest",
            "cmd_keywords": [
                "app",
                "main"
            ],
            "path": "/utils/compose2kube/Dockerfile",
            "servers": [],
            "cmd": "/app/main",
            "from": "golang",
            "buses": [],
            "langs": [
                "golang"
            ],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "mkdir",
                "app",
                "main",
                "build"
            ]
        },
        {
            "gates": [],
            "from_full": "golang:1.5-onbuild",
            "cmd_keywords": [],
            "path": "/utils/compose2kube_fixed/Dockerfile",
            "servers": [],
            "cmd": "",
            "from": "golang",
            "buses": [],
            "langs": [
                "golang"
            ],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": []
        },
        {
            "gates": [],
            "from_full": "ubuntu",
            "cmd_keywords": [
                "bash",
                "bin"
            ],
            "path": "/utils/dockerfiles/dev-tools/Dockerfile",
            "servers": [],
            "cmd": "/bin/bash",
            "from": "ubuntu",
            "buses": [],
            "langs": [
                "bash"
            ],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "apt",
                "get",
                "install",
                "dev",
                "libtool"
            ]
        },
        {
            "gates": [],
            "from_full": "ubuntu",
            "cmd_keywords": [
                "bash",
                "bin"
            ],
            "path": "/utils/dockerfiles/s3cmd/Dockerfile",
            "servers": [],
            "cmd": "/bin/bash",
            "from": "ubuntu",
            "buses": [],
            "langs": [
                "bash"
            ],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "apt",
                "get",
                "install",
                "cmd",
                "update"
            ]
        },
        {
            "gates": [],
            "from_full": "ubuntu",
            "cmd_keywords": [
                "start"
            ],
            "path": "/utils/dockerfiles/zcs/dev-tools/Dockerfile",
            "servers": [],
            "cmd": "/start.sh",
            "from": "ubuntu",
            "buses": [],
            "langs": [
                "python"
            ],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "apt",
                "get",
                "install",
                "dev",
                "sshd"
            ]
        },
        {
            "gates": [],
            "from_full": "ubuntu",
            "cmd_keywords": [
                "start"
            ],
            "path": "/utils/dockerfiles/zcs/sshd/Dockerfile",
            "servers": [],
            "cmd": "/start.sh",
            "from": "ubuntu",
            "buses": [],
            "langs": [],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "sshd",
                "pam",
                "etc",
                "loginuid",
                "config"
            ]
        },
        {
            "gates": [],
            "from_full": "ubuntu",
            "cmd_keywords": [
                "bash",
                "bin"
            ],
            "path": "/utils/dockerfiles/iozone/Dockerfile",
            "servers": [],
            "cmd": "/bin/bash",
            "from": "ubuntu",
            "buses": [],
            "langs": [
                "bash"
            ],
            "dbs": [],
            "discos": [],
            "monitors": [],
            "keywords": [
                "iozone",
                "tar",
                "src",
                "current",
                "wget"
            ]
        }
    ],
    "num_langs": 13,
    "num_monitors": 2,
    "num_buses": 4,
    "dbs": [
        "cassandra",
        "sqlite",
        "zookeeper",
        "couchbase",
        "memcached",
        "mongo",
        "velocity",
        "oracle",
        "hazelcast",
        "hbase",
        "sql",
        "coherence",
        "nexus",
        "postgresql",
        "enterprise",
        "mysql",
        "foundation",
        "derby",
        "max",
        "redis"
    ],
    "monitors": [
        "fluentd",
        "graphite"
    ],
    "num_discos": 6
}