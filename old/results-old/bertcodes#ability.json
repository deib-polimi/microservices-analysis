{
    "num_discos": 2,
    "url": "git://github.com/bertcodes/ability.git",
    "num_servers": 4,
    "discos": [
        "eureka",
        "zookeeper"
    ],
    "dbs": [
        "zookeeper",
        "mongo",
        "foundation",
        "redis"
    ],
    "num_gates": 0,
    "name": "bertcodes/ability",
    "num_langs": 1,
    "num_dockers": 1,
    "images": [
        "java"
    ],
    "size": 14201,
    "langs": [
        "java"
    ],
    "dockers": [
        {
            "cmd": "",
            "servers": [],
            "path": "/springcloud/docker/microservice-discovery-eureka/Dockerfile",
            "discos": [],
            "dbs": [],
            "from": "java",
            "from_full": "java:8",
            "monitors": [],
            "cmd_keywords": [],
            "gates": [],
            "buses": [],
            "langs": [
                "java"
            ],
            "keywords": [
                "app",
                "bash",
                "jar",
                "touch"
            ]
        }
    ],
    "num_services": 1,
    "shared_dbs": false,
    "languages": [
        "java"
    ],
    "servers": [
        "node",
        "express",
        "spring",
        "tomcat"
    ],
    "buses": [],
    "num_files": 71,
    "structure": {
        "services": [
            {
                "name": "discovery",
                "image": "damon/microservice-discovery-eureka",
                "image_full": "damon/microservice-discovery-eureka:1.0-SNAPSHOT",
                "gates": [],
                "servers": [],
                "buses": [],
                "discos": [
                    "eureka"
                ],
                "dbs": [],
                "monitors": [],
                "depends_on": []
            }
        ],
        "path": "/springcloud/docker-compose/microservice-discovery-eureka/docker-compose.yml",
        "detected_dbs": {
            "names": [],
            "shared_dbs": false,
            "num": 0,
            "services": []
        },
        "num_services": 1
    },
    "avg_size_service": 14201.0,
    "monitors": [],
    "gates": [],
    "num_monitors": 0,
    "num_dbs": 4,
    "num_buses": 0,
    "files": [
        {
            "monitors": [],
            "gates": [],
            "buses": [],
            "servers": [],
            "path": "/designmode/design-mode/pom.xml",
            "discos": [],
            "dbs": []
        },
        {
            "monitors": [],
            "gates": [],
            "buses": [],
            "servers": [
                "spring"
            ],
            "path": "/designmode/proxy-master/pom.xml",
            "discos": [],
            "dbs": []
        },
        {
            "monitors": [],
            "gates": [],
            "buses": [],
            "servers": [
                "spring"
            ],
            "path": "/ha/seckill_1/pom.xml",
            "discos": [],
            "dbs": []
        },
        {
            "path": "/ha/seckill_2/pom.xml"
        },
        {
            "path": "/ha/seckill_3/pom.xml"
        },
        {
            "path": "/springcloud/microservice-discovery-eureka-authenticating/pom.xml"
        },
        {
            "path": "/springcloud/microservice-discovery-eureka/pom.xml"
        },
        {
            "path": "/springcloud/docker-compose/microservice-discovery-eureka/pom.xml"
        },
        {
            "path": "/springcloud/docker-compose/complex/pom.xml"
        },
        {
            "path": "/springcloud/docker-compose/complex/microservice-discovery-eureka-ha/pom.xml"
        },
        {
            "path": "/springcloud/docker-compose/complex/microservice-hystrix-turbine/pom.xml"
        },
        {
            "path": "/springcloud/docker-compose/complex/microservice-provider-user/pom.xml"
        },
        {
            "path": "/springcloud/docker-compose/complex/microservice-gateway-zuul/pom.xml"
        },
        {
            "path": "/springcloud/docker-compose/complex/microservice-consumer-movie-ribbon-hystrix/pom.xml"
        },
        {
            "path": "/springcloud/microservice-discovery-eureka-ha/pom.xml"
        },
        {
            "path": "/springcloud/microservice-consumer-movie-feign/pom.xml"
        },
        {
            "path": "/springcloud/microservice-consumer-movie/pom.xml"
        },
        {
            "path": "/springcloud/microservice-consumer-movie-ribbon/pom.xml"
        },
        {
            "path": "/springcloud/docker/microservice-discovery-eureka/pom.xml"
        },
        {
            "path": "/springcloud/microservice-provider-user-my-metadata/pom.xml"
        },
        {
            "path": "/springcloud/microservice-consumer-movie-ribbon-customizing/pom.xml"
        },
        {
            "path": "/springcloud/microservice-provider-user/pom.xml"
        },
        {
            "path": "/springcloud/microservice-gateway-zuul/pom.xml"
        },
        {
            "path": "/springcloud/microservice-simple-consumer-movie/pom.xml"
        },
        {
            "path": "/springcloud/microservice-simpleprovider-user/pom.xml"
        },
        {
            "path": "/springcloud/microservice-consumer-movie-understanding-metadata/pom.xml"
        },
        {
            "path": "/springcloud/microservice-config-client/pom.xml"
        },
        {
            "path": "/springcloud/trace/microservice-trace-zipkin-server/pom.xml"
        },
        {
            "path": "/springcloud/trace/microservice-simple-consumer-movie-trace/pom.xml"
        },
        {
            "path": "/springcloud/trace/microservice-simple-provider-user-trace-zipkin/pom.xml"
        },
        {
            "path": "/springcloud/trace/microservice-simple-provider-user-trace/pom.xml"
        },
        {
            "path": "/springcloud/trace/microservice-simple-consumer-movie-trace-zipkin/pom.xml"
        },
        {
            "path": "/springcloud/microservice-consumer-movie-ribbon-hystrix/pom.xml"
        },
        {
            "path": "/springcloud/microservice-config-server/pom.xml"
        },
        {
            "monitors": [],
            "gates": [],
            "buses": [],
            "servers": [],
            "path": "/jvm/jvm/pom.xml",
            "discos": [],
            "dbs": []
        },
        {
            "monitors": [],
            "gates": [],
            "buses": [],
            "servers": [],
            "path": "/jvm/jvm-gc/pom.xml",
            "discos": [],
            "dbs": []
        },
        {
            "monitors": [],
            "gates": [],
            "buses": [],
            "servers": [],
            "path": "/java/java/pom.xml",
            "discos": [],
            "dbs": []
        },
        {
            "monitors": [],
            "gates": [],
            "buses": [],
            "servers": [
                "spring"
            ],
            "path": "/redis/redis-distributed-lock/pom.xml",
            "discos": [],
            "dbs": [
                "redis"
            ]
        },
        {
            "path": "/distributedtransaction/tcc/hmily/pom.xml"
        },
        {
            "monitors": [],
            "gates": [],
            "buses": [],
            "servers": [],
            "path": "/distributedtransaction/tcc/hmily/hmily-common/pom.xml",
            "discos": [],
            "dbs": [
                "mongodb",
                "redis",
                "mongo"
            ]
        },
        {
            "monitors": [],
            "gates": [],
            "buses": [],
            "servers": [],
            "path": "/distributedtransaction/tcc/hmily/hmily-dubbo/pom.xml",
            "discos": [],
            "dbs": []
        },
        {
            "monitors": [],
            "gates": [],
            "buses": [],
            "servers": [],
            "path": "/distributedtransaction/tcc/hmily/hmily-annotation/pom.xml",
            "discos": [],
            "dbs": []
        },
        {
            "monitors": [],
            "gates": [],
            "buses": [],
            "servers": [
                "spring"
            ],
            "path": "/distributedtransaction/tcc/hmily/hmily-core/pom.xml",
            "discos": [
                "zookeeper"
            ],
            "dbs": [
                "zookeeper",
                "mongodb"
            ]
        },
        {
            "monitors": [],
            "gates": [],
            "buses": [],
            "servers": [],
            "path": "/distributedtransaction/tcc/hmily/hmily-demo/pom.xml",
            "discos": [],
            "dbs": []
        },
        {
            "monitors": [],
            "gates": [],
            "buses": [],
            "servers": [],
            "path": "/distributedtransaction/tcc/hmily/hmily-demo/hmily-demo-dubbo/pom.xml",
            "discos": [],
            "dbs": [
                "foundation"
            ]
        },
        {
            "path": "/distributedtransaction/tcc/hmily/hmily-demo/hmily-demo-dubbo/hmily-demo-dubbo-account/pom.xml"
        },
        {
            "path": "/distributedtransaction/tcc/hmily/hmily-demo/hmily-demo-dubbo/hmily-demo-dubbo-order/pom.xml"
        },
        {
            "monitors": [],
            "gates": [],
            "buses": [],
            "servers": [],
            "path": "/distributedtransaction/tcc/hmily/hmily-demo/hmily-demo-dubbo/hmily-demo-dubbo-inventory-api/pom.xml",
            "discos": [],
            "dbs": [
                "foundation"
            ]
        },
        {
            "monitors": [],
            "gates": [],
            "buses": [],
            "servers": [],
            "path": "/distributedtransaction/tcc/hmily/hmily-demo/hmily-demo-dubbo/hmily-demo-dubbo-account-api/pom.xml",
            "discos": [],
            "dbs": [
                "foundation"
            ]
        },
        {
            "path": "/distributedtransaction/tcc/hmily/hmily-demo/hmily-demo-dubbo/hmily-demo-dubbo-inventory/pom.xml"
        },
        {
            "monitors": [],
            "gates": [],
            "buses": [],
            "servers": [],
            "path": "/distributedtransaction/tcc/hmily/hmily-demo/hmily-demo-springcloud/pom.xml",
            "discos": [
                "eureka"
            ],
            "dbs": [
                "foundation"
            ]
        },
        {
            "path": "/distributedtransaction/tcc/hmily/hmily-demo/hmily-demo-springcloud/hmily-demo-springcloud-order/pom.xml"
        },
        {
            "path": "/distributedtransaction/tcc/hmily/hmily-demo/hmily-demo-springcloud/hmily-demo-springcloud-account/pom.xml"
        },
        {
            "path": "/distributedtransaction/tcc/hmily/hmily-demo/hmily-demo-springcloud/hmily-demo-springcloud-eureka/pom.xml"
        },
        {
            "path": "/distributedtransaction/tcc/hmily/hmily-demo/hmily-demo-springcloud/hmily-demo-springcloud-inventory/pom.xml"
        },
        {
            "path": "/distributedtransaction/tcc/hmily/hmily-admin/pom.xml"
        },
        {
            "path": "/distributedtransaction/tcc/hmily/hmily-spring-boot-starter/pom.xml"
        },
        {
            "monitors": [],
            "gates": [],
            "buses": [],
            "servers": [
                "express",
                "spring"
            ],
            "path": "/distributedtransaction/tcc/hmily/hmily-spring-boot-starter/hmily-spring-boot-starter-dubbo/pom.xml",
            "discos": [],
            "dbs": [
                "foundation"
            ]
        },
        {
            "monitors": [],
            "gates": [],
            "buses": [],
            "servers": [
                "express",
                "spring"
            ],
            "path": "/distributedtransaction/tcc/hmily/hmily-spring-boot-starter/hmily-spring-boot-starter-motan/pom.xml",
            "discos": [],
            "dbs": [
                "foundation"
            ]
        },
        {
            "monitors": [],
            "gates": [],
            "buses": [],
            "servers": [
                "express",
                "spring"
            ],
            "path": "/distributedtransaction/tcc/hmily/hmily-spring-boot-starter/hmily-spring-boot-starter-springcloud/pom.xml",
            "discos": [],
            "dbs": [
                "foundation"
            ]
        },
        {
            "monitors": [],
            "gates": [],
            "buses": [],
            "servers": [
                "spring"
            ],
            "path": "/distributedtransaction/tcc/hmily/hmily-spring-boot-starter/hmily-spring-boot-starter-parent/pom.xml",
            "discos": [],
            "dbs": []
        },
        {
            "monitors": [],
            "gates": [],
            "buses": [],
            "servers": [],
            "path": "/distributedtransaction/tcc/hmily/hmily-motan/pom.xml",
            "discos": [],
            "dbs": []
        },
        {
            "monitors": [],
            "gates": [],
            "buses": [],
            "servers": [
                "spring",
                "tomcat"
            ],
            "path": "/distributedtransaction/tcc/hmily/hmily-springcloud/pom.xml",
            "discos": [
                "eureka"
            ],
            "dbs": []
        },
        {
            "path": "/springboot/springboot-start/pom.xml"
        },
        {
            "path": "/springboot/springboot-start-main/pom.xml"
        },
        {
            "path": "/springboot/springboot-aop-one/pom.xml"
        },
        {
            "monitors": [],
            "gates": [],
            "buses": [],
            "servers": [
                "spring"
            ],
            "path": "/spring/BeanPostProcessorDemo/pom.xml",
            "discos": [],
            "dbs": []
        },
        {
            "monitors": [],
            "gates": [],
            "buses": [],
            "servers": [],
            "path": "/jdk/new-in-jdk8/pom.xml",
            "discos": [],
            "dbs": []
        },
        {
            "monitors": [],
            "gates": [],
            "buses": [],
            "servers": [
                "node"
            ],
            "path": "/distributedtransaction/tcc/hmily/hmily-dashboard/package.json",
            "discos": [],
            "dbs": []
        }
    ]
}