{
    "structure": {
        "path": "/docker-compose.yml",
        "services": [
            {
                "servers": [],
                "buses": [],
                "gates": [],
                "monitors": [],
                "name": "zipkin",
                "dbs": [],
                "depends_on": [
                    "mongodb"
                ],
                "image": "openzipkin/zipkin",
                "image_full": "openzipkin/zipkin",
                "discos": []
            },
            {
                "servers": [],
                "buses": [],
                "gates": [],
                "monitors": [],
                "name": "vehicle-api",
                "dbs": [],
                "depends_on": [
                    "zipkin",
                    "mongodb"
                ],
                "image": "vehicle-api",
                "image_full": "vehicle-api",
                "discos": []
            },
            {
                "servers": [],
                "buses": [],
                "gates": [],
                "monitors": [],
                "name": "mongodb",
                "dbs": [
                    "mongo"
                ],
                "depends_on": [],
                "image": "mongo",
                "image_full": "mongo",
                "discos": []
            },
            {
                "servers": [],
                "buses": [],
                "gates": [],
                "monitors": [],
                "name": "dashboard-api",
                "dbs": [],
                "depends_on": [
                    "zipkin",
                    "mongodb"
                ],
                "image": "dashboard-api",
                "image_full": "dashboard-api",
                "discos": []
            },
            {
                "servers": [],
                "buses": [],
                "gates": [],
                "monitors": [],
                "name": "customer-api",
                "dbs": [],
                "depends_on": [
                    "zipkin",
                    "mongodb"
                ],
                "image": "customer-api",
                "image_full": "customer-api",
                "discos": []
            },
            {
                "servers": [],
                "buses": [],
                "gates": [],
                "monitors": [],
                "name": "vehicleowner-api",
                "dbs": [],
                "depends_on": [
                    "zipkin",
                    "mongodb"
                ],
                "image": "vehicleowner-api",
                "image_full": "vehicleowner-api",
                "discos": []
            },
            {
                "servers": [],
                "buses": [],
                "gates": [],
                "monitors": [],
                "name": "pulsworker-api",
                "dbs": [],
                "depends_on": [
                    "zipkin",
                    "mongodb",
                    "vehicleowner-api"
                ],
                "image": "pulsworker-api",
                "image_full": "pulsworker-api",
                "discos": []
            }
        ],
        "num_services": 7,
        "detected_dbs": {
            "names": [
                "mongo"
            ],
            "num": 1,
            "services": [
                "mongodb"
            ],
            "shared_dbs": true
        }
    },
    "discos": [],
    "size": 2238,
    "num_gates": 0,
    "num_langs": 1,
    "servers": [],
    "gates": [],
    "num_servers": 0,
    "num_buses": 0,
    "files": [],
    "num_dockers": 0,
    "buses": [],
    "languages": [
        "shell"
    ],
    "monitors": [],
    "dbs": [
        "mongo"
    ],
    "num_monitors": 0,
    "num_files": 1,
    "num_dbs": 1,
    "num_services": 7,
    "images": [],
    "url": "git://github.com/LuaySakr/MicroServiceSimple-DockerCompose.git",
    "dockers": [],
    "avg_size_service": 2238.0,
    "shared_dbs": true,
    "num_discos": 0,
    "langs": [
        "shell"
    ],
    "name": "LuaySakr/MicroServiceSimple-DockerCompose"
}