{
    "num_discos": 0,
    "buses": [],
    "name": "o2r-project/o2r-muncher",
    "dbs": [
        "db"
    ],
    "num_services": 0,
    "avg_size_service": 399.2,
    "num_monitors": 0,
    "monitors": [],
    "discos": [],
    "servers": [
        "mongoose",
        "express",
        "node"
    ],
    "url": "git://github.com/o2r-project/o2r-muncher.git",
    "num_dockers": 20,
    "files": [
        {
            "discos": [],
            "path": "/package.json",
            "servers": [
                "express",
                "node",
                "mongoose"
            ],
            "buses": [],
            "dbs": [
                "mongodb"
            ],
            "gates": [],
            "monitors": []
        }
    ],
    "shared_dbs": false,
    "size": 7984,
    "languages": [
        "html"
    ],
    "gates": [],
    "num_langs": 3,
    "structure": {
        "detected_dbs": {
            "num": 0,
            "services": [],
            "shared_dbs": false,
            "names": []
        },
        "num_services": 0,
        "path": [],
        "services": []
    },
    "dockers": [
        {
            "from_full": "node:12-alpine",
            "servers": [
                "node"
            ],
            "buses": [],
            "dbs": [],
            "cmd": "npm start",
            "langs": [
                "python"
            ],
            "from": "node",
            "monitors": [],
            "discos": [],
            "path": "/Dockerfile",
            "cmd_keywords": [
                "npm",
                "start"
            ],
            "gates": [],
            "keywords": [
                "pip",
                "usr",
                "python",
                "cache",
                "bin"
            ]
        },
        {
            "from_full": "rocker/geospatial:3.6.2",
            "servers": [],
            "buses": [],
            "dbs": [],
            "cmd": "",
            "langs": [],
            "from": "rocker/geospatial",
            "monitors": [],
            "discos": [],
            "path": "/test/Dockerfile",
            "cmd_keywords": [],
            "gates": [],
            "keywords": [
                "install",
                "pandoc",
                "apt",
                "get",
                "core"
            ]
        },
        {
            "from_full": "alpine",
            "servers": [],
            "buses": [],
            "dbs": [],
            "cmd": "echo metadata test",
            "langs": [],
            "from": "alpine",
            "monitors": [],
            "discos": [],
            "path": "/test/erc/metatainer-doi/data/Dockerfile",
            "cmd_keywords": [
                "echo",
                "test",
                "metadata"
            ],
            "gates": [],
            "keywords": []
        },
        {
            "from_full": "alpine",
            "servers": [],
            "buses": [],
            "dbs": [],
            "cmd": "uname -xxx",
            "langs": [],
            "from": "alpine",
            "monitors": [],
            "discos": [],
            "path": "/test/erc/step_image_build/data/Dockerfile",
            "cmd_keywords": [
                "uname",
                "xxx"
            ],
            "gates": [],
            "keywords": []
        },
        {
            "from_full": "alpine",
            "servers": [],
            "buses": [],
            "dbs": [],
            "cmd": "sh /tmp/main.sh",
            "langs": [],
            "from": "alpine",
            "monitors": [],
            "discos": [],
            "path": "/test/erc/dummy/data/Dockerfile",
            "cmd_keywords": [
                "main",
                "tmp"
            ],
            "gates": [],
            "keywords": [
                "html",
                "echo",
                "display",
                "main",
                "dummy"
            ]
        },
        {
            "from_full": "ubuntu:latest",
            "servers": [],
            "buses": [],
            "dbs": [],
            "cmd": "stress --verbose --timeout $TIMEOUT --cpu $SQRT_WORKERS --backoff $DELAY_MICROSECS",
            "langs": [],
            "from": "ubuntu",
            "monitors": [],
            "discos": [],
            "path": "/test/erc/stresstainer/data/Dockerfile",
            "cmd_keywords": [
                "timeout",
                "delay",
                "stress",
                "sqrt",
                "microsecs"
            ],
            "gates": [],
            "keywords": [
                "apt",
                "get",
                "lib",
                "stress",
                "var"
            ]
        },
        {
            "from_full": "alpine",
            "servers": [],
            "buses": [],
            "dbs": [],
            "cmd": "echo metadata license test",
            "langs": [],
            "from": "alpine",
            "monitors": [],
            "discos": [],
            "path": "/test/erc/metatainer-licenses/data/Dockerfile",
            "cmd_keywords": [
                "echo",
                "test",
                "license",
                "metadata"
            ],
            "gates": [],
            "keywords": []
        },
        {
            "servers": [],
            "buses": [],
            "dbs": [],
            "cmd": "",
            "langs": [],
            "from": "",
            "monitors": [],
            "discos": [],
            "path": "/test/erc/step_image_prepare/data/Dockerfile",
            "cmd_keywords": [],
            "gates": [],
            "keywords": []
        },
        {
            "from_full": "alpine",
            "servers": [],
            "buses": [],
            "dbs": [],
            "cmd": "echo metadata test",
            "langs": [],
            "from": "alpine",
            "monitors": [],
            "discos": [],
            "path": "/test/erc/metatainer/data/Dockerfile",
            "cmd_keywords": [
                "echo",
                "test",
                "metadata"
            ],
            "gates": [],
            "keywords": []
        },
        {
            "from_full": "debian:latest",
            "servers": [],
            "buses": [],
            "dbs": [],
            "cmd": "/bin/bash /gotosleep.sh",
            "langs": [
                "bash"
            ],
            "from": "debian",
            "monitors": [],
            "discos": [],
            "path": "/test/erc/sleeptainer/data/Dockerfile",
            "cmd_keywords": [
                "bin",
                "gotosleep",
                "bash"
            ],
            "gates": [],
            "keywords": []
        },
        {
            "from_full": "alpine",
            "servers": [],
            "buses": [],
            "dbs": [],
            "cmd": "uname -a",
            "langs": [],
            "from": "alpine",
            "monitors": [],
            "discos": [],
            "path": "/test/erc/step_image_execute/data/Dockerfile",
            "cmd_keywords": [
                "uname"
            ],
            "gates": [],
            "keywords": []
        },
        {
            "from_full": "alpine",
            "servers": [],
            "buses": [],
            "dbs": [],
            "cmd": "sh /tmp/main.sh",
            "langs": [],
            "from": "alpine",
            "monitors": [],
            "discos": [],
            "path": "/test/workspace/dummy/Dockerfile",
            "cmd_keywords": [
                "main",
                "tmp"
            ],
            "gates": [],
            "keywords": [
                "html",
                "echo",
                "display",
                "main",
                "dummy"
            ]
        },
        {
            "from_full": "alpine",
            "servers": [],
            "buses": [],
            "dbs": [],
            "cmd": "ping -w $SECONDS $HOST",
            "langs": [],
            "from": "alpine",
            "monitors": [],
            "discos": [],
            "path": "/test/workspace/ping_online/Dockerfile",
            "cmd_keywords": [
                "host",
                "ping",
                "seconds"
            ],
            "gates": [],
            "keywords": [
                "chmod",
                "bin",
                "ping"
            ]
        },
        {
            "from_full": "alpine",
            "servers": [],
            "buses": [],
            "dbs": [],
            "cmd": "sh /tmp/main.sh",
            "langs": [],
            "from": "alpine",
            "monitors": [],
            "discos": [],
            "path": "/test/workspace/with-csv-data/Dockerfile",
            "cmd_keywords": [
                "main",
                "tmp"
            ],
            "gates": [],
            "keywords": [
                "html",
                "echo",
                "display",
                "main",
                "dummy"
            ]
        },
        {
            "from_full": "rocker/r-ver:3.4.3",
            "servers": [],
            "buses": [],
            "dbs": [],
            "cmd": "/bin/bash -c \"exit 1\"",
            "langs": [
                "bash"
            ],
            "from": "rocker/r-ver",
            "monitors": [],
            "discos": [],
            "path": "/test/workspace/failing-execution/Dockerfile",
            "cmd_keywords": [
                "bin",
                "exit",
                "bash"
            ],
            "gates": [],
            "keywords": []
        },
        {
            "from_full": "rocker/r-ver:3.4.3",
            "servers": [],
            "buses": [],
            "dbs": [],
            "cmd": "R --vanilla -e rmarkdown::render(input = \"/erc/main.Rmd\", output_format = rmarkdown::html_document(), output_dir = \"/erc\", output_file = \"display.html\")",
            "langs": [],
            "from": "rocker/r-ver",
            "monitors": [],
            "discos": [],
            "path": "/test/workspace/with-invalid-erc-yml/Dockerfile",
            "cmd_keywords": [
                "output",
                "rmarkdown",
                "erc",
                "html",
                "display"
            ],
            "gates": [],
            "keywords": [
                "install",
                "pandoc",
                "apt",
                "get",
                "core"
            ]
        },
        {
            "from_full": "alpine",
            "servers": [],
            "buses": [],
            "dbs": [],
            "cmd": "sh /tmp/main.sh",
            "langs": [],
            "from": "alpine",
            "monitors": [],
            "discos": [],
            "path": "/test/workspace/with-erc-yml/Dockerfile",
            "cmd_keywords": [
                "main",
                "tmp"
            ],
            "gates": [],
            "keywords": [
                "html",
                "echo",
                "display",
                "main",
                "dummy"
            ]
        },
        {
            "from_full": "alpine",
            "servers": [],
            "buses": [],
            "dbs": [],
            "cmd": "ping -w $SECONDS $HOST ; echo \"<html><body>Am I OK?</body></html>\" > display.html",
            "langs": [],
            "from": "alpine",
            "monitors": [],
            "discos": [],
            "path": "/test/workspace/ping/Dockerfile",
            "cmd_keywords": [
                "html",
                "body",
                "echo",
                "display",
                "ping"
            ],
            "gates": [],
            "keywords": [
                "chmod",
                "bin",
                "ping"
            ]
        },
        {
            "from_full": "rocker/r-ver:3.4.3",
            "servers": [],
            "buses": [],
            "dbs": [],
            "cmd": "R --vanilla -e rmarkdown::render(input = \"/erc/main.Rmd\", output_format = rmarkdown::html_document(), output_dir = \"/erc\", output_file = \"display.html\")",
            "langs": [],
            "from": "rocker/r-ver",
            "monitors": [],
            "discos": [],
            "path": "/test/workspace/with-image-tarball/Dockerfile",
            "cmd_keywords": [
                "output",
                "rmarkdown",
                "erc",
                "html",
                "display"
            ],
            "gates": [],
            "keywords": [
                "install",
                "pandoc",
                "apt",
                "get",
                "core"
            ]
        },
        {
            "from_full": "rocker/r-ver:3.4.3",
            "servers": [],
            "buses": [],
            "dbs": [],
            "cmd": "R --vanilla -e rmarkdown::render(input = \"/erc/main.Rmd\", output_format = rmarkdown::html_document(), output_dir = \"/erc\", output_file = \"display.html\")",
            "langs": [],
            "from": "rocker/r-ver",
            "monitors": [],
            "discos": [],
            "path": "/test/workspace/with-metadata/Dockerfile",
            "cmd_keywords": [
                "output",
                "rmarkdown",
                "erc",
                "html",
                "display"
            ],
            "gates": [],
            "keywords": [
                "install",
                "pandoc",
                "apt",
                "get",
                "core"
            ]
        }
    ],
    "num_files": 22,
    "num_gates": 0,
    "num_dbs": 1,
    "langs": [
        "python",
        "html",
        "bash"
    ],
    "images": [
        "rocker/r-ver",
        "alpine",
        "ubuntu",
        "node",
        "rocker/geospatial",
        "debian"
    ],
    "num_buses": 0,
    "num_servers": 3
}