{
    "discos": [],
    "avg_size_service": 459.1111111111111,
    "buses": [],
    "num_gates": 1,
    "name": "picluster/picluster",
    "structure": {
        "path": "/docker-compose.yml",
        "services": [
            {
                "name": "server",
                "dbs": [],
                "depends_on": [],
                "discos": [],
                "image_full": "node:alpine",
                "image": "node",
                "servers": [
                    "node"
                ],
                "buses": [],
                "monitors": [],
                "gates": []
            }
        ],
        "detected_dbs": {
            "names": [],
            "num": 0,
            "shared_dbs": false,
            "services": []
        },
        "num_services": 1
    },
    "dbs": [
        "mysql",
        "max"
    ],
    "dockers": [
        {
            "langs": [
                "scratch"
            ],
            "cmd_keywords": [
                "daemon",
                "nginx",
                "usr",
                "off",
                "sbin"
            ],
            "from_full": "scratch",
            "buses": [],
            "monitors": [],
            "from": "scratch",
            "keywords": [
                "pacman",
                "noconfirm",
                "scc",
                "nginx"
            ],
            "gates": [
                "nginx"
            ],
            "path": "/example/arm/archlinux/nginx/Dockerfile",
            "dbs": [],
            "discos": [],
            "cmd": "/usr/sbin/nginx -g \"daemon off;\"",
            "servers": []
        },
        {
            "langs": [
                "scratch"
            ],
            "cmd_keywords": [
                "usr",
                "mysql",
                "sbin"
            ],
            "from_full": "scratch",
            "buses": [],
            "monitors": [],
            "from": "scratch",
            "keywords": [
                "pacman",
                "noconfirm",
                "scc",
                "mariadb",
                "clients"
            ],
            "gates": [],
            "path": "/example/arm/archlinux/mysql/Dockerfile",
            "dbs": [
                "mysql"
            ],
            "discos": [],
            "cmd": "/usr/sbin/mysql",
            "servers": []
        },
        {
            "langs": [],
            "cmd_keywords": [
                "nginx"
            ],
            "from_full": "armv7/armhf-ubuntu",
            "buses": [],
            "monitors": [],
            "from": "armv7/armhf-ubuntu",
            "keywords": [
                "nginx",
                "get",
                "apt",
                "install",
                "conf"
            ],
            "gates": [
                "nginx"
            ],
            "path": "/example/arm/ubuntu/nginx/Dockerfile",
            "dbs": [],
            "discos": [],
            "cmd": "nginx",
            "servers": []
        },
        {
            "langs": [],
            "cmd_keywords": [
                "start"
            ],
            "from_full": "armv7/armhf-ubuntu",
            "buses": [],
            "monitors": [],
            "from": "armv7/armhf-ubuntu",
            "keywords": [
                "crontab",
                "echo",
                "get",
                "sync",
                "chmod"
            ],
            "gates": [],
            "path": "/example/arm/ubuntu/mysql/Dockerfile",
            "dbs": [
                "mariadb"
            ],
            "discos": [],
            "cmd": "/start.sh",
            "servers": []
        },
        {
            "langs": [],
            "cmd_keywords": [
                "server",
                "minio",
                "tmp"
            ],
            "from_full": "armv7/armhf-ubuntu",
            "buses": [],
            "monitors": [],
            "from": "armv7/armhf-ubuntu",
            "keywords": [
                "minio",
                "wget",
                "apt",
                "get",
                "amd"
            ],
            "gates": [],
            "path": "/example/arm/ubuntu/minio/Dockerfile",
            "dbs": [],
            "discos": [],
            "cmd": "./minio server /tmp",
            "servers": []
        },
        {
            "langs": [],
            "cmd_keywords": [
                "nginx"
            ],
            "from_full": "ubuntu",
            "buses": [],
            "monitors": [],
            "from": "ubuntu",
            "keywords": [
                "nginx",
                "get",
                "apt",
                "install",
                "conf"
            ],
            "gates": [
                "nginx"
            ],
            "path": "/example/x86_64/ubuntu/nginx/Dockerfile",
            "dbs": [],
            "discos": [],
            "cmd": "nginx",
            "servers": []
        },
        {
            "langs": [],
            "cmd_keywords": [
                "start"
            ],
            "from_full": "ubuntu",
            "buses": [],
            "monitors": [],
            "from": "ubuntu",
            "keywords": [
                "crontab",
                "echo",
                "get",
                "sync",
                "chmod"
            ],
            "gates": [],
            "path": "/example/x86_64/ubuntu/mysql/Dockerfile",
            "dbs": [
                "mariadb"
            ],
            "discos": [],
            "cmd": "/start.sh",
            "servers": []
        },
        {
            "langs": [],
            "cmd_keywords": [
                "server",
                "minio",
                "tmp"
            ],
            "from_full": "ubuntu",
            "buses": [],
            "monitors": [],
            "from": "ubuntu",
            "keywords": [
                "minio",
                "wget",
                "apt",
                "get",
                "amd"
            ],
            "gates": [],
            "path": "/example/x86_64/ubuntu/minio/Dockerfile",
            "dbs": [],
            "discos": [],
            "cmd": "./minio server /tmp",
            "servers": []
        },
        {
            "langs": [
                "python"
            ],
            "cmd_keywords": [
                "log",
                "test",
                "vnc",
                "tmp",
                "grep"
            ],
            "from_full": "debian:stretch",
            "buses": [],
            "monitors": [],
            "from": "debian",
            "keywords": [
                "firefox",
                "testuser",
                "apt",
                "tmp",
                "get"
            ],
            "gates": [],
            "path": "/web/tests/integration/Dockerfile",
            "dbs": [],
            "discos": [],
            "cmd": "echo \"A VNC server will be started at $(ip addr show eth0 | grep inet | awk '{print $2}' | sed 's/\\/.*//g'):5900\";     echo \"You can point any VNC client at that address to troubleshoot any tests that hang\";     xvfb-run --server-args \"-screen 0 1920x1080x24\" xterm -e \"sh -c 'x11vnc -bg -forever & openbox & set -e;env;find . -name \\\"*.js\\\" | SHELL=$SHELL parallel --no-notice -x --delay 0.25 --halt now,fail=1 casperjs test {} --debug=$DEBUG $VERBOSE --log-level=$LOGLEVEL $FAILFAST --engine=$ENGINE --username=$USERNAME --password=$PASSWORD --token=$TOKEN --url=$URL --font-linux=$FONTLINUX | tee -a /tmp/test.log;'\" & tail -F /tmp/test.log --pid=$!; if grep -q FAIL /tmp/test.log; then exit 1; else exit 0; fi",
            "servers": []
        }
    ],
    "gates": [
        "nginx"
    ],
    "size": 4132,
    "num_monitors": 0,
    "images": [
        "armv7/armhf-ubuntu",
        "scratch",
        "debian",
        "ubuntu"
    ],
    "num_buses": 0,
    "num_services": 1,
    "servers": [
        "node",
        "express"
    ],
    "shared_dbs": false,
    "monitors": [],
    "num_discos": 0,
    "languages": [
        "javascript",
        "html"
    ],
    "url": "git://github.com/picluster/picluster.git",
    "langs": [
        "html",
        "scratch",
        "python",
        "javascript"
    ],
    "num_dbs": 2,
    "num_servers": 2,
    "num_langs": 4,
    "files": [
        {
            "path": "/package.json",
            "dbs": [
                "max"
            ],
            "discos": [],
            "servers": [
                "node"
            ],
            "buses": [],
            "monitors": [],
            "gates": []
        },
        {
            "path": "/agent/package.json",
            "dbs": [],
            "discos": [],
            "servers": [
                "express"
            ],
            "buses": [],
            "monitors": [],
            "gates": []
        },
        {
            "path": "/server/package.json",
            "dbs": [],
            "discos": [],
            "servers": [
                "express"
            ],
            "buses": [],
            "monitors": [],
            "gates": []
        },
        {
            "path": "/web/package.json",
            "dbs": [],
            "discos": [],
            "servers": [
                "express"
            ],
            "buses": [],
            "monitors": [],
            "gates": []
        }
    ],
    "num_dockers": 9,
    "num_files": 14
}