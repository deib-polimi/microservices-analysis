{
    "files": [
        {
            "monitors": [],
            "discos": [
                "eureka"
            ],
            "buses": [],
            "gates": [
                "gateway"
            ],
            "path": "/gateway/pom.xml",
            "dbs": [],
            "servers": [
                "spring"
            ]
        },
        {
            "monitors": [],
            "discos": [
                "eureka"
            ],
            "buses": [],
            "gates": [],
            "path": "/registry/pom.xml",
            "dbs": [
                "cassandra"
            ],
            "servers": [
                "spring"
            ]
        },
        {
            "monitors": [],
            "discos": [
                "eureka"
            ],
            "buses": [],
            "gates": [],
            "path": "/upload/pom.xml",
            "dbs": [],
            "servers": [
                "spring"
            ]
        },
        {
            "monitors": [],
            "discos": [
                "eureka"
            ],
            "buses": [],
            "gates": [],
            "path": "/wsTest/pom.xml",
            "dbs": [],
            "servers": [
                "spring"
            ]
        },
        {
            "monitors": [],
            "discos": [
                "eureka"
            ],
            "buses": [],
            "gates": [],
            "path": "/eureka/pom.xml",
            "dbs": [],
            "servers": [
                "spring"
            ]
        },
        {
            "monitors": [],
            "discos": [
                "eureka"
            ],
            "buses": [],
            "gates": [],
            "path": "/stream/pom.xml",
            "dbs": [],
            "servers": [
                "spring"
            ]
        },
        {
            "monitors": [],
            "discos": [],
            "buses": [],
            "gates": [],
            "path": "/specification/package.json",
            "dbs": [],
            "servers": []
        }
    ],
    "num_services": 7,
    "discos": [
        "eureka"
    ],
    "dbs": [
        "cassandra"
    ],
    "avg_size_service": 102.14285714285714,
    "name": "davidepiona/benchmark",
    "num_buses": 0,
    "num_langs": 2,
    "monitors": [],
    "num_files": 15,
    "langs": [
        "shell",
        "java"
    ],
    "num_gates": 1,
    "dockers": [
        {
            "monitors": [],
            "discos": [],
            "dbs": [
                "cassandra"
            ],
            "gates": [],
            "path": "/docker/cassandra-docker/Dockerfile",
            "cmd_keywords": [],
            "from_full": "cassandra",
            "servers": [],
            "buses": [],
            "langs": [],
            "cmd": "",
            "from": "cassandra",
            "keywords": [
                "docker",
                "chmod",
                "entrypoint"
            ]
        },
        {
            "monitors": [],
            "discos": [],
            "dbs": [],
            "gates": [],
            "path": "/docker/gui-docker/Dockerfile",
            "cmd_keywords": [],
            "from_full": "alpine:latest",
            "servers": [],
            "buses": [],
            "langs": [],
            "cmd": "",
            "from": "alpine",
            "keywords": [
                "add",
                "cache",
                "apk",
                "http",
                "server"
            ]
        },
        {
            "monitors": [],
            "discos": [],
            "dbs": [],
            "gates": [
                "gateway"
            ],
            "path": "/gateway/Dockerfile",
            "cmd_keywords": [
                "dcom",
                "sun",
                "management",
                "jmxremote",
                "false"
            ],
            "from_full": "java:8-jre",
            "servers": [],
            "buses": [],
            "langs": [
                "java"
            ],
            "cmd": "java -Xmx384m -Dspring.profiles.active=docker -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.port=7999 -Dcom.sun.management.jmxremote.rmi.port=7999 -Dcom.sun.management.jmxremote.local.only=false -Djava.rmi.server.hostname=0.0.0.0 -Dcom.sun.management.jmxremote.host=0.0.0.0 -jar /gateway-microservice.jar",
            "from": "java",
            "keywords": []
        },
        {
            "monitors": [],
            "discos": [],
            "dbs": [],
            "gates": [],
            "path": "/registry/Dockerfile",
            "cmd_keywords": [
                "dcom",
                "sun",
                "management",
                "jmxremote",
                "false"
            ],
            "from_full": "java:8-jre",
            "servers": [],
            "buses": [],
            "langs": [
                "java"
            ],
            "cmd": "java -Xmx384m -Dspring.profiles.active=docker -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.port=7010 -Dcom.sun.management.jmxremote.rmi.port=7010 -Dcom.sun.management.jmxremote.local.only=false -Djava.rmi.server.hostname=0.0.0.0 -Dcom.sun.management.jmxremote.host=0.0.0.0 -jar /registry-microservice.jar",
            "from": "java",
            "keywords": []
        },
        {
            "monitors": [],
            "discos": [],
            "dbs": [],
            "gates": [],
            "path": "/upload/Dockerfile",
            "cmd_keywords": [
                "dcom",
                "sun",
                "management",
                "jmxremote",
                "false"
            ],
            "from_full": "java:8-jre",
            "servers": [],
            "buses": [],
            "langs": [
                "java"
            ],
            "cmd": "java -Xmx384m -Dspring.profiles.active=docker -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.port=7020 -Dcom.sun.management.jmxremote.rmi.port=7020 -Dcom.sun.management.jmxremote.local.only=false -Djava.rmi.server.hostname=0.0.0.0 -Dcom.sun.management.jmxremote.host=0.0.0.0 -jar /upload-microservice.jar",
            "from": "java",
            "keywords": [
                "chmod",
                "opt",
                "ffprobe"
            ]
        },
        {
            "monitors": [],
            "discos": [],
            "dbs": [],
            "gates": [],
            "path": "/wsTest/Dockerfile",
            "cmd_keywords": [
                "dcom",
                "sun",
                "management",
                "jmxremote",
                "false"
            ],
            "from_full": "java:8-jre",
            "servers": [],
            "buses": [],
            "langs": [
                "java"
            ],
            "cmd": "java -Dspring.profiles.active=docker -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.port=7070 -Dcom.sun.management.jmxremote.rmi.port=7070 -Dcom.sun.management.jmxremote.local.only=false -Djava.rmi.server.hostname=0.0.0.0 -Dcom.sun.management.jmxremote.host=0.0.0.0 -jar /wsTest-microservice.jar",
            "from": "java",
            "keywords": []
        },
        {
            "monitors": [],
            "discos": [
                "eureka"
            ],
            "dbs": [],
            "gates": [],
            "path": "/eureka/Dockerfile",
            "cmd_keywords": [
                "dcom",
                "sun",
                "management",
                "jmxremote",
                "false"
            ],
            "from_full": "java:8-jre",
            "servers": [],
            "buses": [],
            "langs": [
                "java"
            ],
            "cmd": "java -Xmx384m -Dspring.profiles.active=docker -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.port=7761 -Dcom.sun.management.jmxremote.rmi.port=7761 -Dcom.sun.management.jmxremote.local.only=false -Djava.rmi.server.hostname=0.0.0.0 -Dcom.sun.management.jmxremote.host=0.0.0.0 -jar /eureka-microservice.jar",
            "from": "java",
            "keywords": []
        }
    ],
    "structure": {
        "path": "/docker/docker-compose.yml",
        "detected_dbs": {
            "names": [
                "cassandra"
            ],
            "services": [
                "cassandra"
            ],
            "num": 1,
            "shared_dbs": false
        },
        "num_services": 7,
        "services": [
            {
                "monitors": [],
                "image": "davidepiona/registry-microservice",
                "discos": [],
                "buses": [],
                "gates": [],
                "name": "registry-service",
                "depends_on": [],
                "dbs": [],
                "servers": [],
                "image_full": "davidepiona/registry-microservice"
            },
            {
                "monitors": [],
                "image": "nginx",
                "discos": [],
                "buses": [],
                "gates": [
                    "nginx"
                ],
                "name": "nginx",
                "depends_on": [],
                "dbs": [],
                "servers": [],
                "image_full": "nginx"
            },
            {
                "monitors": [],
                "image": "davidepiona/eureka-microservice",
                "discos": [
                    "eureka"
                ],
                "buses": [],
                "gates": [],
                "name": "eureka-service",
                "depends_on": [],
                "dbs": [],
                "servers": [],
                "image_full": "davidepiona/eureka-microservice"
            },
            {
                "monitors": [],
                "image": "davidepiona/benchgui",
                "discos": [],
                "buses": [],
                "gates": [],
                "name": "gui",
                "depends_on": [],
                "dbs": [],
                "servers": [],
                "image_full": "davidepiona/benchgui"
            },
            {
                "monitors": [],
                "image": "davidepiona/gateway-microservice",
                "discos": [],
                "buses": [],
                "gates": [
                    "gateway"
                ],
                "name": "gateway-service",
                "depends_on": [],
                "dbs": [],
                "servers": [],
                "image_full": "davidepiona/gateway-microservice"
            },
            {
                "monitors": [],
                "image": "davidepiona/upload-microservice",
                "discos": [],
                "buses": [],
                "gates": [],
                "name": "upload-service",
                "depends_on": [],
                "dbs": [],
                "servers": [],
                "image_full": "davidepiona/upload-microservice:latest"
            },
            {
                "monitors": [],
                "image": "davidepiona/cassandra",
                "discos": [],
                "buses": [],
                "gates": [],
                "name": "cassandra",
                "depends_on": [],
                "dbs": [
                    "cassandra"
                ],
                "servers": [],
                "image_full": "davidepiona/cassandra"
            }
        ]
    },
    "size": 715,
    "num_discos": 1,
    "languages": [
        "java",
        "shell"
    ],
    "url": "git://github.com/davidepiona/benchmark.git",
    "buses": [],
    "gates": [
        "nginx"
    ],
    "shared_dbs": false,
    "servers": [
        "spring"
    ],
    "images": [
        "alpine",
        "java",
        "cassandra"
    ],
    "num_servers": 1,
    "num_dockers": 7,
    "num_monitors": 0,
    "num_dbs": 1
}