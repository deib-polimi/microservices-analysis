{
    "num_langs": 1,
    "dbs": [
        "mysql"
    ],
    "num_servers": 2,
    "languages": [
        "java"
    ],
    "num_discos": 1,
    "avg_size_service": 1359.0,
    "dockers": [
        {
            "gates": [],
            "dbs": [],
            "monitors": [],
            "cmd": "",
            "servers": [],
            "keywords": [],
            "from": "dockerfile/java",
            "cmd_keywords": [],
            "from_full": "dockerfile/java:oracle-java8",
            "path": "/docker/Dockerfile",
            "buses": [],
            "langs": [
                "java"
            ],
            "discos": []
        }
    ],
    "num_gates": 1,
    "buses": [
        "amqp"
    ],
    "langs": [
        "java"
    ],
    "num_buses": 1,
    "discos": [
        "eureka"
    ],
    "num_dbs": 1,
    "num_files": 15,
    "url": "git://github.com/hbethke/docker-microservices.git",
    "shared_dbs": false,
    "monitors": [
        "turbine"
    ],
    "num_services": 0,
    "files": [
        {
            "dbs": [],
            "monitors": [],
            "buses": [],
            "path": "/microservices/core/review-service/build.gradle",
            "servers": [
                "tomcat",
                "spring"
            ],
            "gates": [],
            "discos": [
                "eureka"
            ]
        },
        {
            "dbs": [
                "mysql",
                "hsqldb"
            ],
            "monitors": [],
            "buses": [],
            "path": "/microservices/core/batch-service/build.gradle",
            "servers": [
                "tomcat",
                "spring"
            ],
            "gates": [],
            "discos": [
                "eureka"
            ]
        },
        {
            "dbs": [],
            "monitors": [],
            "buses": [],
            "path": "/microservices/core/product-service/build.gradle",
            "servers": [
                "tomcat",
                "spring"
            ],
            "gates": [],
            "discos": [
                "eureka"
            ]
        },
        {
            "dbs": [],
            "monitors": [],
            "buses": [],
            "path": "/microservices/core/recommendation-service/build.gradle",
            "servers": [
                "tomcat",
                "spring"
            ],
            "gates": [],
            "discos": [
                "eureka"
            ]
        },
        {
            "dbs": [],
            "monitors": [],
            "buses": [],
            "path": "/microservices/support/auth-server/build.gradle",
            "servers": [
                "tomcat",
                "spring"
            ],
            "gates": [],
            "discos": []
        },
        {
            "dbs": [],
            "monitors": [],
            "buses": [],
            "path": "/microservices/support/discovery-server/build.gradle",
            "servers": [
                "tomcat",
                "spring"
            ],
            "gates": [],
            "discos": [
                "eureka"
            ]
        },
        {
            "dbs": [],
            "monitors": [],
            "buses": [],
            "path": "/microservices/support/edge-server/build.gradle",
            "servers": [
                "tomcat",
                "spring"
            ],
            "gates": [
                "zuul"
            ],
            "discos": [
                "eureka"
            ]
        },
        {
            "dbs": [],
            "monitors": [
                "turbine"
            ],
            "buses": [
                "amqp"
            ],
            "path": "/microservices/support/turbine/build.gradle",
            "servers": [
                "tomcat",
                "spring"
            ],
            "gates": [],
            "discos": []
        },
        {
            "dbs": [],
            "monitors": [],
            "buses": [],
            "path": "/microservices/support/monitor-dashboard/build.gradle",
            "servers": [
                "tomcat",
                "spring"
            ],
            "gates": [],
            "discos": []
        },
        {
            "dbs": [],
            "monitors": [],
            "buses": [
                "amqp"
            ],
            "path": "/microservices/api/product-api-service/build.gradle",
            "servers": [
                "tomcat",
                "spring"
            ],
            "gates": [],
            "discos": [
                "eureka"
            ]
        },
        {
            "dbs": [],
            "monitors": [],
            "buses": [
                "amqp"
            ],
            "path": "/microservices/api/batch-api-service/build.gradle",
            "servers": [
                "tomcat",
                "spring"
            ],
            "gates": [],
            "discos": [
                "eureka"
            ]
        },
        {
            "dbs": [],
            "monitors": [],
            "buses": [
                "amqp"
            ],
            "path": "/microservices/composite/product-composite-service/build.gradle",
            "servers": [
                "tomcat",
                "spring"
            ],
            "gates": [],
            "discos": [
                "eureka"
            ]
        },
        {
            "dbs": [],
            "monitors": [],
            "buses": [],
            "path": "/util/build.gradle",
            "servers": [
                "spring"
            ],
            "gates": [],
            "discos": []
        }
    ],
    "servers": [
        "tomcat",
        "spring"
    ],
    "num_monitors": 1,
    "gates": [
        "zuul"
    ],
    "size": 1359,
    "num_dockers": 1,
    "images": [
        "dockerfile/java"
    ],
    "structure": {
        "path": "/docker-compose.yml",
        "services": [],
        "detected_dbs": {
            "names": [],
            "shared_dbs": false,
            "num": 0,
            "services": []
        },
        "num_services": 0
    },
    "name": "hbethke/docker-microservices"
}