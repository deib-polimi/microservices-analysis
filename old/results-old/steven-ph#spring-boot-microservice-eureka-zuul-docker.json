{
    "avg_size_service": 76.83333333333333,
    "discos": [
        "eureka"
    ],
    "images": [
        "openjdk"
    ],
    "num_dockers": 6,
    "num_servers": 1,
    "langs": [
        "java"
    ],
    "languages": [
        "java"
    ],
    "num_services": 6,
    "num_gates": 1,
    "num_langs": 1,
    "monitors": [],
    "gates": [
        "zuul"
    ],
    "servers": [
        "spring"
    ],
    "num_monitors": 0,
    "structure": {
        "path": "/docker-compose.yml",
        "services": [
            {
                "depends_on": [
                    "accounts"
                ],
                "image": "stevenph/service-products-api",
                "image_full": "stevenph/service-products-api",
                "gates": [],
                "name": "products",
                "buses": [],
                "servers": [],
                "monitors": [],
                "dbs": [],
                "discos": []
            },
            {
                "depends_on": [],
                "image": "stevenph/service-discovery",
                "image_full": "stevenph/service-discovery",
                "gates": [],
                "name": "discovery",
                "buses": [],
                "servers": [],
                "monitors": [],
                "dbs": [],
                "discos": []
            },
            {
                "depends_on": [
                    "orders"
                ],
                "image": "stevenph/service-main-api",
                "image_full": "stevenph/service-main-api",
                "gates": [],
                "name": "main",
                "buses": [],
                "servers": [],
                "monitors": [],
                "dbs": [],
                "discos": []
            },
            {
                "depends_on": [
                    "discovery"
                ],
                "image": "stevenph/service-accounts-api",
                "image_full": "stevenph/service-accounts-api",
                "gates": [],
                "name": "accounts",
                "buses": [],
                "servers": [],
                "monitors": [],
                "dbs": [],
                "discos": []
            },
            {
                "depends_on": [
                    "discovery"
                ],
                "image": "stevenph/service-gateway",
                "image_full": "stevenph/service-gateway",
                "gates": [
                    "gateway"
                ],
                "name": "gateway",
                "buses": [],
                "servers": [],
                "monitors": [],
                "dbs": [],
                "discos": []
            },
            {
                "depends_on": [
                    "products"
                ],
                "image": "stevenph/service-orders-api",
                "image_full": "stevenph/service-orders-api",
                "gates": [],
                "name": "orders",
                "buses": [],
                "servers": [],
                "monitors": [],
                "dbs": [],
                "discos": []
            }
        ],
        "num_services": 6,
        "detected_dbs": {
            "names": [],
            "num": 0,
            "services": [],
            "shared_dbs": false
        }
    },
    "size": 461,
    "url": "git://github.com/steven-ph/spring-boot-microservice-eureka-zuul-docker.git",
    "num_buses": 0,
    "shared_dbs": false,
    "files": [
        {
            "path": "/pom.xml",
            "discos": [],
            "monitors": [],
            "gates": [
                "gateway"
            ],
            "servers": [
                "spring"
            ],
            "dbs": [],
            "buses": []
        },
        {
            "path": "/containerized-accounts/pom.xml",
            "discos": [
                "eureka"
            ],
            "monitors": [],
            "gates": [],
            "servers": [
                "spring"
            ],
            "dbs": [],
            "buses": []
        },
        {
            "path": "/containerized-orders/pom.xml",
            "discos": [
                "eureka"
            ],
            "monitors": [],
            "gates": [],
            "servers": [
                "spring"
            ],
            "dbs": [],
            "buses": []
        },
        {
            "path": "/containerized-products/pom.xml",
            "discos": [
                "eureka"
            ],
            "monitors": [],
            "gates": [],
            "servers": [
                "spring"
            ],
            "dbs": [],
            "buses": []
        },
        {
            "path": "/containerized-discovery/pom.xml",
            "discos": [
                "eureka"
            ],
            "monitors": [],
            "gates": [],
            "servers": [
                "spring"
            ],
            "dbs": [],
            "buses": []
        },
        {
            "path": "/containerized-main/pom.xml",
            "discos": [
                "eureka"
            ],
            "monitors": [],
            "gates": [],
            "servers": [
                "spring"
            ],
            "dbs": [],
            "buses": []
        },
        {
            "path": "/containerized-gateway/pom.xml",
            "discos": [
                "eureka"
            ],
            "monitors": [],
            "gates": [
                "gateway",
                "zuul"
            ],
            "servers": [
                "spring"
            ],
            "dbs": [],
            "buses": []
        }
    ],
    "num_discos": 1,
    "dockers": [
        {
            "path": "/containerized-accounts/Dockerfile",
            "from_full": "openjdk",
            "from": "openjdk",
            "cmd": "",
            "keywords": [],
            "servers": [],
            "gates": [],
            "langs": [],
            "discos": [],
            "monitors": [],
            "cmd_keywords": [],
            "dbs": [],
            "buses": []
        },
        {
            "path": "/containerized-orders/Dockerfile",
            "from_full": "openjdk",
            "from": "openjdk",
            "cmd": "",
            "keywords": [],
            "servers": [],
            "gates": [],
            "langs": [],
            "discos": [],
            "monitors": [],
            "cmd_keywords": [],
            "dbs": [],
            "buses": []
        },
        {
            "path": "/containerized-products/Dockerfile",
            "from_full": "openjdk",
            "from": "openjdk",
            "cmd": "",
            "keywords": [],
            "servers": [],
            "gates": [],
            "langs": [],
            "discos": [],
            "monitors": [],
            "cmd_keywords": [],
            "dbs": [],
            "buses": []
        },
        {
            "path": "/containerized-discovery/Dockerfile",
            "from_full": "openjdk",
            "from": "openjdk",
            "cmd": "",
            "keywords": [],
            "servers": [],
            "gates": [],
            "langs": [],
            "discos": [],
            "monitors": [],
            "cmd_keywords": [],
            "dbs": [],
            "buses": []
        },
        {
            "path": "/containerized-main/Dockerfile",
            "from_full": "openjdk",
            "from": "openjdk",
            "cmd": "",
            "keywords": [],
            "servers": [],
            "gates": [],
            "langs": [],
            "discos": [],
            "monitors": [],
            "cmd_keywords": [],
            "dbs": [],
            "buses": []
        },
        {
            "path": "/containerized-gateway/Dockerfile",
            "from_full": "openjdk",
            "from": "openjdk",
            "cmd": "",
            "keywords": [],
            "servers": [],
            "gates": [],
            "langs": [],
            "discos": [],
            "monitors": [],
            "cmd_keywords": [],
            "dbs": [],
            "buses": []
        }
    ],
    "name": "steven-ph/spring-boot-microservice-eureka-zuul-docker",
    "buses": [],
    "num_files": 14,
    "dbs": [],
    "num_dbs": 0
}