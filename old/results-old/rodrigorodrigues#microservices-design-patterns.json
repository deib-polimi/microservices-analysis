{
    "files": [
        {
            "monitors": [
                "prometheus"
            ],
            "discos": [
                "eureka"
            ],
            "buses": [],
            "gates": [],
            "path": "/python-service/app/app/requirements.txt",
            "dbs": [],
            "servers": [
                "flask"
            ]
        },
        {
            "monitors": [],
            "discos": [
                "eureka"
            ],
            "buses": [],
            "gates": [],
            "path": "/pom.xml",
            "dbs": [],
            "servers": [
                "spring"
            ]
        },
        {
            "monitors": [
                "prometheus"
            ],
            "discos": [
                "eureka"
            ],
            "buses": [],
            "gates": [],
            "path": "/web-common/pom.xml",
            "dbs": [],
            "servers": [
                "glassfish",
                "spring"
            ]
        },
        {
            "monitors": [],
            "discos": [],
            "buses": [],
            "gates": [],
            "path": "/person-service/pom.xml",
            "dbs": [
                "mongodb",
                "mongo"
            ],
            "servers": [
                "spring"
            ]
        },
        {
            "monitors": [],
            "discos": [
                "consul",
                "eureka"
            ],
            "buses": [],
            "gates": [],
            "path": "/eureka-server/pom.xml",
            "dbs": [
                "redis"
            ],
            "servers": [
                "spring"
            ]
        },
        {
            "monitors": [],
            "discos": [],
            "buses": [],
            "gates": [],
            "path": "/user-service/pom.xml",
            "dbs": [
                "mongodb",
                "mongo"
            ],
            "servers": [
                "spring"
            ]
        },
        {
            "monitors": [],
            "discos": [
                "eureka"
            ],
            "buses": [],
            "gates": [
                "zuul"
            ],
            "path": "/edge-server/pom.xml",
            "dbs": [
                "redis"
            ],
            "servers": [
                "spring"
            ]
        },
        {
            "monitors": [
                "prometheus"
            ],
            "discos": [],
            "buses": [],
            "gates": [],
            "path": "/authentication-common/pom.xml",
            "dbs": [
                "mongodb"
            ],
            "servers": [
                "spring"
            ]
        },
        {
            "monitors": [],
            "discos": [
                "eureka"
            ],
            "buses": [],
            "gates": [],
            "path": "/config-server/pom.xml",
            "dbs": [
                "redis"
            ],
            "servers": [
                "spring"
            ]
        },
        {
            "monitors": [],
            "discos": [
                "eureka"
            ],
            "buses": [],
            "gates": [],
            "path": "/admin-server/pom.xml",
            "dbs": [
                "redis"
            ],
            "servers": [
                "spring"
            ]
        },
        {
            "monitors": [],
            "discos": [
                "eureka"
            ],
            "buses": [],
            "gates": [],
            "path": "/kotlin-service/pom.xml",
            "dbs": [
                "mongo"
            ],
            "servers": [
                "spring"
            ]
        },
        {
            "monitors": [],
            "discos": [
                "eureka"
            ],
            "buses": [],
            "gates": [],
            "path": "/openzipkin-eureka/pom.xml",
            "dbs": [],
            "servers": [
                "spring"
            ]
        },
        {
            "monitors": [],
            "discos": [],
            "buses": [],
            "gates": [],
            "path": "/nodejs-service/pom.xml",
            "dbs": [],
            "servers": [
                "node",
                "spring"
            ]
        },
        {
            "monitors": [],
            "discos": [
                "eureka"
            ],
            "buses": [],
            "gates": [],
            "path": "/authentication-service/pom.xml",
            "dbs": [
                "redis",
                "mongo"
            ],
            "servers": [
                "spring"
            ]
        },
        {
            "monitors": [],
            "discos": [
                "eureka"
            ],
            "buses": [],
            "gates": [],
            "path": "/ssl-client-configuration/pom.xml",
            "dbs": [],
            "servers": [
                "spring"
            ]
        },
        {
            "monitors": [],
            "discos": [],
            "buses": [],
            "gates": [],
            "path": "/jwt-common/pom.xml",
            "dbs": [],
            "servers": [
                "spring"
            ]
        },
        {
            "monitors": [],
            "discos": [],
            "buses": [],
            "gates": [],
            "path": "/react-webapp-jhipster/pom.xml",
            "dbs": [],
            "servers": [
                "node",
                "spring"
            ]
        },
        {
            "monitors": [],
            "discos": [
                "eureka"
            ],
            "buses": [],
            "gates": [],
            "path": "/nodejs-service/package.json",
            "dbs": [
                "mongodb"
            ],
            "servers": [
                "node",
                "mongoose",
                "spring",
                "express"
            ]
        },
        {
            "monitors": [],
            "discos": [],
            "buses": [],
            "gates": [],
            "path": "/react-webapp/package.json",
            "dbs": [],
            "servers": []
        },
        {
            "monitors": [],
            "discos": [],
            "buses": [],
            "gates": [],
            "path": "/react-webapp-jhipster/package.json",
            "dbs": [
                "solid",
                "max"
            ],
            "servers": [
                "node"
            ]
        }
    ],
    "num_services": 20,
    "discos": [
        "consul",
        "eureka"
    ],
    "dbs": [
        "redis",
        "max",
        "solid",
        "mysql",
        "mongo"
    ],
    "avg_size_service": 1401.2,
    "name": "rodrigorodrigues/microservices-design-patterns",
    "num_buses": 0,
    "num_langs": 3,
    "monitors": [
        "prometheus",
        "grafana"
    ],
    "num_files": 26,
    "langs": [
        "javascript",
        "typescript",
        "java"
    ],
    "num_gates": 2,
    "dockers": [
        {
            "monitors": [],
            "discos": [],
            "dbs": [],
            "gates": [
                "nginx"
            ],
            "path": "/python-service/Dockerfile",
            "cmd_keywords": [],
            "from_full": "tiangolo/uwsgi-nginx-flask:python3.7",
            "servers": [
                "flask"
            ],
            "buses": [],
            "langs": [],
            "cmd": "",
            "from": "tiangolo/uwsgi-nginx-flask",
            "keywords": [
                "pip",
                "install",
                "txt",
                "cache",
                "requirements"
            ]
        },
        {
            "monitors": [],
            "discos": [
                "eureka"
            ],
            "dbs": [],
            "gates": [],
            "path": "/openzipkin-eureka/Dockerfile",
            "cmd_keywords": [
                "jar",
                "zipkin",
                "shared",
                "boot",
                "spring"
            ],
            "from_full": "maven:3.6.0-jdk-8-alpine",
            "servers": [
                "spring"
            ],
            "buses": [],
            "langs": [
                "java"
            ],
            "cmd": "java -cp zipkin.jar  -Dloader.path='eureka.jar,eureka.jar!/lib'  -Dloader.main=zipkin.server.ZipkinServer org.springframework.boot.loader.PropertiesLauncher  --spring.config.location=file:BOOT-INF/classes/zipkin-server-shared.yml  --spring.profiles.active=shared  -Djava.security.egd=file:/dev/./urandom",
            "from": "maven",
            "keywords": [
                "zipkin",
                "server",
                "eureka",
                "shared",
                "classes"
            ]
        },
        {
            "monitors": [],
            "discos": [],
            "dbs": [],
            "gates": [],
            "path": "/nodejs-service/Dockerfile",
            "cmd_keywords": [
                "server",
                "node"
            ],
            "from_full": "node:10.15.3-slim",
            "servers": [
                "node"
            ],
            "buses": [],
            "langs": [],
            "cmd": "node server.js",
            "from": "node",
            "keywords": [
                "get",
                "install",
                "apt",
                "openbsd",
                "only"
            ]
        },
        {
            "monitors": [],
            "discos": [],
            "dbs": [],
            "gates": [
                "nginx"
            ],
            "path": "/react-webapp/Dockerfile",
            "cmd_keywords": [
                "nginx"
            ],
            "from_full": "nginx:1.13.12-alpine",
            "servers": [],
            "buses": [],
            "langs": [],
            "cmd": "nginx",
            "from": "nginx",
            "keywords": [
                "port",
                "conf",
                "nginx",
                "npm",
                "install"
            ]
        },
        {
            "monitors": [],
            "discos": [],
            "dbs": [],
            "gates": [
                "nginx"
            ],
            "path": "/react-webapp-jhipster/Dockerfile",
            "cmd_keywords": [
                "nginx"
            ],
            "from_full": "nginx:1.13.12-alpine",
            "servers": [],
            "buses": [],
            "langs": [],
            "cmd": "nginx",
            "from": "nginx",
            "keywords": [
                "server",
                "conf",
                "nginx",
                "protocol",
                "sed"
            ]
        }
    ],
    "structure": {
        "path": "/docker/docker-compose.yml",
        "detected_dbs": {
            "names": [
                "mysql",
                "redis",
                "mongo"
            ],
            "services": [
                "redisdb",
                "zipkin-mysql",
                "mongodb-datasource"
            ],
            "num": 3,
            "shared_dbs": true
        },
        "num_services": 20,
        "services": [
            {
                "monitors": [],
                "image": "eureka-server",
                "discos": [
                    "eureka"
                ],
                "buses": [],
                "gates": [],
                "name": "service-discovery",
                "depends_on": [
                    "redisdb",
                    "mongodb-datasource"
                ],
                "dbs": [],
                "servers": [],
                "image_full": "eureka-server"
            },
            {
                "monitors": [],
                "image": "../nodejs-service",
                "discos": [],
                "buses": [],
                "gates": [],
                "name": "week-menu-api",
                "depends_on": [
                    "service-discovery",
                    "config-management"
                ],
                "dbs": [],
                "servers": [],
                "image_full": "../nodejs-service"
            },
            {
                "monitors": [],
                "image": "kotlin-service",
                "discos": [],
                "buses": [],
                "gates": [],
                "name": "task-api",
                "depends_on": [
                    "service-discovery",
                    "config-management",
                    "mongodb-datasource"
                ],
                "dbs": [],
                "servers": [],
                "image_full": "kotlin-service"
            },
            {
                "monitors": [],
                "image": "user-service",
                "discos": [],
                "buses": [],
                "gates": [],
                "name": "user-api",
                "depends_on": [
                    "authentication-api"
                ],
                "dbs": [],
                "servers": [],
                "image_full": "user-service"
            },
            {
                "monitors": [],
                "image": "redis",
                "discos": [],
                "buses": [],
                "gates": [],
                "name": "redisdb",
                "depends_on": [],
                "dbs": [
                    "redis"
                ],
                "servers": [],
                "image_full": "redis:alpine"
            },
            {
                "monitors": [],
                "image": "../openzipkin-eureka",
                "discos": [
                    "eureka"
                ],
                "buses": [],
                "gates": [],
                "name": "zipkin",
                "depends_on": [
                    "zipkin-mysql"
                ],
                "dbs": [],
                "servers": [],
                "image_full": "../openzipkin-eureka"
            },
            {
                "monitors": [],
                "image": "authentication-service",
                "discos": [],
                "buses": [],
                "gates": [],
                "name": "authentication-api",
                "depends_on": [
                    "service-discovery",
                    "config-management",
                    "mongodb-datasource"
                ],
                "dbs": [],
                "servers": [],
                "image_full": "authentication-service"
            },
            {
                "monitors": [],
                "image": "edge-server",
                "discos": [],
                "buses": [],
                "gates": [],
                "name": "gateway",
                "depends_on": [
                    "service-discovery",
                    "config-management"
                ],
                "dbs": [],
                "servers": [],
                "image_full": "edge-server"
            },
            {
                "monitors": [],
                "image": "['PORT=3004', 'SERVER_PROTOCOL=https', 'SERVER_URL=spendingbetter.com']",
                "discos": [],
                "buses": [],
                "gates": [],
                "name": "react-webapp-jhipster",
                "depends_on": [
                    "gateway"
                ],
                "dbs": [],
                "servers": [],
                "image_full": "['PORT=3004', 'SERVER_PROTOCOL=https', 'SERVER_URL=spendingbetter.com']"
            },
            {
                "monitors": [],
                "image": "['PORT=3003']",
                "discos": [],
                "buses": [],
                "gates": [],
                "name": "react-webapp",
                "depends_on": [
                    "gateway"
                ],
                "dbs": [],
                "servers": [],
                "image_full": "['PORT=3003']"
            },
            {
                "monitors": [],
                "image": "openzipkin/zipkin-mysql",
                "discos": [],
                "buses": [],
                "gates": [],
                "name": "zipkin-mysql",
                "depends_on": [],
                "dbs": [
                    "mysql"
                ],
                "servers": [],
                "image_full": "openzipkin/zipkin-mysql"
            },
            {
                "monitors": [],
                "image": "admin-server",
                "discos": [],
                "buses": [],
                "gates": [],
                "name": "monitoring",
                "depends_on": [
                    "service-discovery",
                    "config-management"
                ],
                "dbs": [],
                "servers": [],
                "image_full": "admin-server"
            },
            {
                "monitors": [],
                "image": "appropriate/curl",
                "discos": [],
                "buses": [],
                "gates": [],
                "name": "setup_grafana_datasource",
                "depends_on": [
                    "grafana"
                ],
                "dbs": [],
                "servers": [],
                "image_full": "appropriate/curl"
            },
            {
                "monitors": [
                    "prometheus"
                ],
                "image": "prom/prometheus",
                "discos": [],
                "buses": [],
                "gates": [],
                "name": "prometheus",
                "depends_on": [
                    "service-discovery"
                ],
                "dbs": [],
                "servers": [],
                "image_full": "prom/prometheus"
            },
            {
                "monitors": [],
                "image": "openzipkin/zipkin-dependencies",
                "discos": [],
                "buses": [],
                "gates": [],
                "name": "zipkin-dependencies",
                "depends_on": [
                    "zipkin-mysql"
                ],
                "dbs": [],
                "servers": [],
                "image_full": "openzipkin/zipkin-dependencies"
            },
            {
                "monitors": [],
                "image": "person-service",
                "discos": [],
                "buses": [],
                "gates": [],
                "name": "person-api",
                "depends_on": [
                    "service-discovery",
                    "config-management",
                    "mongodb-datasource"
                ],
                "dbs": [],
                "servers": [],
                "image_full": "person-service"
            },
            {
                "monitors": [],
                "image": "config-server",
                "discos": [],
                "buses": [],
                "gates": [],
                "name": "config-management",
                "depends_on": [
                    "service-discovery"
                ],
                "dbs": [],
                "servers": [],
                "image_full": "config-server"
            },
            {
                "monitors": [],
                "image": "['PORT=3005']",
                "discos": [],
                "buses": [],
                "gates": [],
                "name": "product-api",
                "depends_on": [],
                "dbs": [],
                "servers": [],
                "image_full": "['PORT=3005']"
            },
            {
                "monitors": [],
                "image": "mongo",
                "discos": [],
                "buses": [],
                "gates": [],
                "name": "mongodb-datasource",
                "depends_on": [],
                "dbs": [
                    "mongo"
                ],
                "servers": [],
                "image_full": "mongo:3.4.10"
            },
            {
                "monitors": [
                    "grafana"
                ],
                "image": "grafana/grafana",
                "discos": [],
                "buses": [],
                "gates": [],
                "name": "grafana",
                "depends_on": [],
                "dbs": [],
                "servers": [],
                "image_full": "grafana/grafana"
            }
        ]
    },
    "size": 7006,
    "num_discos": 2,
    "languages": [
        "typescript",
        "java",
        "javascript"
    ],
    "url": "git://github.com/rodrigorodrigues/microservices-design-patterns.git",
    "buses": [],
    "gates": [
        "nginx",
        "zuul"
    ],
    "shared_dbs": true,
    "servers": [
        "mongoose",
        "glassfish",
        "flask",
        "node",
        "spring",
        "express"
    ],
    "images": [
        "node",
        "maven",
        "nginx",
        "tiangolo/uwsgi-nginx-flask"
    ],
    "num_servers": 6,
    "num_dockers": 5,
    "num_monitors": 2,
    "num_dbs": 5
}