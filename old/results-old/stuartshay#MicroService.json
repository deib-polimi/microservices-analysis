{
    "num_servers": 1,
    "servers": [
        "node"
    ],
    "discos": [],
    "num_dbs": 0,
    "files": [
        {
            "monitors": [],
            "servers": [],
            "discos": [],
            "gates": [],
            "buses": [],
            "path": "/helm/openfaas/openfaas/template/python3/requirements.txt",
            "dbs": []
        },
        {
            "monitors": [],
            "servers": [],
            "discos": [],
            "gates": [],
            "buses": [],
            "path": "/helm/openfaas/openfaas/template/python3/function/requirements.txt",
            "dbs": []
        },
        {
            "monitors": [],
            "servers": [],
            "discos": [],
            "gates": [],
            "buses": [],
            "path": "/helm/openfaas/openfaas/template/python3-armhf/requirements.txt",
            "dbs": []
        },
        {
            "monitors": [],
            "servers": [],
            "discos": [],
            "gates": [],
            "buses": [],
            "path": "/helm/openfaas/openfaas/template/python3-armhf/function/requirements.txt",
            "dbs": []
        },
        {
            "monitors": [],
            "servers": [],
            "discos": [],
            "gates": [],
            "buses": [],
            "path": "/helm/openfaas/openfaas/template/python/requirements.txt",
            "dbs": []
        },
        {
            "monitors": [],
            "servers": [],
            "discos": [],
            "gates": [],
            "buses": [],
            "path": "/helm/openfaas/openfaas/template/python/function/requirements.txt",
            "dbs": []
        },
        {
            "monitors": [],
            "servers": [],
            "discos": [],
            "gates": [],
            "buses": [],
            "path": "/helm/openfaas/openfaas/template/python-armhf/requirements.txt",
            "dbs": []
        },
        {
            "monitors": [],
            "servers": [],
            "discos": [],
            "gates": [],
            "buses": [],
            "path": "/helm/openfaas/openfaas/template/python-armhf/function/requirements.txt",
            "dbs": []
        },
        {
            "monitors": [],
            "servers": [],
            "discos": [],
            "gates": [],
            "buses": [],
            "path": "/helm/openfaas/openfaas/test/requirements.txt",
            "dbs": []
        },
        {
            "monitors": [],
            "servers": [],
            "discos": [],
            "gates": [],
            "buses": [],
            "path": "/helm/openfaas/openfaas/template/java8/build.gradle",
            "dbs": []
        },
        {
            "monitors": [],
            "servers": [],
            "discos": [],
            "gates": [],
            "buses": [],
            "path": "/helm/openfaas/openfaas/template/java8/settings.gradle",
            "dbs": []
        },
        {
            "monitors": [],
            "servers": [],
            "discos": [],
            "gates": [],
            "buses": [],
            "path": "/helm/openfaas/openfaas/template/java8/model/build.gradle",
            "dbs": []
        },
        {
            "monitors": [],
            "servers": [],
            "discos": [],
            "gates": [],
            "buses": [],
            "path": "/helm/openfaas/openfaas/template/java8/model/settings.gradle",
            "dbs": []
        },
        {
            "monitors": [],
            "servers": [],
            "discos": [],
            "gates": [],
            "buses": [],
            "path": "/helm/openfaas/openfaas/template/java8/entrypoint/build.gradle",
            "dbs": []
        },
        {
            "monitors": [],
            "servers": [],
            "discos": [],
            "gates": [],
            "buses": [],
            "path": "/helm/openfaas/openfaas/template/java8/entrypoint/settings.gradle",
            "dbs": []
        },
        {
            "monitors": [],
            "servers": [],
            "discos": [],
            "gates": [],
            "buses": [],
            "path": "/helm/openfaas/openfaas/template/java8/function/build.gradle",
            "dbs": []
        },
        {
            "monitors": [],
            "servers": [],
            "discos": [],
            "gates": [],
            "buses": [],
            "path": "/helm/openfaas/openfaas/template/java8/function/settings.gradle",
            "dbs": []
        },
        {
            "monitors": [],
            "servers": [],
            "discos": [],
            "gates": [],
            "buses": [],
            "path": "/helm/openfaas/openfaas/template/node/package.json",
            "dbs": []
        },
        {
            "monitors": [],
            "servers": [],
            "discos": [],
            "gates": [],
            "buses": [],
            "path": "/helm/openfaas/openfaas/template/node/function/package.json",
            "dbs": []
        },
        {
            "monitors": [],
            "servers": [],
            "discos": [],
            "gates": [],
            "buses": [],
            "path": "/helm/openfaas/openfaas/template/node-arm64/package.json",
            "dbs": []
        },
        {
            "monitors": [],
            "servers": [],
            "discos": [],
            "gates": [],
            "buses": [],
            "path": "/helm/openfaas/openfaas/template/node-arm64/function/package.json",
            "dbs": []
        },
        {
            "monitors": [],
            "servers": [],
            "discos": [],
            "gates": [],
            "buses": [],
            "path": "/helm/openfaas/openfaas/template/node-armhf/package.json",
            "dbs": []
        },
        {
            "monitors": [],
            "servers": [],
            "discos": [],
            "gates": [],
            "buses": [],
            "path": "/helm/openfaas/openfaas/template/node-armhf/function/package.json",
            "dbs": []
        }
    ],
    "langs": [
        "c#",
        "dockerfile",
        "hcl",
        "golang",
        "php",
        "ruby",
        "python",
        "groovy"
    ],
    "dockers": [
        {
            "keywords": [
                "app",
                "home",
                "python",
                "chown",
                "function"
            ],
            "path": "/helm/openfaas/openfaas/template/python3/Dockerfile",
            "discos": [],
            "cmd": "fwatchdog",
            "from_full": "python:3-alpine",
            "from": "python",
            "servers": [],
            "langs": [
                "python"
            ],
            "monitors": [],
            "gates": [],
            "buses": [],
            "cmd_keywords": [
                "fwatchdog"
            ],
            "dbs": []
        },
        {
            "keywords": [
                "app",
                "composer",
                "usr",
                "php",
                "apk"
            ],
            "path": "/helm/openfaas/openfaas/template/php7/Dockerfile",
            "discos": [],
            "cmd": "fwatchdog",
            "from_full": "php:7.2-alpine",
            "from": "php",
            "servers": [],
            "langs": [
                "php"
            ],
            "monitors": [],
            "gates": [],
            "buses": [],
            "cmd_keywords": [
                "fwatchdog"
            ],
            "dbs": []
        },
        {
            "keywords": [
                "app",
                "vendor",
                "cgo",
                "not",
                "path"
            ],
            "path": "/helm/openfaas/openfaas/template/go-armhf/Dockerfile",
            "discos": [],
            "cmd": "./fwatchdog",
            "from_full": "alpine:3.9",
            "from": "alpine",
            "servers": [],
            "langs": [
                "golang"
            ],
            "monitors": [],
            "gates": [],
            "buses": [],
            "cmd_keywords": [
                "fwatchdog"
            ],
            "dbs": []
        },
        {
            "keywords": [
                "app",
                "home",
                "curl",
                "fwatchdog",
                "python"
            ],
            "path": "/helm/openfaas/openfaas/template/python3-armhf/Dockerfile",
            "discos": [],
            "cmd": "fwatchdog",
            "from_full": "python:3-alpine",
            "from": "python",
            "servers": [],
            "langs": [
                "python"
            ],
            "monitors": [],
            "gates": [],
            "buses": [],
            "cmd_keywords": [
                "fwatchdog"
            ],
            "dbs": []
        },
        {
            "keywords": [
                "app",
                "curl",
                "fwatchdog",
                "apk",
                "bundle"
            ],
            "path": "/helm/openfaas/openfaas/template/ruby/Dockerfile",
            "discos": [],
            "cmd": "fwatchdog",
            "from_full": "ruby:2.5.1-alpine3.7",
            "from": "ruby",
            "servers": [],
            "langs": [
                "ruby"
            ],
            "monitors": [],
            "gates": [],
            "buses": [],
            "cmd_keywords": [
                "fwatchdog"
            ],
            "dbs": []
        },
        {
            "keywords": [
                "app",
                "home",
                "addgroup",
                "chmod",
                "usr"
            ],
            "path": "/helm/openfaas/openfaas/template/dockerfile-armhf/function/Dockerfile",
            "discos": [],
            "cmd": "fwatchdog",
            "from_full": "alpine:3.9",
            "from": "alpine",
            "servers": [],
            "langs": [],
            "monitors": [],
            "gates": [],
            "buses": [],
            "cmd_keywords": [
                "fwatchdog"
            ],
            "dbs": []
        },
        {
            "keywords": [
                "app",
                "curl",
                "fwatchdog",
                "chmod",
                "apk"
            ],
            "path": "/helm/openfaas/openfaas/template/node/Dockerfile",
            "discos": [],
            "cmd": "fwatchdog",
            "from_full": "node:8.9.1-alpine",
            "from": "node",
            "servers": [
                "node"
            ],
            "langs": [],
            "monitors": [],
            "gates": [],
            "buses": [],
            "cmd_keywords": [
                "fwatchdog"
            ],
            "dbs": []
        },
        {
            "keywords": [
                "app",
                "vendor",
                "cgo",
                "not",
                "path"
            ],
            "path": "/helm/openfaas/openfaas/template/go/Dockerfile",
            "discos": [],
            "cmd": "./fwatchdog",
            "from_full": "alpine:3.9",
            "from": "alpine",
            "servers": [],
            "langs": [
                "golang"
            ],
            "monitors": [],
            "gates": [],
            "buses": [],
            "cmd_keywords": [
                "fwatchdog"
            ],
            "dbs": []
        },
        {
            "keywords": [
                "apt",
                "get",
                "curl",
                "fwatchdog",
                "bin"
            ],
            "path": "/helm/openfaas/openfaas/template/node-arm64/Dockerfile",
            "discos": [],
            "cmd": "fwatchdog",
            "from_full": "arm64v8/node:8.9.1",
            "from": "arm64v8/node",
            "servers": [
                "node"
            ],
            "langs": [],
            "monitors": [],
            "gates": [],
            "buses": [],
            "cmd_keywords": [
                "fwatchdog"
            ],
            "dbs": []
        },
        {
            "keywords": [
                "app",
                "get",
                "dotnet",
                "apt",
                "system"
            ],
            "path": "/helm/openfaas/openfaas/template/csharp-armhf/Dockerfile",
            "discos": [],
            "cmd": "fwatchdog",
            "from_full": "mcr.microsoft.com/dotnet/core/runtime:2.2.4-stretch-slim-arm32v7",
            "from": "mcr.microsoft.com/dotnet/core/runtime",
            "servers": [],
            "langs": [],
            "monitors": [],
            "gates": [],
            "buses": [],
            "cmd_keywords": [
                "fwatchdog"
            ],
            "dbs": []
        },
        {
            "keywords": [
                "app",
                "gradle",
                "bin",
                "curl",
                "zip"
            ],
            "path": "/helm/openfaas/openfaas/template/java8/Dockerfile",
            "discos": [],
            "cmd": "fwatchdog",
            "from_full": "openjdk:8u131-jdk-alpine",
            "from": "openjdk",
            "servers": [],
            "langs": [],
            "monitors": [],
            "gates": [],
            "buses": [],
            "cmd_keywords": [
                "fwatchdog"
            ],
            "dbs": []
        },
        {
            "keywords": [
                "app",
                "home",
                "python",
                "chown",
                "function"
            ],
            "path": "/helm/openfaas/openfaas/template/python/Dockerfile",
            "discos": [],
            "cmd": "fwatchdog",
            "from_full": "python:2.7-alpine",
            "from": "python",
            "servers": [],
            "langs": [
                "python"
            ],
            "monitors": [],
            "gates": [],
            "buses": [],
            "cmd_keywords": [
                "fwatchdog"
            ],
            "dbs": []
        },
        {
            "keywords": [
                "app",
                "dotnet",
                "system",
                "home",
                "addgroup"
            ],
            "path": "/helm/openfaas/openfaas/template/csharp/Dockerfile",
            "discos": [],
            "cmd": "fwatchdog",
            "from_full": "microsoft/dotnet:2.1-runtime",
            "from": "microsoft/dotnet",
            "servers": [],
            "langs": [],
            "monitors": [],
            "gates": [],
            "buses": [],
            "cmd_keywords": [
                "fwatchdog"
            ],
            "dbs": []
        },
        {
            "keywords": [
                "apk",
                "cache",
                "curl",
                "fwatchdog",
                "npm"
            ],
            "path": "/helm/openfaas/openfaas/template/node-armhf/Dockerfile",
            "discos": [],
            "cmd": "fwatchdog",
            "from_full": "arm32v6/alpine:3.6",
            "from": "arm32v6/alpine",
            "servers": [],
            "langs": [],
            "monitors": [],
            "gates": [],
            "buses": [],
            "cmd_keywords": [
                "fwatchdog"
            ],
            "dbs": []
        },
        {
            "keywords": [
                "app",
                "home",
                "addgroup",
                "chmod",
                "usr"
            ],
            "path": "/helm/openfaas/openfaas/template/dockerfile/function/Dockerfile",
            "discos": [],
            "cmd": "fwatchdog",
            "from_full": "alpine:3.9",
            "from": "alpine",
            "servers": [],
            "langs": [],
            "monitors": [],
            "gates": [],
            "buses": [],
            "cmd_keywords": [
                "fwatchdog"
            ],
            "dbs": []
        },
        {
            "keywords": [
                "app",
                "home",
                "curl",
                "fwatchdog",
                "python"
            ],
            "path": "/helm/openfaas/openfaas/template/python-armhf/Dockerfile",
            "discos": [],
            "cmd": "fwatchdog",
            "from_full": "python:2.7-alpine",
            "from": "python",
            "servers": [],
            "langs": [
                "python"
            ],
            "monitors": [],
            "gates": [],
            "buses": [],
            "cmd_keywords": [
                "fwatchdog"
            ],
            "dbs": []
        },
        {
            "keywords": [
                "apt",
                "publish",
                "get",
                "install",
                "dotnet"
            ],
            "path": "/docker/microservice-api-multi.dockerfile/Dockerfile",
            "discos": [],
            "cmd": "",
            "from_full": "mcr.microsoft.com/dotnet/core/aspnet:2.2",
            "from": "mcr.microsoft.com/dotnet/core/aspnet",
            "servers": [],
            "langs": [],
            "monitors": [],
            "gates": [],
            "buses": [],
            "cmd_keywords": [],
            "dbs": []
        },
        {
            "keywords": [
                "apt",
                "get",
                "install",
                "update",
                "tree"
            ],
            "path": "/docker/microservice-api-base.dockerfile/Dockerfile",
            "discos": [],
            "cmd": "",
            "from_full": "mcr.microsoft.com/dotnet/core/sdk:2.2",
            "from": "mcr.microsoft.com/dotnet/core/sdk",
            "servers": [],
            "langs": [],
            "monitors": [],
            "gates": [],
            "buses": [],
            "cmd_keywords": [],
            "dbs": []
        },
        {
            "keywords": [
                "prometheus",
                "chmod",
                "yml",
                "etc"
            ],
            "path": "/docker/microservice-prometheus.dockerfile/Dockerfile",
            "discos": [],
            "cmd": "",
            "from_full": "prom/prometheus:v2.15.2",
            "from": "prom/prometheus",
            "servers": [],
            "langs": [],
            "monitors": [
                "prometheus"
            ],
            "gates": [],
            "buses": [],
            "cmd_keywords": [],
            "dbs": []
        },
        {
            "keywords": [
                "apt",
                "grafana",
                "local",
                "install",
                "get"
            ],
            "path": "/docker/microservice-grafana.dockerfile/Dockerfile",
            "discos": [],
            "cmd": "",
            "from_full": "grafana/grafana:6.5.3-ubuntu",
            "from": "grafana/grafana",
            "servers": [],
            "langs": [],
            "monitors": [
                "grafana"
            ],
            "gates": [],
            "buses": [],
            "cmd_keywords": [],
            "dbs": []
        },
        {
            "keywords": [
                "dotnet",
                "for",
                "wait",
                "install",
                "tool"
            ],
            "path": "/docker/microservice-api-build.dockerfile/Dockerfile",
            "discos": [],
            "cmd": "",
            "from_full": "mcr.microsoft.com/dotnet/core/aspnet:2.2",
            "from": "mcr.microsoft.com/dotnet/core/aspnet",
            "servers": [],
            "langs": [],
            "monitors": [],
            "gates": [],
            "buses": [],
            "cmd_keywords": [],
            "dbs": []
        }
    ],
    "size": 77105,
    "structure": {
        "services": [],
        "path": [],
        "detected_dbs": {
            "num": 0,
            "services": [],
            "names": [],
            "shared_dbs": false
        },
        "num_services": 0
    },
    "images": [
        "arm64v8/node",
        "mcr.microsoft.com/dotnet/core/runtime",
        "node",
        "mcr.microsoft.com/dotnet/core/aspnet",
        "prom/prometheus",
        "microsoft/dotnet",
        "arm32v6/alpine",
        "mcr.microsoft.com/dotnet/core/sdk",
        "grafana/grafana",
        "openjdk",
        "php",
        "ruby",
        "python",
        "alpine"
    ],
    "num_files": 45,
    "gates": [],
    "buses": [],
    "num_langs": 8,
    "name": "stuartshay/MicroService",
    "url": "git://github.com/stuartshay/MicroService.git",
    "num_gates": 0,
    "num_buses": 0,
    "num_discos": 0,
    "num_monitors": 2,
    "num_dockers": 21,
    "num_services": 0,
    "monitors": [
        "grafana",
        "prometheus"
    ],
    "avg_size_service": 3671.6666666666665,
    "languages": [
        "c#",
        "hcl",
        "groovy",
        "dockerfile"
    ],
    "dbs": [],
    "shared_dbs": false
}