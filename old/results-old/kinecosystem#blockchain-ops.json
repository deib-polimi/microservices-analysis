{
    "monitors": [
        "prometheus"
    ],
    "gates": [
        "nginx"
    ],
    "num_gates": 1,
    "discos": [],
    "url": "git://github.com/kinecosystem/blockchain-ops.git",
    "size": 696,
    "shared_dbs": false,
    "name": "kinecosystem/blockchain-ops",
    "num_dockers": 15,
    "num_files": 18,
    "avg_size_service": 46.4,
    "buses": [],
    "num_servers": 2,
    "num_services": 1,
    "images": [
        "nginx",
        "telegraf",
        "solita/ubuntu-systemd-ssh",
        "postgres",
        "docker.elastic.co/beats/filebeat",
        "stellar/base",
        "python"
    ],
    "num_langs": 4,
    "structure": {
        "detected_dbs": {
            "num": 0,
            "shared_dbs": false,
            "names": [],
            "services": []
        },
        "path": "/dashboard/healthcheck-telegraf-client/docker-compose.yml",
        "num_services": 1,
        "services": [
            {
                "dbs": [],
                "monitors": [],
                "buses": [],
                "gates": [],
                "name": "telegraf",
                "image_full": "kinecosystem/blockchain-healthcheck-telegraf:v1.0.0",
                "discos": [],
                "image": "kinecosystem/blockchain-healthcheck-telegraf",
                "servers": [],
                "depends_on": []
            }
        ]
    },
    "langs": [
        "shell",
        "python",
        "hcl",
        "bash"
    ],
    "files": [
        {
            "dbs": [],
            "monitors": [
                "prometheus"
            ],
            "buses": [],
            "path": "/requirements.txt",
            "discos": [],
            "servers": [
                "flask"
            ],
            "gates": []
        },
        {
            "dbs": [],
            "monitors": [],
            "buses": [],
            "path": "/deploy/ansible/requirements.txt",
            "discos": [],
            "servers": [],
            "gates": []
        }
    ],
    "dockers": [
        {
            "langs": [
                "bash"
            ],
            "monitors": [],
            "buses": [],
            "gates": [],
            "from": "solita/ubuntu-systemd-ssh",
            "discos": [],
            "keywords": [
                "apt",
                "get",
                "docker",
                "var",
                "lists"
            ],
            "from_full": "solita/ubuntu-systemd-ssh:16.04",
            "cmd": "",
            "path": "/deploy/ansible/image/Dockerfile",
            "dbs": [],
            "servers": [],
            "cmd_keywords": []
        },
        {
            "langs": [],
            "monitors": [],
            "buses": [],
            "gates": [],
            "from": "stellar/base",
            "discos": [],
            "keywords": [
                "stellar",
                "opt",
                "home",
                "apt",
                "horizon"
            ],
            "from_full": "stellar/base:latest",
            "cmd": "",
            "path": "/apps/docker-quickstart/Dockerfile",
            "dbs": [],
            "servers": [],
            "cmd_keywords": []
        },
        {
            "langs": [
                "python"
            ],
            "monitors": [],
            "buses": [],
            "gates": [],
            "from": "python",
            "discos": [],
            "keywords": [
                "pipenv",
                "deps",
                "build",
                "apk",
                "cache"
            ],
            "from_full": "python:3.7-alpine3.9",
            "cmd": "",
            "path": "/apps/horizon-health-check/Dockerfile",
            "dbs": [],
            "servers": [],
            "cmd_keywords": []
        },
        {
            "langs": [],
            "monitors": [],
            "buses": [],
            "gates": [],
            "from": "telegraf",
            "discos": [],
            "keywords": [
                "apt",
                "get",
                "mkdir",
                "install",
                "gettext"
            ],
            "from_full": "telegraf:1.11",
            "cmd": "/entrypoint.sh",
            "path": "/images/dockerfiles/horizon-telegraf/Dockerfile",
            "dbs": [],
            "servers": [],
            "cmd_keywords": [
                "entrypoint"
            ]
        },
        {
            "langs": [],
            "monitors": [],
            "buses": [],
            "gates": [],
            "from": "telegraf",
            "discos": [],
            "keywords": [
                "cache",
                "gettext",
                "curl",
                "add",
                "coreutils"
            ],
            "from_full": "telegraf:1.9.5-alpine",
            "cmd": "/entrypoint.sh",
            "path": "/images/dockerfiles/telegraf-datadog-forwarder-testnet/Dockerfile",
            "dbs": [],
            "servers": [],
            "cmd_keywords": [
                "entrypoint"
            ]
        },
        {
            "langs": [],
            "monitors": [],
            "buses": [],
            "gates": [],
            "from": "telegraf",
            "discos": [],
            "keywords": [
                "apt",
                "get",
                "data",
                "mkdir",
                "install"
            ],
            "from_full": "telegraf:1.11",
            "cmd": "/entrypoint.sh",
            "path": "/images/dockerfiles/stellar-core-telegraf-test-env/Dockerfile",
            "dbs": [
                "postgresql"
            ],
            "servers": [],
            "cmd_keywords": [
                "entrypoint"
            ]
        },
        {
            "langs": [
                "python"
            ],
            "monitors": [
                "prometheus"
            ],
            "buses": [],
            "gates": [],
            "from": "python",
            "discos": [],
            "keywords": [
                "client",
                "prometheus",
                "pip",
                "install",
                "requests"
            ],
            "from_full": "python:3.7-alpine3.9",
            "cmd": "python /usr/local/bin/stellar-core-prometheus-exporter.py",
            "path": "/images/dockerfiles/stellar-core-metrics-exporter/Dockerfile",
            "dbs": [],
            "servers": [],
            "cmd_keywords": [
                "core",
                "exporter",
                "python",
                "local",
                "bin"
            ]
        },
        {
            "langs": [],
            "monitors": [],
            "buses": [],
            "gates": [],
            "from": "docker.elastic.co/beats/filebeat",
            "discos": [],
            "keywords": [
                "share",
                "usr",
                "filebeat",
                "root",
                "dockerlogs"
            ],
            "from_full": "docker.elastic.co/beats/filebeat:7.2.0",
            "cmd": "",
            "path": "/images/dockerfiles/filebeat-for-docker-logs/Dockerfile",
            "dbs": [],
            "servers": [],
            "cmd_keywords": []
        },
        {
            "langs": [],
            "monitors": [],
            "buses": [],
            "gates": [],
            "from": "telegraf",
            "discos": [],
            "keywords": [
                "mkdir",
                "cache",
                "curl",
                "gettext",
                "telegraf"
            ],
            "from_full": "telegraf:1.9.5-alpine",
            "cmd": "/entrypoint.sh",
            "path": "/images/dockerfiles/blockchain-healthcheck-telegraf/Dockerfile",
            "dbs": [],
            "servers": [],
            "cmd_keywords": [
                "entrypoint"
            ]
        },
        {
            "langs": [],
            "monitors": [],
            "buses": [],
            "gates": [],
            "from": "postgres",
            "discos": [],
            "keywords": [
                "postgres",
                "postgresql",
                "chown",
                "etc"
            ],
            "from_full": "postgres:10-alpine",
            "cmd": "postgres -c config-file=/etc/postgresql/postgresql.conf",
            "path": "/images/dockerfiles/postgres-core/Dockerfile",
            "dbs": [
                "postgresql"
            ],
            "servers": [],
            "cmd_keywords": [
                "postgresql",
                "etc",
                "conf",
                "config",
                "postgres"
            ]
        },
        {
            "langs": [],
            "monitors": [],
            "buses": [],
            "gates": [],
            "from": "postgres",
            "discos": [],
            "keywords": [
                "postgres",
                "postgresql",
                "chown",
                "etc"
            ],
            "from_full": "postgres:10-alpine",
            "cmd": "postgres -c config-file=/etc/postgresql/postgresql.conf",
            "path": "/images/dockerfiles/postgres-horizon/Dockerfile",
            "dbs": [
                "postgresql"
            ],
            "servers": [],
            "cmd_keywords": [
                "postgresql",
                "etc",
                "conf",
                "config",
                "postgres"
            ]
        },
        {
            "langs": [],
            "monitors": [],
            "buses": [],
            "gates": [],
            "from": "telegraf",
            "discos": [],
            "keywords": [
                "cache",
                "gettext",
                "curl",
                "add",
                "coreutils"
            ],
            "from_full": "telegraf:1.9.5-alpine",
            "cmd": "/entrypoint.sh",
            "path": "/images/dockerfiles/telegraf-datadog-forwarder/Dockerfile",
            "dbs": [],
            "servers": [],
            "cmd_keywords": [
                "entrypoint"
            ]
        },
        {
            "langs": [],
            "monitors": [],
            "buses": [],
            "gates": [
                "nginx"
            ],
            "from": "nginx",
            "discos": [],
            "keywords": [],
            "from_full": "nginx:1.15.8-alpine",
            "cmd": "envsubst '$NODE_NAME $STATSD_SAMPLE_RATE_PERCENT $HOST $PROXY_LISTEN_PORT $PROXY_READ_TIMEOUT $PROXY_PASS_URL' < /etc/nginx/nginx.conf.tmpl > /etc/nginx/nginx.conf && exec nginx",
            "path": "/images/dockerfiles/horizon-nginx-proxy/Dockerfile",
            "dbs": [],
            "servers": [
                "node"
            ],
            "cmd_keywords": [
                "nginx",
                "proxy",
                "conf",
                "etc",
                "rate"
            ]
        },
        {
            "langs": [],
            "monitors": [],
            "buses": [],
            "gates": [],
            "from": "telegraf",
            "discos": [],
            "keywords": [
                "apt",
                "get",
                "mkdir",
                "install",
                "gettext"
            ],
            "from_full": "telegraf:1.11",
            "cmd": "/entrypoint.sh",
            "path": "/images/dockerfiles/stellar-core-telegraf/Dockerfile",
            "dbs": [
                "postgresql"
            ],
            "servers": [],
            "cmd_keywords": [
                "entrypoint"
            ]
        },
        {
            "langs": [],
            "monitors": [],
            "buses": [],
            "gates": [],
            "from": "telegraf",
            "discos": [],
            "keywords": [
                "apt",
                "get",
                "mkdir",
                "install",
                "gettext"
            ],
            "from_full": "telegraf:1.11",
            "cmd": "/entrypoint.sh",
            "path": "/images/dockerfiles/horizon-telegraf-test-env/Dockerfile",
            "dbs": [],
            "servers": [],
            "cmd_keywords": [
                "entrypoint"
            ]
        }
    ],
    "languages": [
        "python",
        "shell",
        "hcl"
    ],
    "num_dbs": 1,
    "dbs": [
        "postgresql"
    ],
    "num_discos": 0,
    "servers": [
        "flask",
        "node"
    ],
    "num_buses": 0,
    "num_monitors": 1
}