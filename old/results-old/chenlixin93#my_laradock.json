{
    "num_dbs": 10,
    "name": "chenlixin93/my_laradock",
    "url": "git://github.com/chenlixin93/my_laradock.git",
    "files": [
        {
            "discos": [],
            "servers": [
                "laravel"
            ],
            "gates": [],
            "dbs": [],
            "path": "/laravel-echo-server/package.json",
            "buses": [],
            "monitors": []
        }
    ],
    "num_gates": 1,
    "dbs": [
        "mongo",
        "cassandra",
        "redis",
        "percona",
        "mysql",
        "zookeeper",
        "max",
        "memcached",
        "aerospike",
        "postgresql"
    ],
    "shared_dbs": true,
    "num_langs": 7,
    "servers": [
        "node",
        "caddy",
        "laravel",
        "tomcat"
    ],
    "num_servers": 4,
    "size": 3101,
    "avg_size_service": 46.984848484848484,
    "num_discos": 3,
    "num_monitors": 2,
    "languages": [
        "dockerfile",
        "shell",
        "vcl"
    ],
    "num_dockers": 66,
    "num_files": 68,
    "num_buses": 4,
    "buses": [
        "rabbitmq",
        "gearman",
        "amqp",
        "mosquitto"
    ],
    "structure": {
        "num_services": 84,
        "detected_dbs": {
            "num": 19,
            "services": [
                "redis-webui",
                "zookeeper",
                "couchdb",
                "php-fpm",
                "solr",
                "aerospike",
                "redis",
                "percona",
                "mongo",
                "workspace",
                "mysql",
                "memcached",
                "redis-cluster",
                "php-worker",
                "laravel-horizon",
                "mariadb",
                "cassandra",
                "mongo-webui",
                "rethinkdb"
            ],
            "shared_dbs": true,
            "names": [
                "mongo",
                "cassandra",
                "redis",
                "percona",
                "mysql",
                "zookeeper",
                "rethinkdb",
                "couchdb",
                "memcached",
                "aerospike",
                "mariadb"
            ]
        },
        "services": [
            {
                "discos": [],
                "dbs": [],
                "image": "./rabbitmq",
                "depends_on": [
                    "php-fpm"
                ],
                "gates": [],
                "name": "rabbitmq",
                "servers": [],
                "buses": [
                    "rabbitmq"
                ],
                "image_full": "./rabbitmq",
                "monitors": []
            },
            {
                "discos": [],
                "dbs": [],
                "image": "./grafana",
                "depends_on": [],
                "gates": [],
                "name": "grafana",
                "servers": [],
                "buses": [],
                "image_full": "./grafana",
                "monitors": [
                    "grafana"
                ]
            },
            {
                "discos": [],
                "dbs": [],
                "image": "./mailhog",
                "depends_on": [],
                "gates": [],
                "name": "mailhog",
                "servers": [],
                "buses": [],
                "image_full": "./mailhog",
                "monitors": []
            },
            {
                "discos": [],
                "dbs": [],
                "image": "./minio",
                "depends_on": [],
                "gates": [],
                "name": "minio",
                "servers": [],
                "buses": [],
                "image_full": "./minio",
                "monitors": []
            },
            {
                "discos": [],
                "dbs": [
                    "redis"
                ],
                "image": "./redis-webui",
                "depends_on": [
                    "redis"
                ],
                "gates": [],
                "name": "redis-webui",
                "servers": [],
                "buses": [],
                "image_full": "./redis-webui",
                "monitors": []
            },
            {
                "discos": [
                    "zookeeper"
                ],
                "dbs": [
                    "zookeeper"
                ],
                "image": "./zookeeper",
                "depends_on": [],
                "gates": [],
                "name": "zookeeper",
                "servers": [],
                "buses": [],
                "image_full": "./zookeeper",
                "monitors": []
            },
            {
                "discos": [
                    "traefik"
                ],
                "dbs": [],
                "image": "./traefik",
                "depends_on": [],
                "gates": [],
                "name": "traefik",
                "servers": [],
                "buses": [],
                "image_full": "./traefik",
                "monitors": []
            },
            {
                "discos": [],
                "dbs": [],
                "image": "mailu/admin",
                "depends_on": [
                    "redis"
                ],
                "gates": [],
                "name": "mailu-admin",
                "servers": [],
                "buses": [],
                "image_full": "mailu/admin:${MAILU_VERSION}",
                "monitors": []
            },
            {
                "discos": [],
                "dbs": [],
                "image": "./haproxy",
                "depends_on": [
                    "proxy",
                    "proxy2"
                ],
                "gates": [],
                "name": "haproxy",
                "servers": [],
                "buses": [],
                "image_full": "./haproxy",
                "monitors": []
            },
            {
                "discos": [],
                "dbs": [],
                "image": "./thumbor",
                "depends_on": [],
                "gates": [],
                "name": "thumbor",
                "servers": [],
                "buses": [],
                "image_full": "./thumbor",
                "monitors": []
            },
            {
                "discos": [],
                "dbs": [],
                "image": "./selenium",
                "depends_on": [],
                "gates": [],
                "name": "selenium",
                "servers": [],
                "buses": [],
                "image_full": "./selenium",
                "monitors": []
            },
            {
                "discos": [],
                "dbs": [],
                "image": "./jupyterhub",
                "depends_on": [
                    "postgres",
                    "jupyterhub-user"
                ],
                "gates": [],
                "name": "jupyterhub",
                "servers": [],
                "buses": [],
                "image_full": "./jupyterhub",
                "monitors": []
            },
            {
                "discos": [],
                "dbs": [],
                "image": "mailu/clamav",
                "depends_on": [],
                "gates": [],
                "name": "mailu-antivirus",
                "servers": [],
                "buses": [],
                "image_full": "mailu/clamav:${MAILU_VERSION}",
                "monitors": []
            },
            {
                "discos": [],
                "dbs": [],
                "image": "mailu/nginx",
                "depends_on": [],
                "gates": [
                    "nginx"
                ],
                "name": "mailu-front",
                "servers": [],
                "buses": [],
                "image_full": "mailu/nginx:${MAILU_VERSION}",
                "monitors": []
            },
            {
                "discos": [],
                "dbs": [],
                "image": "blackfire/blackfire",
                "depends_on": [
                    "php-fpm"
                ],
                "gates": [],
                "name": "blackfire",
                "servers": [],
                "buses": [],
                "image_full": "blackfire/blackfire",
                "monitors": []
            },
            {
                "discos": [],
                "dbs": [],
                "image": "./certbot",
                "depends_on": [],
                "gates": [],
                "name": "certbot",
                "servers": [],
                "buses": [],
                "image_full": "./certbot",
                "monitors": []
            },
            {
                "discos": [],
                "dbs": [],
                "image": "./aws-eb-cli",
                "depends_on": [
                    "workspace"
                ],
                "gates": [],
                "name": "aws",
                "servers": [],
                "buses": [],
                "image_full": "./aws-eb-cli",
                "monitors": []
            },
            {
                "discos": [],
                "dbs": [],
                "image": "./ide-codiad",
                "depends_on": [],
                "gates": [],
                "name": "ide-codiad",
                "servers": [],
                "buses": [],
                "image_full": "./ide-codiad",
                "monitors": []
            },
            {
                "discos": [],
                "dbs": [],
                "image": "./graylog",
                "depends_on": [
                    "mongo",
                    "elasticsearch"
                ],
                "gates": [],
                "name": "graylog",
                "servers": [],
                "buses": [],
                "image_full": "./graylog",
                "monitors": []
            },
            {
                "discos": [],
                "dbs": [],
                "image": "['ELK_VERSION=${ELK_VERSION}']",
                "depends_on": [
                    "elasticsearch"
                ],
                "gates": [],
                "name": "kibana",
                "servers": [],
                "buses": [],
                "image_full": "['ELK_VERSION=${ELK_VERSION}']",
                "monitors": [
                    "elk"
                ]
            },
            {
                "discos": [],
                "dbs": [],
                "image": "./maildev",
                "depends_on": [],
                "gates": [],
                "name": "maildev",
                "servers": [],
                "buses": [],
                "image_full": "./maildev",
                "monitors": []
            },
            {
                "discos": [],
                "dbs": [],
                "image": "./gitlab",
                "depends_on": [
                    "redis",
                    "postgres"
                ],
                "gates": [],
                "name": "gitlab",
                "servers": [],
                "buses": [],
                "image_full": "./gitlab",
                "monitors": []
            },
            {
                "discos": [],
                "dbs": [
                    "couchdb"
                ],
                "image": "./couchdb",
                "depends_on": [],
                "gates": [],
                "name": "couchdb",
                "servers": [],
                "buses": [],
                "image_full": "./couchdb",
                "monitors": []
            },
            {
                "discos": [],
                "dbs": [],
                "image": "./laravel-echo-server",
                "depends_on": [
                    "redis"
                ],
                "gates": [],
                "name": "laravel-echo-server",
                "servers": [
                    "laravel"
                ],
                "buses": [],
                "image_full": "./laravel-echo-server",
                "monitors": []
            },
            {
                "discos": [],
                "dbs": [],
                "image": "./varnish",
                "depends_on": [
                    "workspace"
                ],
                "gates": [],
                "name": "proxy2",
                "servers": [],
                "buses": [],
                "image_full": "./varnish",
                "monitors": []
            },
            {
                "discos": [],
                "dbs": [
                    "mongo"
                ],
                "image": "['CHANGE_SOURCE=${CHANGE_SOURCE}', 'BASE_IMAGE_TAG_PREFIX=${PHP_FPM_BASE_IMAGE_TAG_PREFIX}', 'LARADOCK_PHP_VERSION=${PHP_VERSION}', 'LARADOCK_PHALCON_VERSION=${PHALCON_VERSION}', 'INSTALL_BZ2=${PHP_FPM_INSTALL_BZ2}', 'INSTALL_GMP=${PHP_FPM_INSTALL_GMP}', 'INSTALL_XDEBUG=${PHP_FPM_INSTALL_XDEBUG}', 'INSTALL_PCOV=${PHP_FPM_INSTALL_PCOV}', 'INSTALL_PHPDBG=${PHP_FPM_INSTALL_PHPDBG}', 'INSTALL_BLACKFIRE=${INSTALL_BLACKFIRE}', 'INSTALL_SSH2=${PHP_FPM_INSTALL_SSH2}', 'INSTALL_SOAP=${PHP_FPM_INSTALL_SOAP}', 'INSTALL_XSL=${PHP_FPM_INSTALL_XSL}', 'INSTALL_SMB=${PHP_FPM_INSTALL_SMB}', 'INSTALL_IMAP=${PHP_FPM_INSTALL_IMAP}', 'INSTALL_MONGO=${PHP_FPM_INSTALL_MONGO}', 'INSTALL_AMQP=${PHP_FPM_INSTALL_AMQP}', 'INSTALL_CASSANDRA=${PHP_FPM_INSTALL_CASSANDRA}', 'INSTALL_GEARMAN=${PHP_FPM_INSTALL_GEARMAN}', 'INSTALL_MSSQL=${PHP_FPM_INSTALL_MSSQL}', 'INSTALL_BCMATH=${PHP_FPM_INSTALL_BCMATH}', 'INSTALL_PHPREDIS=${PHP_FPM_INSTALL_PHPREDIS}', 'INSTALL_MEMCACHED=${PHP_FPM_INSTALL_MEMCACHED}', 'INSTALL_OPCACHE=${PHP_FPM_INSTALL_OPCACHE}', 'INSTALL_EXIF=${PHP_FPM_INSTALL_EXIF}', 'INSTALL_AEROSPIKE=${PHP_FPM_INSTALL_AEROSPIKE}', 'INSTALL_OCI8=${PHP_FPM_INSTALL_OCI8}', 'INSTALL_MYSQLI=${PHP_FPM_INSTALL_MYSQLI}', 'INSTALL_PGSQL=${PHP_FPM_INSTALL_PGSQL}', 'INSTALL_PG_CLIENT=${PHP_FPM_INSTALL_PG_CLIENT}', 'INSTALL_POSTGIS=${PHP_FPM_INSTALL_POSTGIS}', 'INSTALL_INTL=${PHP_FPM_INSTALL_INTL}', 'INSTALL_GHOSTSCRIPT=${PHP_FPM_INSTALL_GHOSTSCRIPT}', 'INSTALL_LDAP=${PHP_FPM_INSTALL_LDAP}', 'INSTALL_PHALCON=${PHP_FPM_INSTALL_PHALCON}', 'INSTALL_SWOOLE=${PHP_FPM_INSTALL_SWOOLE}', 'INSTALL_TAINT=${PHP_FPM_INSTALL_TAINT}', 'INSTALL_IMAGE_OPTIMIZERS=${PHP_FPM_INSTALL_IMAGE_OPTIMIZERS}', 'INSTALL_IMAGEMAGICK=${PHP_FPM_INSTALL_IMAGEMAGICK}', 'INSTALL_CALENDAR=${PHP_FPM_INSTALL_CALENDAR}', 'INSTALL_FAKETIME=${PHP_FPM_INSTALL_FAKETIME}', 'INSTALL_IONCUBE=${PHP_FPM_INSTALL_IONCUBE}', 'INSTALL_APCU=${PHP_FPM_INSTALL_APCU}', 'INSTALL_CACHETOOL=${PHP_FPM_INSTALL_CACHETOOL}', 'INSTALL_YAML=${PHP_FPM_INSTALL_YAML}', 'INSTALL_RDKAFKA=${PHP_FPM_INSTALL_RDKAFKA}', 'INSTALL_GETTEXT=${PHP_FPM_INSTALL_GETTEXT}', 'INSTALL_ADDITIONAL_LOCALES=${PHP_FPM_INSTALL_ADDITIONAL_LOCALES}', 'INSTALL_MYSQL_CLIENT=${PHP_FPM_INSTALL_MYSQL_CLIENT}', 'INSTALL_PING=${PHP_FPM_INSTALL_PING}', 'INSTALL_SSHPASS=${PHP_FPM_INSTALL_SSHPASS}', 'INSTALL_MAILPARSE=${PHP_FPM_INSTALL_MAILPARSE}', 'INSTALL_PCNTL=${PHP_FPM_INSTALL_PCNTL}', 'ADDITIONAL_LOCALES=${PHP_FPM_ADDITIONAL_LOCALES}', 'INSTALL_FFMPEG=${PHP_FPM_FFMPEG}', 'INSTALL_WKHTMLTOPDF=${PHP_FPM_INSTALL_WKHTMLTOPDF}', 'INSTALL_XHPROF=${PHP_FPM_INSTALL_XHPROF}', 'PUID=${PHP_FPM_PUID}', 'PGID=${PHP_FPM_PGID}', 'LOCALE=${PHP_FPM_DEFAULT_LOCALE}', 'http_proxy', 'https_proxy', 'no_proxy']",
                "depends_on": [
                    "workspace"
                ],
                "gates": [],
                "name": "php-fpm",
                "servers": [],
                "buses": [
                    "amqp"
                ],
                "image_full": "['CHANGE_SOURCE=${CHANGE_SOURCE}', 'BASE_IMAGE_TAG_PREFIX=${PHP_FPM_BASE_IMAGE_TAG_PREFIX}', 'LARADOCK_PHP_VERSION=${PHP_VERSION}', 'LARADOCK_PHALCON_VERSION=${PHALCON_VERSION}', 'INSTALL_BZ2=${PHP_FPM_INSTALL_BZ2}', 'INSTALL_GMP=${PHP_FPM_INSTALL_GMP}', 'INSTALL_XDEBUG=${PHP_FPM_INSTALL_XDEBUG}', 'INSTALL_PCOV=${PHP_FPM_INSTALL_PCOV}', 'INSTALL_PHPDBG=${PHP_FPM_INSTALL_PHPDBG}', 'INSTALL_BLACKFIRE=${INSTALL_BLACKFIRE}', 'INSTALL_SSH2=${PHP_FPM_INSTALL_SSH2}', 'INSTALL_SOAP=${PHP_FPM_INSTALL_SOAP}', 'INSTALL_XSL=${PHP_FPM_INSTALL_XSL}', 'INSTALL_SMB=${PHP_FPM_INSTALL_SMB}', 'INSTALL_IMAP=${PHP_FPM_INSTALL_IMAP}', 'INSTALL_MONGO=${PHP_FPM_INSTALL_MONGO}', 'INSTALL_AMQP=${PHP_FPM_INSTALL_AMQP}', 'INSTALL_CASSANDRA=${PHP_FPM_INSTALL_CASSANDRA}', 'INSTALL_GEARMAN=${PHP_FPM_INSTALL_GEARMAN}', 'INSTALL_MSSQL=${PHP_FPM_INSTALL_MSSQL}', 'INSTALL_BCMATH=${PHP_FPM_INSTALL_BCMATH}', 'INSTALL_PHPREDIS=${PHP_FPM_INSTALL_PHPREDIS}', 'INSTALL_MEMCACHED=${PHP_FPM_INSTALL_MEMCACHED}', 'INSTALL_OPCACHE=${PHP_FPM_INSTALL_OPCACHE}', 'INSTALL_EXIF=${PHP_FPM_INSTALL_EXIF}', 'INSTALL_AEROSPIKE=${PHP_FPM_INSTALL_AEROSPIKE}', 'INSTALL_OCI8=${PHP_FPM_INSTALL_OCI8}', 'INSTALL_MYSQLI=${PHP_FPM_INSTALL_MYSQLI}', 'INSTALL_PGSQL=${PHP_FPM_INSTALL_PGSQL}', 'INSTALL_PG_CLIENT=${PHP_FPM_INSTALL_PG_CLIENT}', 'INSTALL_POSTGIS=${PHP_FPM_INSTALL_POSTGIS}', 'INSTALL_INTL=${PHP_FPM_INSTALL_INTL}', 'INSTALL_GHOSTSCRIPT=${PHP_FPM_INSTALL_GHOSTSCRIPT}', 'INSTALL_LDAP=${PHP_FPM_INSTALL_LDAP}', 'INSTALL_PHALCON=${PHP_FPM_INSTALL_PHALCON}', 'INSTALL_SWOOLE=${PHP_FPM_INSTALL_SWOOLE}', 'INSTALL_TAINT=${PHP_FPM_INSTALL_TAINT}', 'INSTALL_IMAGE_OPTIMIZERS=${PHP_FPM_INSTALL_IMAGE_OPTIMIZERS}', 'INSTALL_IMAGEMAGICK=${PHP_FPM_INSTALL_IMAGEMAGICK}', 'INSTALL_CALENDAR=${PHP_FPM_INSTALL_CALENDAR}', 'INSTALL_FAKETIME=${PHP_FPM_INSTALL_FAKETIME}', 'INSTALL_IONCUBE=${PHP_FPM_INSTALL_IONCUBE}', 'INSTALL_APCU=${PHP_FPM_INSTALL_APCU}', 'INSTALL_CACHETOOL=${PHP_FPM_INSTALL_CACHETOOL}', 'INSTALL_YAML=${PHP_FPM_INSTALL_YAML}', 'INSTALL_RDKAFKA=${PHP_FPM_INSTALL_RDKAFKA}', 'INSTALL_GETTEXT=${PHP_FPM_INSTALL_GETTEXT}', 'INSTALL_ADDITIONAL_LOCALES=${PHP_FPM_INSTALL_ADDITIONAL_LOCALES}', 'INSTALL_MYSQL_CLIENT=${PHP_FPM_INSTALL_MYSQL_CLIENT}', 'INSTALL_PING=${PHP_FPM_INSTALL_PING}', 'INSTALL_SSHPASS=${PHP_FPM_INSTALL_SSHPASS}', 'INSTALL_MAILPARSE=${PHP_FPM_INSTALL_MAILPARSE}', 'INSTALL_PCNTL=${PHP_FPM_INSTALL_PCNTL}', 'ADDITIONAL_LOCALES=${PHP_FPM_ADDITIONAL_LOCALES}', 'INSTALL_FFMPEG=${PHP_FPM_FFMPEG}', 'INSTALL_WKHTMLTOPDF=${PHP_FPM_INSTALL_WKHTMLTOPDF}', 'INSTALL_XHPROF=${PHP_FPM_INSTALL_XHPROF}', 'PUID=${PHP_FPM_PUID}', 'PGID=${PHP_FPM_PGID}', 'LOCALE=${PHP_FPM_DEFAULT_LOCALE}', 'http_proxy', 'https_proxy', 'no_proxy']",
                "monitors": []
            },
            {
                "discos": [],
                "dbs": [],
                "image": "./portainer",
                "depends_on": [],
                "gates": [],
                "name": "portainer",
                "servers": [],
                "buses": [],
                "image_full": "./portainer",
                "monitors": []
            },
            {
                "discos": [],
                "dbs": [],
                "image": "./mssql",
                "depends_on": [],
                "gates": [],
                "name": "mssql",
                "servers": [],
                "buses": [],
                "image_full": "./mssql",
                "monitors": []
            },
            {
                "discos": [],
                "dbs": [],
                "image": "./jenkins",
                "depends_on": [],
                "gates": [],
                "name": "jenkins",
                "servers": [],
                "buses": [],
                "image_full": "./jenkins",
                "monitors": []
            },
            {
                "discos": [],
                "dbs": [
                    "mysql"
                ],
                "image": "['SOLR_VERSION=${SOLR_VERSION}', 'SOLR_DATAIMPORTHANDLER_MYSQL=${SOLR_DATAIMPORTHANDLER_MYSQL}', 'SOLR_DATAIMPORTHANDLER_MSSQL=${SOLR_DATAIMPORTHANDLER_MSSQL}']",
                "depends_on": [],
                "gates": [],
                "name": "solr",
                "servers": [],
                "buses": [],
                "image_full": "['SOLR_VERSION=${SOLR_VERSION}', 'SOLR_DATAIMPORTHANDLER_MYSQL=${SOLR_DATAIMPORTHANDLER_MYSQL}', 'SOLR_DATAIMPORTHANDLER_MSSQL=${SOLR_DATAIMPORTHANDLER_MSSQL}']",
                "monitors": []
            },
            {
                "discos": [],
                "dbs": [
                    "aerospike"
                ],
                "image": "./aerospike",
                "depends_on": [],
                "gates": [],
                "name": "aerospike",
                "servers": [],
                "buses": [],
                "image_full": "./aerospike",
                "monitors": []
            },
            {
                "discos": [],
                "dbs": [],
                "image": "mailu/${MAILU_WEBDAV}",
                "depends_on": [],
                "gates": [],
                "name": "mailu-webdav",
                "servers": [],
                "buses": [],
                "image_full": "mailu/${MAILU_WEBDAV}:${MAILU_VERSION}",
                "monitors": []
            },
            {
                "discos": [],
                "dbs": [],
                "image": "['ELK_VERSION=${ELK_VERSION}']",
                "depends_on": [
                    "php-fpm"
                ],
                "gates": [],
                "name": "elasticsearch",
                "servers": [],
                "buses": [],
                "image_full": "['ELK_VERSION=${ELK_VERSION}']",
                "monitors": [
                    "elk"
                ]
            },
            {
                "discos": [],
                "dbs": [],
                "image": "titpetric/netdata",
                "depends_on": [],
                "gates": [],
                "name": "netdata",
                "servers": [],
                "buses": [],
                "image_full": "titpetric/netdata:latest",
                "monitors": []
            },
            {
                "discos": [],
                "dbs": [
                    "redis"
                ],
                "image": "./redis",
                "depends_on": [],
                "gates": [],
                "name": "redis",
                "servers": [],
                "buses": [],
                "image_full": "./redis",
                "monitors": []
            },
            {
                "discos": [],
                "dbs": [
                    "percona"
                ],
                "image": "./percona",
                "depends_on": [],
                "gates": [],
                "name": "percona",
                "servers": [],
                "buses": [],
                "image_full": "./percona",
                "monitors": []
            },
            {
                "discos": [],
                "dbs": [],
                "image": "tomcat",
                "depends_on": [],
                "gates": [],
                "name": "tomcat",
                "servers": [
                    "tomcat"
                ],
                "buses": [],
                "image_full": "tomcat:${TOMCAT_VERSION}",
                "monitors": []
            },
            {
                "discos": [],
                "dbs": [],
                "image": "mailu/fetchmail",
                "depends_on": [],
                "gates": [],
                "name": "mailu-fetchmail",
                "servers": [],
                "buses": [],
                "image_full": "mailu/fetchmail:${MAILU_VERSION}",
                "monitors": []
            },
            {
                "discos": [],
                "dbs": [],
                "image": "./hhvm",
                "depends_on": [
                    "workspace"
                ],
                "gates": [],
                "name": "hhvm",
                "servers": [],
                "buses": [],
                "image_full": "./hhvm",
                "monitors": []
            },
            {
                "discos": [],
                "dbs": [],
                "image": "dpage/pgadmin4",
                "depends_on": [
                    "postgres"
                ],
                "gates": [],
                "name": "pgadmin",
                "servers": [],
                "buses": [],
                "image_full": "dpage/pgadmin4:latest",
                "monitors": []
            },
            {
                "discos": [],
                "dbs": [
                    "mongo"
                ],
                "image": "./mongo",
                "depends_on": [],
                "gates": [],
                "name": "mongo",
                "servers": [],
                "buses": [],
                "image_full": "./mongo",
                "monitors": []
            },
            {
                "discos": [],
                "dbs": [],
                "image": "./ide-icecoder",
                "depends_on": [],
                "gates": [],
                "name": "ide-icecoder",
                "servers": [],
                "buses": [],
                "image_full": "./ide-icecoder",
                "monitors": []
            },
            {
                "discos": [],
                "dbs": [],
                "image": "./neo4j",
                "depends_on": [],
                "gates": [],
                "name": "neo4j",
                "servers": [],
                "buses": [],
                "image_full": "./neo4j",
                "monitors": []
            },
            {
                "discos": [],
                "dbs": [],
                "image": "./caddy",
                "depends_on": [
                    "php-fpm"
                ],
                "gates": [],
                "name": "caddy",
                "servers": [
                    "caddy"
                ],
                "buses": [],
                "image_full": "./caddy",
                "monitors": []
            },
            {
                "discos": [
                    "envoy"
                ],
                "dbs": [
                    "mongo"
                ],
                "image": "['CHANGE_SOURCE=${CHANGE_SOURCE}', 'SHELL_OH_MY_ZSH=${SHELL_OH_MY_ZSH}', 'UBUNTU_SOURCE=${UBUNTU_SOURCE}', 'BASE_IMAGE_TAG_PREFIX=${WORKSPACE_BASE_IMAGE_TAG_PREFIX}', 'LARADOCK_PHP_VERSION=${PHP_VERSION}', 'LARADOCK_PHALCON_VERSION=${PHALCON_VERSION}', 'INSTALL_SUBVERSION=${WORKSPACE_INSTALL_SUBVERSION}', 'INSTALL_BZ2=${WORKSPACE_INSTALL_BZ2}', 'INSTALL_GMP=${WORKSPACE_INSTALL_GMP}', 'INSTALL_XDEBUG=${WORKSPACE_INSTALL_XDEBUG}', 'INSTALL_PCOV=${WORKSPACE_INSTALL_PCOV}', 'INSTALL_PHPDBG=${WORKSPACE_INSTALL_PHPDBG}', 'INSTALL_BLACKFIRE=${INSTALL_BLACKFIRE}', 'INSTALL_SSH2=${WORKSPACE_INSTALL_SSH2}', 'INSTALL_SOAP=${WORKSPACE_INSTALL_SOAP}', 'INSTALL_XSL=${WORKSPACE_INSTALL_XSL}', 'INSTALL_LDAP=${WORKSPACE_INSTALL_LDAP}', 'INSTALL_SMB=${WORKSPACE_INSTALL_SMB}', 'INSTALL_IMAP=${WORKSPACE_INSTALL_IMAP}', 'INSTALL_MONGO=${WORKSPACE_INSTALL_MONGO}', 'INSTALL_AMQP=${WORKSPACE_INSTALL_AMQP}', 'INSTALL_CASSANDRA=${WORKSPACE_INSTALL_CASSANDRA}', 'INSTALL_GEARMAN=${WORKSPACE_INSTALL_GEARMAN}', 'INSTALL_PHPREDIS=${WORKSPACE_INSTALL_PHPREDIS}', 'INSTALL_MSSQL=${WORKSPACE_INSTALL_MSSQL}', 'NVM_NODEJS_ORG_MIRROR=${WORKSPACE_NVM_NODEJS_ORG_MIRROR}', 'INSTALL_NODE=${WORKSPACE_INSTALL_NODE}', 'NPM_REGISTRY=${WORKSPACE_NPM_REGISTRY}', 'INSTALL_YARN=${WORKSPACE_INSTALL_YARN}', 'INSTALL_NPM_GULP=${WORKSPACE_INSTALL_NPM_GULP}', 'INSTALL_NPM_BOWER=${WORKSPACE_INSTALL_NPM_BOWER}', 'INSTALL_NPM_VUE_CLI=${WORKSPACE_INSTALL_NPM_VUE_CLI}', 'INSTALL_NPM_ANGULAR_CLI=${WORKSPACE_INSTALL_NPM_ANGULAR_CLI}', 'INSTALL_DRUSH=${WORKSPACE_INSTALL_DRUSH}', 'INSTALL_WP_CLI=${WORKSPACE_INSTALL_WP_CLI}', 'INSTALL_DRUPAL_CONSOLE=${WORKSPACE_INSTALL_DRUPAL_CONSOLE}', 'INSTALL_AEROSPIKE=${WORKSPACE_INSTALL_AEROSPIKE}', 'INSTALL_OCI8=${WORKSPACE_INSTALL_OCI8}', 'INSTALL_V8JS=${WORKSPACE_INSTALL_V8JS}', 'COMPOSER_GLOBAL_INSTALL=${WORKSPACE_COMPOSER_GLOBAL_INSTALL}', 'COMPOSER_AUTH=${WORKSPACE_COMPOSER_AUTH}', 'COMPOSER_REPO_PACKAGIST=${WORKSPACE_COMPOSER_REPO_PACKAGIST}', 'INSTALL_WORKSPACE_SSH=${WORKSPACE_INSTALL_WORKSPACE_SSH}', 'INSTALL_LARAVEL_ENVOY=${WORKSPACE_INSTALL_LARAVEL_ENVOY}', 'INSTALL_LARAVEL_INSTALLER=${WORKSPACE_INSTALL_LARAVEL_INSTALLER}', 'INSTALL_DEPLOYER=${WORKSPACE_INSTALL_DEPLOYER}', 'INSTALL_PRESTISSIMO=${WORKSPACE_INSTALL_PRESTISSIMO}', 'INSTALL_LINUXBREW=${WORKSPACE_INSTALL_LINUXBREW}', 'INSTALL_MC=${WORKSPACE_INSTALL_MC}', 'INSTALL_SYMFONY=${WORKSPACE_INSTALL_SYMFONY}', 'INSTALL_PYTHON=${WORKSPACE_INSTALL_PYTHON}', 'INSTALL_IMAGE_OPTIMIZERS=${WORKSPACE_INSTALL_IMAGE_OPTIMIZERS}', 'INSTALL_IMAGEMAGICK=${WORKSPACE_INSTALL_IMAGEMAGICK}', 'INSTALL_TERRAFORM=${WORKSPACE_INSTALL_TERRAFORM}', 'INSTALL_DUSK_DEPS=${WORKSPACE_INSTALL_DUSK_DEPS}', 'INSTALL_PG_CLIENT=${WORKSPACE_INSTALL_PG_CLIENT}', 'INSTALL_PHALCON=${WORKSPACE_INSTALL_PHALCON}', 'INSTALL_SWOOLE=${WORKSPACE_INSTALL_SWOOLE}', 'INSTALL_TAINT=${WORKSPACE_INSTALL_TAINT}', 'INSTALL_LIBPNG=${WORKSPACE_INSTALL_LIBPNG}', 'INSTALL_IONCUBE=${WORKSPACE_INSTALL_IONCUBE}', 'INSTALL_MYSQL_CLIENT=${WORKSPACE_INSTALL_MYSQL_CLIENT}', 'INSTALL_PING=${WORKSPACE_INSTALL_PING}', 'INSTALL_SSHPASS=${WORKSPACE_INSTALL_SSHPASS}', 'INSTALL_INOTIFY=${WORKSPACE_INSTALL_INOTIFY}', 'INSTALL_FSWATCH=${WORKSPACE_INSTALL_FSWATCH}', 'INSTALL_AST=${WORKSPACE_INSTALL_AST}', 'INSTALL_YAML=${WORKSPACE_INSTALL_YAML}', 'INSTALL_MAILPARSE=${WORKSPACE_INSTALL_MAILPARSE}', 'INSTALL_GIT_PROMPT=${WORKSPACE_INSTALL_GIT_PROMPT}', 'PUID=${WORKSPACE_PUID}', 'PGID=${WORKSPACE_PGID}', 'CHROME_DRIVER_VERSION=${WORKSPACE_CHROME_DRIVER_VERSION}', 'NODE_VERSION=${WORKSPACE_NODE_VERSION}', 'YARN_VERSION=${WORKSPACE_YARN_VERSION}', 'DRUSH_VERSION=${WORKSPACE_DRUSH_VERSION}', 'AST_VERSION=${WORKSPACE_AST_VERSION}', 'TZ=${WORKSPACE_TIMEZONE}', 'BLACKFIRE_CLIENT_ID=${BLACKFIRE_CLIENT_ID}', 'BLACKFIRE_CLIENT_TOKEN=${BLACKFIRE_CLIENT_TOKEN}', 'INSTALL_POWERLINE=${WORKSPACE_INSTALL_POWERLINE}', 'INSTALL_SUPERVISOR=${WORKSPACE_INSTALL_SUPERVISOR}', 'INSTALL_FFMPEG=${WORKSPACE_INSTALL_FFMPEG}', 'INSTALL_WKHTMLTOPDF=${WORKSPACE_INSTALL_WKHTMLTOPDF}', 'INSTALL_GNU_PARALLEL=${WORKSPACE_INSTALL_GNU_PARALLEL}', 'http_proxy', 'https_proxy', 'no_proxy']",
                "depends_on": [
                    "docker-in-docker"
                ],
                "gates": [],
                "name": "workspace",
                "servers": [
                    "node"
                ],
                "buses": [
                    "amqp"
                ],
                "image_full": "['CHANGE_SOURCE=${CHANGE_SOURCE}', 'SHELL_OH_MY_ZSH=${SHELL_OH_MY_ZSH}', 'UBUNTU_SOURCE=${UBUNTU_SOURCE}', 'BASE_IMAGE_TAG_PREFIX=${WORKSPACE_BASE_IMAGE_TAG_PREFIX}', 'LARADOCK_PHP_VERSION=${PHP_VERSION}', 'LARADOCK_PHALCON_VERSION=${PHALCON_VERSION}', 'INSTALL_SUBVERSION=${WORKSPACE_INSTALL_SUBVERSION}', 'INSTALL_BZ2=${WORKSPACE_INSTALL_BZ2}', 'INSTALL_GMP=${WORKSPACE_INSTALL_GMP}', 'INSTALL_XDEBUG=${WORKSPACE_INSTALL_XDEBUG}', 'INSTALL_PCOV=${WORKSPACE_INSTALL_PCOV}', 'INSTALL_PHPDBG=${WORKSPACE_INSTALL_PHPDBG}', 'INSTALL_BLACKFIRE=${INSTALL_BLACKFIRE}', 'INSTALL_SSH2=${WORKSPACE_INSTALL_SSH2}', 'INSTALL_SOAP=${WORKSPACE_INSTALL_SOAP}', 'INSTALL_XSL=${WORKSPACE_INSTALL_XSL}', 'INSTALL_LDAP=${WORKSPACE_INSTALL_LDAP}', 'INSTALL_SMB=${WORKSPACE_INSTALL_SMB}', 'INSTALL_IMAP=${WORKSPACE_INSTALL_IMAP}', 'INSTALL_MONGO=${WORKSPACE_INSTALL_MONGO}', 'INSTALL_AMQP=${WORKSPACE_INSTALL_AMQP}', 'INSTALL_CASSANDRA=${WORKSPACE_INSTALL_CASSANDRA}', 'INSTALL_GEARMAN=${WORKSPACE_INSTALL_GEARMAN}', 'INSTALL_PHPREDIS=${WORKSPACE_INSTALL_PHPREDIS}', 'INSTALL_MSSQL=${WORKSPACE_INSTALL_MSSQL}', 'NVM_NODEJS_ORG_MIRROR=${WORKSPACE_NVM_NODEJS_ORG_MIRROR}', 'INSTALL_NODE=${WORKSPACE_INSTALL_NODE}', 'NPM_REGISTRY=${WORKSPACE_NPM_REGISTRY}', 'INSTALL_YARN=${WORKSPACE_INSTALL_YARN}', 'INSTALL_NPM_GULP=${WORKSPACE_INSTALL_NPM_GULP}', 'INSTALL_NPM_BOWER=${WORKSPACE_INSTALL_NPM_BOWER}', 'INSTALL_NPM_VUE_CLI=${WORKSPACE_INSTALL_NPM_VUE_CLI}', 'INSTALL_NPM_ANGULAR_CLI=${WORKSPACE_INSTALL_NPM_ANGULAR_CLI}', 'INSTALL_DRUSH=${WORKSPACE_INSTALL_DRUSH}', 'INSTALL_WP_CLI=${WORKSPACE_INSTALL_WP_CLI}', 'INSTALL_DRUPAL_CONSOLE=${WORKSPACE_INSTALL_DRUPAL_CONSOLE}', 'INSTALL_AEROSPIKE=${WORKSPACE_INSTALL_AEROSPIKE}', 'INSTALL_OCI8=${WORKSPACE_INSTALL_OCI8}', 'INSTALL_V8JS=${WORKSPACE_INSTALL_V8JS}', 'COMPOSER_GLOBAL_INSTALL=${WORKSPACE_COMPOSER_GLOBAL_INSTALL}', 'COMPOSER_AUTH=${WORKSPACE_COMPOSER_AUTH}', 'COMPOSER_REPO_PACKAGIST=${WORKSPACE_COMPOSER_REPO_PACKAGIST}', 'INSTALL_WORKSPACE_SSH=${WORKSPACE_INSTALL_WORKSPACE_SSH}', 'INSTALL_LARAVEL_ENVOY=${WORKSPACE_INSTALL_LARAVEL_ENVOY}', 'INSTALL_LARAVEL_INSTALLER=${WORKSPACE_INSTALL_LARAVEL_INSTALLER}', 'INSTALL_DEPLOYER=${WORKSPACE_INSTALL_DEPLOYER}', 'INSTALL_PRESTISSIMO=${WORKSPACE_INSTALL_PRESTISSIMO}', 'INSTALL_LINUXBREW=${WORKSPACE_INSTALL_LINUXBREW}', 'INSTALL_MC=${WORKSPACE_INSTALL_MC}', 'INSTALL_SYMFONY=${WORKSPACE_INSTALL_SYMFONY}', 'INSTALL_PYTHON=${WORKSPACE_INSTALL_PYTHON}', 'INSTALL_IMAGE_OPTIMIZERS=${WORKSPACE_INSTALL_IMAGE_OPTIMIZERS}', 'INSTALL_IMAGEMAGICK=${WORKSPACE_INSTALL_IMAGEMAGICK}', 'INSTALL_TERRAFORM=${WORKSPACE_INSTALL_TERRAFORM}', 'INSTALL_DUSK_DEPS=${WORKSPACE_INSTALL_DUSK_DEPS}', 'INSTALL_PG_CLIENT=${WORKSPACE_INSTALL_PG_CLIENT}', 'INSTALL_PHALCON=${WORKSPACE_INSTALL_PHALCON}', 'INSTALL_SWOOLE=${WORKSPACE_INSTALL_SWOOLE}', 'INSTALL_TAINT=${WORKSPACE_INSTALL_TAINT}', 'INSTALL_LIBPNG=${WORKSPACE_INSTALL_LIBPNG}', 'INSTALL_IONCUBE=${WORKSPACE_INSTALL_IONCUBE}', 'INSTALL_MYSQL_CLIENT=${WORKSPACE_INSTALL_MYSQL_CLIENT}', 'INSTALL_PING=${WORKSPACE_INSTALL_PING}', 'INSTALL_SSHPASS=${WORKSPACE_INSTALL_SSHPASS}', 'INSTALL_INOTIFY=${WORKSPACE_INSTALL_INOTIFY}', 'INSTALL_FSWATCH=${WORKSPACE_INSTALL_FSWATCH}', 'INSTALL_AST=${WORKSPACE_INSTALL_AST}', 'INSTALL_YAML=${WORKSPACE_INSTALL_YAML}', 'INSTALL_MAILPARSE=${WORKSPACE_INSTALL_MAILPARSE}', 'INSTALL_GIT_PROMPT=${WORKSPACE_INSTALL_GIT_PROMPT}', 'PUID=${WORKSPACE_PUID}', 'PGID=${WORKSPACE_PGID}', 'CHROME_DRIVER_VERSION=${WORKSPACE_CHROME_DRIVER_VERSION}', 'NODE_VERSION=${WORKSPACE_NODE_VERSION}', 'YARN_VERSION=${WORKSPACE_YARN_VERSION}', 'DRUSH_VERSION=${WORKSPACE_DRUSH_VERSION}', 'AST_VERSION=${WORKSPACE_AST_VERSION}', 'TZ=${WORKSPACE_TIMEZONE}', 'BLACKFIRE_CLIENT_ID=${BLACKFIRE_CLIENT_ID}', 'BLACKFIRE_CLIENT_TOKEN=${BLACKFIRE_CLIENT_TOKEN}', 'INSTALL_POWERLINE=${WORKSPACE_INSTALL_POWERLINE}', 'INSTALL_SUPERVISOR=${WORKSPACE_INSTALL_SUPERVISOR}', 'INSTALL_FFMPEG=${WORKSPACE_INSTALL_FFMPEG}', 'INSTALL_WKHTMLTOPDF=${WORKSPACE_INSTALL_WKHTMLTOPDF}', 'INSTALL_GNU_PARALLEL=${WORKSPACE_INSTALL_GNU_PARALLEL}', 'http_proxy', 'https_proxy', 'no_proxy']",
                "monitors": []
            },
            {
                "discos": [],
                "dbs": [],
                "image": "docker",
                "depends_on": [],
                "gates": [],
                "name": "docker-in-docker",
                "servers": [],
                "buses": [],
                "image_full": "docker:19.03-dind",
                "monitors": []
            },
            {
                "discos": [],
                "dbs": [],
                "image": "./varnish",
                "depends_on": [
                    "workspace"
                ],
                "gates": [],
                "name": "proxy",
                "servers": [],
                "buses": [],
                "image_full": "./varnish",
                "monitors": []
            },
            {
                "discos": [],
                "dbs": [
                    "mysql"
                ],
                "image": "['MYSQL_VERSION=${MYSQL_VERSION}']",
                "depends_on": [],
                "gates": [],
                "name": "mysql",
                "servers": [],
                "buses": [],
                "image_full": "['MYSQL_VERSION=${MYSQL_VERSION}']",
                "monitors": []
            },
            {
                "discos": [],
                "dbs": [],
                "image": "['INSTALL_MSSQL=${ADM_INSTALL_MSSQL}']",
                "depends_on": [
                    "php-fpm"
                ],
                "gates": [],
                "name": "adminer",
                "servers": [],
                "buses": [],
                "image_full": "['INSTALL_MSSQL=${ADM_INSTALL_MSSQL}']",
                "monitors": []
            },
            {
                "discos": [],
                "dbs": [],
                "image": "./mosquitto",
                "depends_on": [],
                "gates": [],
                "name": "mosquitto",
                "servers": [],
                "buses": [
                    "mosquitto"
                ],
                "image_full": "./mosquitto",
                "monitors": []
            },
            {
                "discos": [],
                "dbs": [],
                "image": "mailu/admin",
                "depends_on": [
                    "mailu-front",
                    "mailu-imap",
                    "mailu-smtp",
                    "mailu-antispam",
                    "mailu-antivirus",
                    "mailu-webdav",
                    "mailu-admin",
                    "mailu-webmail",
                    "mailu-fetchmail"
                ],
                "gates": [],
                "name": "mailu",
                "servers": [],
                "buses": [],
                "image_full": "mailu/admin:${MAILU_VERSION}",
                "monitors": []
            },
            {
                "discos": [],
                "dbs": [],
                "image": "./jupyterhub",
                "depends_on": [],
                "gates": [],
                "name": "jupyterhub-user",
                "servers": [],
                "buses": [],
                "image_full": "./jupyterhub",
                "monitors": []
            },
            {
                "discos": [],
                "dbs": [],
                "image": "['CHANGE_SOURCE=${CHANGE_SOURCE}', 'PHP_UPSTREAM_CONTAINER=${NGINX_PHP_UPSTREAM_CONTAINER}', 'PHP_UPSTREAM_PORT=${NGINX_PHP_UPSTREAM_PORT}', 'http_proxy', 'https_proxy', 'no_proxy']",
                "depends_on": [
                    "php-fpm"
                ],
                "gates": [
                    "nginx"
                ],
                "name": "nginx",
                "servers": [],
                "buses": [],
                "image_full": "['CHANGE_SOURCE=${CHANGE_SOURCE}', 'PHP_UPSTREAM_CONTAINER=${NGINX_PHP_UPSTREAM_CONTAINER}', 'PHP_UPSTREAM_PORT=${NGINX_PHP_UPSTREAM_PORT}', 'http_proxy', 'https_proxy', 'no_proxy']",
                "monitors": []
            },
            {
                "discos": [],
                "dbs": [],
                "image": "mailu/postfix",
                "depends_on": [
                    "mailu-front"
                ],
                "gates": [],
                "name": "mailu-smtp",
                "servers": [],
                "buses": [],
                "image_full": "mailu/postfix:${MAILU_VERSION}",
                "monitors": []
            },
            {
                "discos": [],
                "dbs": [],
                "image": "['PHP_UPSTREAM_CONTAINER=${APACHE_PHP_UPSTREAM_CONTAINER}', 'PHP_UPSTREAM_PORT=${APACHE_PHP_UPSTREAM_PORT}', 'PHP_UPSTREAM_TIMEOUT=${APACHE_PHP_UPSTREAM_TIMEOUT}', 'DOCUMENT_ROOT=${APACHE_DOCUMENT_ROOT}']",
                "depends_on": [
                    "php-fpm"
                ],
                "gates": [],
                "name": "apache2",
                "servers": [],
                "buses": [],
                "image_full": "['PHP_UPSTREAM_CONTAINER=${APACHE_PHP_UPSTREAM_CONTAINER}', 'PHP_UPSTREAM_PORT=${APACHE_PHP_UPSTREAM_PORT}', 'PHP_UPSTREAM_TIMEOUT=${APACHE_PHP_UPSTREAM_TIMEOUT}', 'DOCUMENT_ROOT=${APACHE_DOCUMENT_ROOT}']",
                "monitors": []
            },
            {
                "discos": [],
                "dbs": [],
                "image": "mailu/${MAILU_WEBMAIL}",
                "depends_on": [],
                "gates": [],
                "name": "mailu-webmail",
                "servers": [],
                "buses": [],
                "image_full": "mailu/${MAILU_WEBMAIL}:${MAILU_VERSION}",
                "monitors": []
            },
            {
                "discos": [],
                "dbs": [],
                "image": "./postgres-postgis",
                "depends_on": [],
                "gates": [],
                "name": "postgres-postgis",
                "servers": [],
                "buses": [],
                "image_full": "./postgres-postgis",
                "monitors": []
            },
            {
                "discos": [],
                "dbs": [
                    "memcached"
                ],
                "image": "./memcached",
                "depends_on": [
                    "php-fpm"
                ],
                "gates": [],
                "name": "memcached",
                "servers": [],
                "buses": [],
                "image_full": "./memcached",
                "monitors": []
            },
            {
                "discos": [],
                "dbs": [],
                "image": "metabase/metabase",
                "depends_on": [],
                "gates": [],
                "name": "metabase",
                "servers": [],
                "buses": [],
                "image_full": "metabase/metabase:latest",
                "monitors": []
            },
            {
                "discos": [],
                "dbs": [],
                "image": "./ide-theia",
                "depends_on": [],
                "gates": [],
                "name": "ide-theia",
                "servers": [],
                "buses": [],
                "image_full": "./ide-theia",
                "monitors": []
            },
            {
                "discos": [],
                "dbs": [
                    "redis"
                ],
                "image": "./redis-cluster",
                "depends_on": [],
                "gates": [],
                "name": "redis-cluster",
                "servers": [],
                "buses": [],
                "image_full": "./redis-cluster",
                "monitors": []
            },
            {
                "discos": [],
                "dbs": [],
                "image": "mailu/dovecot",
                "depends_on": [
                    "mailu-front"
                ],
                "gates": [],
                "name": "mailu-imap",
                "servers": [],
                "buses": [],
                "image_full": "mailu/dovecot:${MAILU_VERSION}",
                "monitors": []
            },
            {
                "discos": [],
                "dbs": [],
                "image": "./ipython",
                "depends_on": [],
                "gates": [],
                "name": "ipython-controller",
                "servers": [],
                "buses": [],
                "image_full": "./ipython",
                "monitors": []
            },
            {
                "discos": [],
                "dbs": [],
                "image": "./ide-webide",
                "depends_on": [],
                "gates": [],
                "name": "ide-webide",
                "servers": [],
                "buses": [],
                "image_full": "./ide-webide",
                "monitors": []
            },
            {
                "discos": [],
                "dbs": [
                    "mysql"
                ],
                "image": "['CHANGE_SOURCE=${CHANGE_SOURCE}', 'LARADOCK_PHP_VERSION=${PHP_VERSION}', 'PHALCON_VERSION=${PHALCON_VERSION}', 'INSTALL_BZ2=${PHP_WORKER_INSTALL_BZ2}', 'INSTALL_GD=${PHP_WORKER_INSTALL_GD}', 'INSTALL_GMP=${PHP_WORKER_INSTALL_GMP}', 'INSTALL_PGSQL=${PHP_WORKER_INSTALL_PGSQL}', 'INSTALL_BCMATH=${PHP_WORKER_INSTALL_BCMATH}', 'INSTALL_PHALCON=${PHP_WORKER_INSTALL_PHALCON}', 'INSTALL_SOAP=${PHP_WORKER_INSTALL_SOAP}', 'INSTALL_ZIP_ARCHIVE=${PHP_WORKER_INSTALL_ZIP_ARCHIVE}', 'INSTALL_MYSQL_CLIENT=${PHP_WORKER_INSTALL_MYSQL_CLIENT}', 'INSTALL_AMQP=${PHP_WORKER_INSTALL_AMQP}', 'INSTALL_CASSANDRA=${PHP_WORKER_INSTALL_CASSANDRA}', 'INSTALL_GEARMAN=${PHP_WORKER_INSTALL_GEARMAN}', 'INSTALL_GHOSTSCRIPT=${PHP_WORKER_INSTALL_GHOSTSCRIPT}', 'INSTALL_SWOOLE=${PHP_WORKER_INSTALL_SWOOLE}', 'INSTALL_TAINT=${PHP_WORKER_INSTALL_TAINT}', 'INSTALL_FFMPEG=${PHP_WORKER_INSTALL_FFMPEG}', 'INSTALL_REDIS=${PHP_WORKER_INSTALL_REDIS}', 'PUID=${PHP_WORKER_PUID}', 'PGID=${PHP_WORKER_PGID}']",
                "depends_on": [
                    "workspace"
                ],
                "gates": [],
                "name": "php-worker",
                "servers": [],
                "buses": [
                    "amqp"
                ],
                "image_full": "['CHANGE_SOURCE=${CHANGE_SOURCE}', 'LARADOCK_PHP_VERSION=${PHP_VERSION}', 'PHALCON_VERSION=${PHALCON_VERSION}', 'INSTALL_BZ2=${PHP_WORKER_INSTALL_BZ2}', 'INSTALL_GD=${PHP_WORKER_INSTALL_GD}', 'INSTALL_GMP=${PHP_WORKER_INSTALL_GMP}', 'INSTALL_PGSQL=${PHP_WORKER_INSTALL_PGSQL}', 'INSTALL_BCMATH=${PHP_WORKER_INSTALL_BCMATH}', 'INSTALL_PHALCON=${PHP_WORKER_INSTALL_PHALCON}', 'INSTALL_SOAP=${PHP_WORKER_INSTALL_SOAP}', 'INSTALL_ZIP_ARCHIVE=${PHP_WORKER_INSTALL_ZIP_ARCHIVE}', 'INSTALL_MYSQL_CLIENT=${PHP_WORKER_INSTALL_MYSQL_CLIENT}', 'INSTALL_AMQP=${PHP_WORKER_INSTALL_AMQP}', 'INSTALL_CASSANDRA=${PHP_WORKER_INSTALL_CASSANDRA}', 'INSTALL_GEARMAN=${PHP_WORKER_INSTALL_GEARMAN}', 'INSTALL_GHOSTSCRIPT=${PHP_WORKER_INSTALL_GHOSTSCRIPT}', 'INSTALL_SWOOLE=${PHP_WORKER_INSTALL_SWOOLE}', 'INSTALL_TAINT=${PHP_WORKER_INSTALL_TAINT}', 'INSTALL_FFMPEG=${PHP_WORKER_INSTALL_FFMPEG}', 'INSTALL_REDIS=${PHP_WORKER_INSTALL_REDIS}', 'PUID=${PHP_WORKER_PUID}', 'PGID=${PHP_WORKER_PGID}']",
                "monitors": []
            },
            {
                "discos": [],
                "dbs": [],
                "image": "atlassian/confluence-server",
                "depends_on": [
                    "postgres"
                ],
                "gates": [],
                "name": "confluence",
                "servers": [],
                "buses": [],
                "image_full": "atlassian/confluence-server:${CONFLUENCE_VERSION}",
                "monitors": []
            },
            {
                "discos": [],
                "dbs": [],
                "image": "./ipython",
                "depends_on": [],
                "gates": [],
                "name": "ipython-engine",
                "servers": [],
                "buses": [],
                "image_full": "./ipython",
                "monitors": []
            },
            {
                "discos": [],
                "dbs": [],
                "image": "gitlab/gitlab-runner",
                "depends_on": [],
                "gates": [],
                "name": "gitlab-runner",
                "servers": [],
                "buses": [],
                "image_full": "gitlab/gitlab-runner:latest",
                "monitors": []
            },
            {
                "discos": [],
                "dbs": [],
                "image": "./phpmyadmin",
                "depends_on": [
                    "${PMA_DB_ENGINE}"
                ],
                "gates": [],
                "name": "phpmyadmin",
                "servers": [],
                "buses": [],
                "image_full": "./phpmyadmin",
                "monitors": []
            },
            {
                "discos": [],
                "dbs": [
                    "memcached"
                ],
                "image": "['CHANGE_SOURCE=${CHANGE_SOURCE}', 'LARADOCK_PHP_VERSION=${PHP_VERSION}', 'INSTALL_BZ2=${LARAVEL_HORIZON_INSTALL_BZ2}', 'INSTALL_GD=${LARAVEL_HORIZON_INSTALL_GD}', 'INSTALL_GMP=${LARAVEL_HORIZON_INSTALL_GMP}', 'INSTALL_PGSQL=${PHP_FPM_INSTALL_PGSQL}', 'INSTALL_ZIP_ARCHIVE=${LARAVEL_HORIZON_INSTALL_ZIP_ARCHIVE}', 'INSTALL_BCMATH=${PHP_FPM_INSTALL_BCMATH}', 'INSTALL_MEMCACHED=${PHP_FPM_INSTALL_MEMCACHED}', 'INSTALL_SOCKETS=${LARAVEL_HORIZON_INSTALL_SOCKETS}', 'INSTALL_YAML=${LARAVEL_HORIZON_INSTALL_YAML}', 'INSTALL_CASSANDRA=${PHP_FPM_INSTALL_CASSANDRA}', 'INSTALL_PHPREDIS=${LARAVEL_HORIZON_INSTALL_PHPREDIS}', 'INSTALL_MONGO=${LARAVEL_HORIZON_INSTALL_MONGO}', 'INSTALL_FFMPEG=${LARAVEL_HORIZON_INSTALL_FFMPEG}', 'PUID=${LARAVEL_HORIZON_PUID}', 'PGID=${LARAVEL_HORIZON_PGID}']",
                "depends_on": [
                    "workspace"
                ],
                "gates": [],
                "name": "laravel-horizon",
                "servers": [
                    "laravel"
                ],
                "buses": [],
                "image_full": "['CHANGE_SOURCE=${CHANGE_SOURCE}', 'LARADOCK_PHP_VERSION=${PHP_VERSION}', 'INSTALL_BZ2=${LARAVEL_HORIZON_INSTALL_BZ2}', 'INSTALL_GD=${LARAVEL_HORIZON_INSTALL_GD}', 'INSTALL_GMP=${LARAVEL_HORIZON_INSTALL_GMP}', 'INSTALL_PGSQL=${PHP_FPM_INSTALL_PGSQL}', 'INSTALL_ZIP_ARCHIVE=${LARAVEL_HORIZON_INSTALL_ZIP_ARCHIVE}', 'INSTALL_BCMATH=${PHP_FPM_INSTALL_BCMATH}', 'INSTALL_MEMCACHED=${PHP_FPM_INSTALL_MEMCACHED}', 'INSTALL_SOCKETS=${LARAVEL_HORIZON_INSTALL_SOCKETS}', 'INSTALL_YAML=${LARAVEL_HORIZON_INSTALL_YAML}', 'INSTALL_CASSANDRA=${PHP_FPM_INSTALL_CASSANDRA}', 'INSTALL_PHPREDIS=${LARAVEL_HORIZON_INSTALL_PHPREDIS}', 'INSTALL_MONGO=${LARAVEL_HORIZON_INSTALL_MONGO}', 'INSTALL_FFMPEG=${LARAVEL_HORIZON_INSTALL_FFMPEG}', 'PUID=${LARAVEL_HORIZON_PUID}', 'PGID=${LARAVEL_HORIZON_PGID}']",
                "monitors": []
            },
            {
                "discos": [],
                "dbs": [],
                "image": "['ELK_VERSION=${ELK_VERSION}']",
                "depends_on": [
                    "elasticsearch"
                ],
                "gates": [],
                "name": "logstash",
                "servers": [],
                "buses": [],
                "image_full": "['ELK_VERSION=${ELK_VERSION}']",
                "monitors": [
                    "elk"
                ]
            },
            {
                "discos": [],
                "dbs": [
                    "mariadb"
                ],
                "image": "['http_proxy', 'https_proxy', 'no_proxy', 'MARIADB_VERSION=${MARIADB_VERSION}']",
                "depends_on": [],
                "gates": [],
                "name": "mariadb",
                "servers": [],
                "buses": [],
                "image_full": "['http_proxy', 'https_proxy', 'no_proxy', 'MARIADB_VERSION=${MARIADB_VERSION}']",
                "monitors": []
            },
            {
                "discos": [],
                "dbs": [],
                "image": "./beanstalkd-console",
                "depends_on": [
                    "beanstalkd"
                ],
                "gates": [],
                "name": "beanstalkd-console",
                "servers": [],
                "buses": [],
                "image_full": "./beanstalkd-console",
                "monitors": []
            },
            {
                "discos": [],
                "dbs": [],
                "image": "./manticore",
                "depends_on": [],
                "gates": [],
                "name": "manticore",
                "servers": [],
                "buses": [],
                "image_full": "./manticore",
                "monitors": []
            },
            {
                "discos": [],
                "dbs": [
                    "cassandra"
                ],
                "image": "./cassandra",
                "depends_on": [
                    "php-fpm"
                ],
                "gates": [],
                "name": "cassandra",
                "servers": [],
                "buses": [],
                "image_full": "./cassandra",
                "monitors": []
            },
            {
                "discos": [],
                "dbs": [
                    "mongo"
                ],
                "image": "./mongo-webui",
                "depends_on": [
                    "mongo"
                ],
                "gates": [],
                "name": "mongo-webui",
                "servers": [],
                "buses": [],
                "image_full": "./mongo-webui",
                "monitors": []
            },
            {
                "discos": [],
                "dbs": [],
                "image": "./docker-registry",
                "depends_on": [],
                "gates": [],
                "name": "docker-registry",
                "servers": [],
                "buses": [],
                "image_full": "./docker-registry",
                "monitors": []
            },
            {
                "discos": [],
                "dbs": [
                    "rethinkdb"
                ],
                "image": "./rethinkdb",
                "depends_on": [],
                "gates": [],
                "name": "rethinkdb",
                "servers": [],
                "buses": [],
                "image_full": "./rethinkdb",
                "monitors": []
            },
            {
                "discos": [],
                "dbs": [],
                "image": "['POSTGRES_VERSION=${POSTGRES_VERSION}']",
                "depends_on": [],
                "gates": [],
                "name": "postgres",
                "servers": [],
                "buses": [],
                "image_full": "['POSTGRES_VERSION=${POSTGRES_VERSION}']",
                "monitors": []
            },
            {
                "discos": [],
                "dbs": [],
                "image": "./sonarqube",
                "depends_on": [
                    "postgres"
                ],
                "gates": [],
                "name": "sonarqube",
                "servers": [],
                "buses": [],
                "image_full": "./sonarqube",
                "monitors": []
            },
            {
                "discos": [],
                "dbs": [],
                "image": "./beanstalkd",
                "depends_on": [
                    "php-fpm"
                ],
                "gates": [],
                "name": "beanstalkd",
                "servers": [],
                "buses": [],
                "image_full": "./beanstalkd",
                "monitors": []
            },
            {
                "discos": [],
                "dbs": [],
                "image": "./docker-web-ui",
                "depends_on": [],
                "gates": [],
                "name": "docker-web-ui",
                "servers": [],
                "buses": [],
                "image_full": "./docker-web-ui",
                "monitors": []
            },
            {
                "discos": [],
                "dbs": [],
                "image": "./gearman",
                "depends_on": [
                    "php-fpm"
                ],
                "gates": [],
                "name": "gearman",
                "servers": [],
                "buses": [
                    "gearman"
                ],
                "image_full": "./gearman",
                "monitors": []
            },
            {
                "discos": [],
                "dbs": [],
                "image": "mailu/rspamd",
                "depends_on": [
                    "mailu-front"
                ],
                "gates": [],
                "name": "mailu-antispam",
                "servers": [],
                "buses": [],
                "image_full": "mailu/rspamd:${MAILU_VERSION}",
                "monitors": []
            }
        ],
        "path": "/docker-compose.yml"
    },
    "discos": [
        "envoy",
        "traefik",
        "zookeeper"
    ],
    "dockers": [
        {
            "from_full": "linuxserver/codiad",
            "langs": [],
            "cmd": "",
            "from": "linuxserver/codiad",
            "cmd_keywords": [],
            "buses": [],
            "keywords": [],
            "discos": [],
            "path": "/ide-codiad/Dockerfile",
            "gates": [],
            "dbs": [],
            "servers": [],
            "monitors": []
        },
        {
            "from_full": "openjdk:8-jdk",
            "langs": [
                "bash"
            ],
            "cmd": "",
            "from": "openjdk",
            "cmd_keywords": [],
            "buses": [],
            "keywords": [
                "jenkins",
                "docker",
                "apt",
                "bin",
                "curl"
            ],
            "discos": [],
            "path": "/jenkins/Dockerfile",
            "gates": [],
            "dbs": [],
            "servers": [],
            "monitors": []
        },
        {
            "from_full": "bats-jenkins",
            "langs": [],
            "cmd": "",
            "from": "bats-jenkins",
            "cmd_keywords": [],
            "buses": [],
            "keywords": [
                "maven",
                "plugin",
                "plugins",
                "local",
                "ant"
            ],
            "discos": [],
            "path": "/jenkins/tests/upgrade-plugins/Dockerfile",
            "gates": [],
            "dbs": [],
            "servers": [],
            "monitors": []
        },
        {
            "from_full": "bats-jenkins",
            "langs": [],
            "cmd": "",
            "from": "bats-jenkins",
            "cmd_keywords": [],
            "buses": [],
            "keywords": [
                "usr",
                "plugins",
                "ref",
                "share",
                "jenkins"
            ],
            "discos": [],
            "path": "/jenkins/tests/plugins/Dockerfile",
            "gates": [],
            "dbs": [],
            "servers": [],
            "monitors": []
        },
        {
            "from_full": "bats-jenkins",
            "langs": [],
            "cmd": "",
            "from": "bats-jenkins",
            "cmd_keywords": [],
            "buses": [],
            "keywords": [
                "mesos",
                "maven",
                "plugin",
                "plugins",
                "local"
            ],
            "discos": [],
            "path": "/jenkins/tests/install-plugins/Dockerfile",
            "gates": [],
            "dbs": [],
            "servers": [],
            "monitors": []
        },
        {
            "from_full": "bats-jenkins-install-plugins",
            "langs": [],
            "cmd": "",
            "from": "bats-jenkins-install-plugins",
            "cmd_keywords": [],
            "buses": [],
            "keywords": [
                "maven",
                "plugin",
                "plugins",
                "local",
                "ant"
            ],
            "discos": [],
            "path": "/jenkins/tests/install-plugins/update/Dockerfile",
            "gates": [],
            "dbs": [],
            "servers": [],
            "monitors": []
        },
        {
            "from_full": "grokzen/redis-cluster:latest",
            "langs": [],
            "cmd": "",
            "from": "grokzen/redis-cluster",
            "cmd_keywords": [],
            "buses": [],
            "keywords": [],
            "discos": [],
            "path": "/redis-cluster/Dockerfile",
            "gates": [],
            "dbs": [
                "redis"
            ],
            "servers": [],
            "monitors": []
        },
        {
            "from_full": "graylog/graylog:3.0",
            "langs": [],
            "cmd": "",
            "from": "graylog/graylog",
            "cmd_keywords": [],
            "buses": [],
            "keywords": [],
            "discos": [],
            "path": "/graylog/Dockerfile",
            "gates": [],
            "dbs": [],
            "servers": [],
            "monitors": []
        },
        {
            "from_full": "grafana/grafana:latest",
            "langs": [],
            "cmd": "",
            "from": "grafana/grafana",
            "cmd_keywords": [],
            "buses": [],
            "keywords": [],
            "discos": [],
            "path": "/grafana/Dockerfile",
            "gates": [],
            "dbs": [],
            "servers": [],
            "monitors": [
                "grafana"
            ]
        },
        {
            "from_full": "postgres:${POSTGRES_VERSION}",
            "langs": [],
            "cmd": "postgres",
            "from": "postgres",
            "cmd_keywords": [
                "postgres"
            ],
            "buses": [],
            "path": "/postgres/Dockerfile",
            "discos": [],
            "gates": [],
            "dbs": [],
            "keywords": [],
            "servers": [],
            "monitors": []
        },
        {
            "from_full": "dockercloud/haproxy:latest",
            "langs": [],
            "cmd": "",
            "from": "dockercloud/haproxy",
            "cmd_keywords": [],
            "buses": [],
            "keywords": [],
            "discos": [],
            "path": "/haproxy/Dockerfile",
            "gates": [],
            "dbs": [],
            "servers": [],
            "monitors": []
        },
        {
            "from_full": "selenium/standalone-chrome",
            "langs": [],
            "cmd": "",
            "from": "selenium/standalone-chrome",
            "cmd_keywords": [],
            "buses": [],
            "keywords": [],
            "discos": [],
            "path": "/selenium/Dockerfile",
            "gates": [],
            "dbs": [],
            "servers": [],
            "monitors": []
        },
        {
            "from_full": "apsl/thumbor",
            "langs": [],
            "cmd": "thumbor",
            "from": "apsl/thumbor",
            "cmd_keywords": [
                "thumbor"
            ],
            "buses": [],
            "keywords": [],
            "discos": [],
            "path": "/thumbor/Dockerfile",
            "gates": [],
            "dbs": [],
            "servers": [],
            "monitors": []
        },
        {
            "from_full": "memcached:latest",
            "langs": [],
            "cmd": "memcached",
            "from": "memcached",
            "cmd_keywords": [
                "memcached"
            ],
            "buses": [],
            "keywords": [],
            "discos": [],
            "path": "/memcached/Dockerfile",
            "gates": [],
            "dbs": [
                "memcached"
            ],
            "servers": [],
            "monitors": []
        },
        {
            "from_full": "portainer/portainer",
            "langs": [],
            "cmd": "",
            "from": "portainer/portainer",
            "cmd_keywords": [],
            "buses": [],
            "keywords": [],
            "discos": [],
            "path": "/portainer/Dockerfile",
            "gates": [],
            "dbs": [],
            "servers": [],
            "monitors": []
        },
        {
            "from_full": "mongo:latest",
            "langs": [],
            "cmd": "mongod",
            "from": "mongo",
            "cmd_keywords": [
                "mongod"
            ],
            "buses": [],
            "keywords": [],
            "discos": [],
            "path": "/mongo/Dockerfile",
            "gates": [],
            "dbs": [
                "mongo"
            ],
            "servers": [],
            "monitors": []
        },
        {
            "from_full": "registry:2",
            "langs": [],
            "cmd": "",
            "from": "registry",
            "cmd_keywords": [],
            "buses": [],
            "keywords": [],
            "discos": [],
            "path": "/docker-registry/Dockerfile",
            "gates": [],
            "dbs": [],
            "servers": [],
            "monitors": []
        },
        {
            "from_full": "gitlab/gitlab-ce:latest",
            "langs": [],
            "cmd": "",
            "from": "gitlab/gitlab-ce",
            "cmd_keywords": [],
            "buses": [],
            "keywords": [],
            "discos": [],
            "path": "/gitlab/Dockerfile",
            "gates": [],
            "dbs": [],
            "servers": [],
            "monitors": []
        },
        {
            "from_full": "eclipse-mosquitto:latest",
            "langs": [],
            "cmd": "",
            "from": "eclipse-mosquitto",
            "cmd_keywords": [],
            "buses": [
                "mosquitto"
            ],
            "keywords": [],
            "discos": [],
            "path": "/mosquitto/Dockerfile",
            "gates": [],
            "dbs": [],
            "servers": [],
            "monitors": []
        },
        {
            "from_full": "php:alpine",
            "langs": [
                "php"
            ],
            "cmd": "php -S 0.0.0.0:8080",
            "from": "php",
            "cmd_keywords": [
                "php"
            ],
            "buses": [],
            "keywords": [
                "laradock",
                "git",
                "https",
                "mattpass",
                "com"
            ],
            "discos": [],
            "path": "/ide-icecoder/Dockerfile",
            "gates": [],
            "dbs": [],
            "servers": [],
            "monitors": []
        },
        {
            "from_full": "nginx:alpine",
            "langs": [
                "bash"
            ],
            "cmd": "/bin/bash /opt/startup.sh",
            "from": "nginx",
            "cmd_keywords": [
                "opt",
                "startup",
                "bash",
                "bin"
            ],
            "buses": [],
            "keywords": [
                "apk",
                "upstream",
                "conf",
                "add",
                "etc"
            ],
            "discos": [],
            "path": "/nginx/Dockerfile",
            "gates": [
                "nginx"
            ],
            "dbs": [],
            "servers": [],
            "monitors": []
        },
        {
            "from_full": "artefactual/gearmand:${GEARMAN_VERSION}",
            "langs": [],
            "cmd": "",
            "from": "artefactual/gearmand",
            "cmd_keywords": [],
            "buses": [],
            "path": "/gearman/Dockerfile",
            "discos": [],
            "gates": [],
            "dbs": [],
            "keywords": [],
            "servers": [],
            "monitors": []
        },
        {
            "from_full": "zookeeper:latest",
            "langs": [],
            "cmd": "zkServer.sh start-foreground",
            "from": "zookeeper",
            "cmd_keywords": [
                "zkserver",
                "foreground",
                "start"
            ],
            "buses": [],
            "keywords": [],
            "discos": [
                "zookeeper"
            ],
            "path": "/zookeeper/Dockerfile",
            "gates": [],
            "dbs": [
                "zookeeper"
            ],
            "servers": [],
            "monitors": []
        },
        {
            "from_full": "php:${LARADOCK_PHP_VERSION}-alpine",
            "langs": [
                "php"
            ],
            "cmd": "",
            "from": "php",
            "cmd_keywords": [],
            "buses": [],
            "path": "/laravel-horizon/Dockerfile",
            "discos": [],
            "gates": [],
            "dbs": [
                "mysql"
            ],
            "keywords": [
                "php",
                "install",
                "docker",
                "dev",
                "ext"
            ],
            "servers": [],
            "monitors": []
        },
        {
            "from_full": "adminer:4",
            "langs": [
                "php"
            ],
            "cmd": "",
            "from": "adminer",
            "cmd_keywords": [],
            "buses": [],
            "keywords": [
                "apk",
                "deps",
                "add",
                "install",
                "cache"
            ],
            "discos": [],
            "path": "/adminer/Dockerfile",
            "gates": [],
            "dbs": [],
            "servers": [],
            "monitors": []
        },
        {
            "from_full": "percona:5.7",
            "langs": [],
            "cmd": "mysqld",
            "from": "percona",
            "cmd_keywords": [
                "mysqld"
            ],
            "buses": [],
            "keywords": [
                "mysql",
                "lib",
                "root",
                "chown",
                "var"
            ],
            "discos": [],
            "path": "/percona/Dockerfile",
            "gates": [],
            "dbs": [
                "percona"
            ],
            "servers": [],
            "monitors": []
        },
        {
            "from_full": "couchdb",
            "langs": [],
            "cmd": "",
            "from": "couchdb",
            "cmd_keywords": [],
            "buses": [],
            "keywords": [],
            "discos": [],
            "path": "/couchdb/Dockerfile",
            "gates": [],
            "dbs": [
                "couchdb"
            ],
            "servers": [],
            "monitors": []
        },
        {
            "from_full": "aerospike:latest",
            "langs": [],
            "cmd": "",
            "from": "aerospike",
            "cmd_keywords": [],
            "buses": [],
            "keywords": [],
            "discos": [],
            "path": "/aerospike/Dockerfile",
            "gates": [],
            "dbs": [
                "aerospike"
            ],
            "servers": [],
            "monitors": []
        },
        {
            "from_full": "php:${LARADOCK_PHP_VERSION}-alpine",
            "langs": [
                "php"
            ],
            "cmd": "",
            "from": "php",
            "cmd_keywords": [],
            "buses": [
                "amqp"
            ],
            "path": "/php-worker/Dockerfile",
            "discos": [],
            "gates": [],
            "dbs": [
                "mysql"
            ],
            "keywords": [
                "php",
                "install",
                "then",
                "ext",
                "true"
            ],
            "servers": [],
            "monitors": []
        },
        {
            "from_full": "sonarqube:latest",
            "langs": [],
            "cmd": "",
            "from": "sonarqube",
            "cmd_keywords": [],
            "buses": [],
            "keywords": [],
            "discos": [],
            "path": "/sonarqube/Dockerfile",
            "gates": [],
            "dbs": [],
            "servers": [],
            "monitors": []
        },
        {
            "from_full": "mysql:${MYSQL_VERSION}",
            "langs": [],
            "cmd": "mysqld",
            "from": "mysql",
            "cmd_keywords": [
                "mysqld"
            ],
            "buses": [],
            "path": "/mysql/Dockerfile",
            "discos": [],
            "gates": [],
            "dbs": [
                "mysql"
            ],
            "keywords": [
                "etc",
                "mysql",
                "timezone",
                "root",
                "usr"
            ],
            "servers": [],
            "monitors": []
        },
        {
            "from_full": "mariadb:${MARIADB_VERSION}",
            "langs": [],
            "cmd": "mysqld",
            "from": "mariadb",
            "cmd_keywords": [
                "mysqld"
            ],
            "buses": [],
            "path": "/mariadb/Dockerfile",
            "discos": [],
            "gates": [],
            "dbs": [
                "mariadb"
            ],
            "keywords": [
                "etc",
                "mysql",
                "timezone",
                "root",
                "usr"
            ],
            "servers": [],
            "monitors": []
        },
        {
            "from_full": "webide/webide",
            "langs": [],
            "cmd": "",
            "from": "webide/webide",
            "cmd_keywords": [],
            "buses": [],
            "keywords": [],
            "discos": [],
            "path": "/ide-webide/Dockerfile",
            "gates": [],
            "dbs": [],
            "servers": [],
            "monitors": []
        },
        {
            "from_full": "docker.elastic.co/logstash/logstash:${ELK_VERSION}",
            "langs": [
                "java"
            ],
            "cmd": "",
            "from": "docker.elastic.co/logstash/logstash",
            "cmd_keywords": [],
            "buses": [],
            "path": "/logstash/Dockerfile",
            "discos": [],
            "gates": [],
            "dbs": [
                "mysql"
            ],
            "keywords": [
                "logstash",
                "mysql",
                "connector",
                "java",
                "jar"
            ],
            "servers": [],
            "monitors": []
        },
        {
            "from_full": "redis:latest",
            "langs": [],
            "cmd": "redis-server",
            "from": "redis",
            "cmd_keywords": [
                "server",
                "redis"
            ],
            "buses": [],
            "keywords": [],
            "discos": [],
            "path": "/redis/Dockerfile",
            "gates": [],
            "dbs": [
                "redis"
            ],
            "servers": [],
            "monitors": []
        },
        {
            "from_full": "varnish:6.3",
            "langs": [],
            "cmd": "/etc/varnish/start.sh",
            "from": "varnish",
            "cmd_keywords": [
                "varnish",
                "etc",
                "start"
            ],
            "buses": [],
            "keywords": [
                "varnish",
                "etc",
                "start",
                "chmod"
            ],
            "discos": [],
            "path": "/varnish/Dockerfile",
            "gates": [],
            "dbs": [],
            "servers": [],
            "monitors": []
        },
        {
            "from_full": "mongoclient/mongoclient",
            "langs": [],
            "cmd": "",
            "from": "mongoclient/mongoclient",
            "cmd_keywords": [],
            "buses": [],
            "keywords": [],
            "discos": [],
            "path": "/mongo-webui/Dockerfile",
            "gates": [],
            "dbs": [],
            "servers": [],
            "monitors": []
        },
        {
            "from_full": "bitnami/cassandra:${CASSANDRA_VERSION}",
            "langs": [],
            "cmd": "",
            "from": "bitnami/cassandra",
            "cmd_keywords": [],
            "buses": [],
            "path": "/cassandra/Dockerfile",
            "discos": [],
            "gates": [],
            "dbs": [
                "cassandra"
            ],
            "keywords": [],
            "servers": [],
            "monitors": []
        },
        {
            "from_full": "ubuntu:14.04",
            "langs": [],
            "cmd": "/usr/bin/hhvm -m server -c /etc/hhvm/server.ini",
            "from": "ubuntu",
            "cmd_keywords": [
                "server",
                "hhvm",
                "etc",
                "usr",
                "ini"
            ],
            "buses": [],
            "keywords": [
                "apt",
                "get",
                "hhvm",
                "key",
                "com"
            ],
            "discos": [],
            "path": "/hhvm/Dockerfile",
            "gates": [],
            "dbs": [],
            "servers": [],
            "monitors": []
        },
        {
            "from_full": "tpires/neo4j",
            "langs": [],
            "cmd": "",
            "from": "tpires/neo4j",
            "cmd_keywords": [],
            "buses": [],
            "keywords": [],
            "discos": [],
            "path": "/neo4j/Dockerfile",
            "gates": [],
            "dbs": [],
            "servers": [],
            "monitors": []
        },
        {
            "from_full": "konradkleine/docker-registry-frontend:v2",
            "langs": [],
            "cmd": "",
            "from": "konradkleine/docker-registry-frontend",
            "cmd_keywords": [],
            "buses": [],
            "keywords": [],
            "discos": [],
            "path": "/docker-web-ui/Dockerfile",
            "gates": [],
            "dbs": [],
            "servers": [],
            "monitors": []
        },
        {
            "from_full": "docker.elastic.co/kibana/kibana:${ELK_VERSION}",
            "langs": [],
            "cmd": "",
            "from": "docker.elastic.co/kibana/kibana",
            "cmd_keywords": [],
            "buses": [],
            "path": "/kibana/Dockerfile",
            "discos": [],
            "gates": [],
            "dbs": [],
            "keywords": [],
            "servers": [],
            "monitors": []
        },
        {
            "from_full": "solr:${SOLR_VERSION}",
            "langs": [
                "java"
            ],
            "cmd": "",
            "from": "solr",
            "cmd_keywords": [],
            "buses": [],
            "path": "/solr/Dockerfile",
            "discos": [],
            "gates": [],
            "dbs": [
                "mysql"
            ],
            "keywords": [
                "mysql",
                "connector",
                "dataimporthandler",
                "mssql",
                "solr"
            ],
            "servers": [],
            "monitors": []
        },
        {
            "from_full": "traefik:1.7.5-alpine",
            "langs": [],
            "cmd": "",
            "from": "traefik",
            "cmd_keywords": [],
            "buses": [],
            "keywords": [
                "json",
                "acme",
                "chmod"
            ],
            "discos": [
                "traefik"
            ],
            "path": "/traefik/Dockerfile",
            "gates": [],
            "dbs": [],
            "servers": [],
            "monitors": []
        },
        {
            "from_full": "php:latest",
            "langs": [
                "php"
            ],
            "cmd": "bash -c 'BEANSTALK_SERVERS=$BEANSTALKD_PORT_11300_TCP_ADDR:11300 php -S 0.0.0.0:2080 -t /source/public'",
            "from": "php",
            "cmd_keywords": [
                "beanstalk",
                "addr",
                "tcp",
                "php",
                "bash"
            ],
            "buses": [],
            "keywords": [
                "apt",
                "get",
                "tmp",
                "curl",
                "var"
            ],
            "discos": [],
            "path": "/beanstalkd-console/Dockerfile",
            "gates": [],
            "dbs": [],
            "servers": [],
            "monitors": []
        },
        {
            "from_full": "mcr.microsoft.com/mssql/server:2017-latest-ubuntu",
            "langs": [],
            "cmd": "",
            "from": "mcr.microsoft.com/mssql/server",
            "cmd_keywords": [],
            "buses": [],
            "keywords": [],
            "discos": [],
            "path": "/mssql/Dockerfile",
            "gates": [],
            "dbs": [],
            "servers": [],
            "monitors": []
        },
        {
            "from_full": "minio/minio",
            "langs": [],
            "cmd": "",
            "from": "minio/minio",
            "cmd_keywords": [],
            "buses": [],
            "keywords": [],
            "discos": [],
            "path": "/minio/Dockerfile",
            "gates": [],
            "dbs": [],
            "servers": [],
            "monitors": []
        },
        {
            "from_full": "webdevops/apache:ubuntu-18.04",
            "langs": [],
            "cmd": "supervisord",
            "from": "webdevops/apache",
            "cmd_keywords": [
                "supervisord"
            ],
            "buses": [],
            "keywords": [],
            "discos": [],
            "path": "/apache2/Dockerfile",
            "gates": [],
            "dbs": [],
            "servers": [],
            "monitors": []
        },
        {
            "from_full": "djfarrelly/maildev",
            "langs": [],
            "cmd": "",
            "from": "djfarrelly/maildev",
            "cmd_keywords": [],
            "buses": [],
            "keywords": [],
            "discos": [],
            "path": "/maildev/Dockerfile",
            "gates": [],
            "dbs": [],
            "servers": [],
            "monitors": []
        },
        {
            "from_full": "rabbitmq:alpine",
            "langs": [],
            "cmd": "",
            "from": "rabbitmq",
            "cmd_keywords": [],
            "buses": [
                "rabbitmq"
            ],
            "keywords": [
                "rabbitmq",
                "enable",
                "management",
                "offline",
                "plugins"
            ],
            "discos": [],
            "path": "/rabbitmq/Dockerfile",
            "gates": [],
            "dbs": [],
            "servers": [],
            "monitors": []
        },
        {
            "from_full": "alpine",
            "langs": [],
            "cmd": "",
            "from": "alpine",
            "cmd_keywords": [],
            "buses": [],
            "keywords": [
                "apk",
                "add",
                "cache",
                "beanstalkd"
            ],
            "discos": [],
            "path": "/beanstalkd/Dockerfile",
            "gates": [],
            "dbs": [],
            "servers": [],
            "monitors": []
        },
        {
            "from_full": "mdillon/postgis:latest",
            "langs": [],
            "cmd": "postgres",
            "from": "mdillon/postgis",
            "cmd_keywords": [
                "postgres"
            ],
            "buses": [],
            "keywords": [],
            "discos": [],
            "path": "/postgres-postgis/Dockerfile",
            "gates": [],
            "dbs": [],
            "servers": [],
            "monitors": []
        },
        {
            "from_full": "python:slim",
            "langs": [
                "python"
            ],
            "cmd": "",
            "from": "python",
            "cmd_keywords": [],
            "buses": [],
            "keywords": [
                "root",
                "get",
                "chmod",
                "install",
                "ssh"
            ],
            "discos": [],
            "path": "/aws-eb-cli/Dockerfile",
            "gates": [],
            "dbs": [],
            "servers": [],
            "monitors": []
        },
        {
            "from_full": "phpmyadmin/phpmyadmin",
            "langs": [
                "php"
            ],
            "cmd": "",
            "from": "phpmyadmin/phpmyadmin",
            "cmd_keywords": [],
            "buses": [],
            "keywords": [
                "php",
                "etc",
                "usr",
                "local",
                "ini"
            ],
            "discos": [],
            "path": "/phpmyadmin/Dockerfile",
            "gates": [],
            "dbs": [
                "max"
            ],
            "servers": [],
            "monitors": []
        },
        {
            "from_full": "phusion/baseimage:latest",
            "langs": [],
            "cmd": "",
            "from": "phusion/baseimage",
            "cmd_keywords": [],
            "buses": [],
            "keywords": [
                "apt",
                "get",
                "install",
                "letsencrypt",
                "update"
            ],
            "discos": [],
            "path": "/certbot/Dockerfile",
            "gates": [],
            "dbs": [],
            "servers": [],
            "monitors": []
        },
        {
            "from_full": "laradock/php-fpm:${BASE_IMAGE_TAG_PREFIX}-${LARADOCK_PHP_VERSION}",
            "langs": [
                "php"
            ],
            "cmd": "php-fpm",
            "from": "laradock/php-fpm",
            "cmd_keywords": [
                "php",
                "fpm"
            ],
            "buses": [
                "amqp"
            ],
            "path": "/php-fpm/Dockerfile",
            "discos": [],
            "gates": [],
            "dbs": [
                "postgresql"
            ],
            "keywords": [
                "install",
                "php",
                "then",
                "true",
                "apt"
            ],
            "servers": [],
            "monitors": []
        },
        {
            "from_full": "docker.elastic.co/elasticsearch/elasticsearch:${ELK_VERSION}",
            "langs": [],
            "cmd": "",
            "from": "docker.elastic.co/elasticsearch/elasticsearch",
            "cmd_keywords": [],
            "buses": [],
            "path": "/elasticsearch/Dockerfile",
            "discos": [],
            "gates": [],
            "dbs": [],
            "keywords": [],
            "servers": [],
            "monitors": []
        },
        {
            "from_full": "rethinkdb:latest",
            "langs": [
                "python"
            ],
            "cmd": "rethinkdb --bind all",
            "from": "rethinkdb",
            "cmd_keywords": [
                "rethinkdb",
                "all",
                "bind"
            ],
            "buses": [],
            "keywords": [
                "apt",
                "get",
                "rethinkdb",
                "conf",
                "install"
            ],
            "discos": [],
            "path": "/rethinkdb/Dockerfile",
            "gates": [],
            "dbs": [
                "rethinkdb"
            ],
            "servers": [],
            "monitors": []
        },
        {
            "from_full": "theiaide/theia",
            "langs": [],
            "cmd": "",
            "from": "theiaide/theia",
            "cmd_keywords": [],
            "buses": [],
            "keywords": [
                "max",
                "user",
                "inotify",
                "watches",
                "echo"
            ],
            "discos": [],
            "path": "/ide-theia/Dockerfile",
            "gates": [],
            "dbs": [
                "max"
            ],
            "servers": [],
            "monitors": []
        },
        {
            "from_full": "node:alpine",
            "langs": [
                "python"
            ],
            "cmd": "npm start --force",
            "from": "node",
            "cmd_keywords": [
                "force",
                "npm",
                "start"
            ],
            "buses": [],
            "keywords": [
                "python",
                "usr",
                "build",
                "src",
                "mkdir"
            ],
            "discos": [],
            "path": "/laravel-echo-server/Dockerfile",
            "gates": [],
            "dbs": [],
            "servers": [
                "node"
            ],
            "monitors": []
        },
        {
            "from_full": "erikdubbelboer/phpredisadmin",
            "langs": [],
            "cmd": "",
            "from": "erikdubbelboer/phpredisadmin",
            "cmd_keywords": [],
            "buses": [],
            "keywords": [],
            "discos": [],
            "path": "/redis-webui/Dockerfile",
            "gates": [],
            "dbs": [],
            "servers": [],
            "monitors": []
        },
        {
            "from_full": "python",
            "langs": [
                "python"
            ],
            "cmd": "sh -c jupyterhub upgrade-db && jupyterhub -f /jupyterhub_config.py",
            "from": "python",
            "cmd_keywords": [
                "jupyterhub",
                "config",
                "upgrade"
            ],
            "buses": [],
            "keywords": [
                "install",
                "pip",
                "psycopg",
                "apt",
                "https"
            ],
            "discos": [],
            "path": "/jupyterhub/Dockerfile",
            "gates": [],
            "dbs": [],
            "servers": [],
            "monitors": []
        },
        {
            "from_full": "manticoresearch/manticore",
            "langs": [],
            "cmd": "",
            "from": "manticoresearch/manticore",
            "cmd_keywords": [],
            "buses": [],
            "keywords": [],
            "discos": [],
            "path": "/manticore/Dockerfile",
            "gates": [],
            "dbs": [],
            "servers": [],
            "monitors": []
        },
        {
            "from_full": "laradock/workspace:${BASE_IMAGE_TAG_PREFIX}-${LARADOCK_PHP_VERSION}",
            "langs": [
                "php"
            ],
            "cmd": "",
            "from": "laradock/workspace",
            "cmd_keywords": [],
            "buses": [
                "amqp"
            ],
            "path": "/workspace/Dockerfile",
            "discos": [
                "envoy"
            ],
            "gates": [],
            "dbs": [
                "mysql"
            ],
            "keywords": [
                "php",
                "install",
                "then",
                "apt",
                "version"
            ],
            "servers": [
                "node"
            ],
            "monitors": []
        },
        {
            "from_full": "abiosoft/caddy:no-stats",
            "langs": [],
            "cmd": "--conf /etc/caddy/Caddyfile --log stdout --agree=true",
            "from": "abiosoft/caddy",
            "cmd_keywords": [
                "true",
                "conf",
                "stdout",
                "etc",
                "agree"
            ],
            "buses": [],
            "keywords": [],
            "discos": [],
            "path": "/caddy/Dockerfile",
            "gates": [],
            "dbs": [],
            "servers": [
                "caddy"
            ],
            "monitors": []
        },
        {
            "from_full": "mailhog/mailhog",
            "langs": [],
            "cmd": "Mailhog",
            "from": "mailhog/mailhog",
            "cmd_keywords": [
                "mailhog"
            ],
            "buses": [],
            "keywords": [],
            "discos": [],
            "path": "/mailhog/Dockerfile",
            "gates": [],
            "dbs": [],
            "servers": [],
            "monitors": []
        }
    ],
    "gates": [
        "nginx"
    ],
    "num_services": 84,
    "images": [
        "mongo",
        "rabbitmq",
        "mdillon/postgis",
        "apsl/thumbor",
        "graylog/graylog",
        "php",
        "tpires/neo4j",
        "mysql",
        "grokzen/redis-cluster",
        "zookeeper",
        "ubuntu",
        "adminer",
        "djfarrelly/maildev",
        "docker.elastic.co/elasticsearch/elasticsearch",
        "traefik",
        "registry",
        "laradock/php-fpm",
        "erikdubbelboer/phpredisadmin",
        "phpmyadmin/phpmyadmin",
        "varnish",
        "bats-jenkins",
        "selenium/standalone-chrome",
        "konradkleine/docker-registry-frontend",
        "memcached",
        "gitlab/gitlab-ce",
        "couchdb",
        "dockercloud/haproxy",
        "solr",
        "alpine",
        "artefactual/gearmand",
        "node",
        "eclipse-mosquitto",
        "bats-jenkins-install-plugins",
        "theiaide/theia",
        "docker.elastic.co/kibana/kibana",
        "bitnami/cassandra",
        "linuxserver/codiad",
        "grafana/grafana",
        "aerospike",
        "manticoresearch/manticore",
        "mariadb",
        "portainer/portainer",
        "mongoclient/mongoclient",
        "openjdk",
        "docker.elastic.co/logstash/logstash",
        "webide/webide",
        "redis",
        "percona",
        "webdevops/apache",
        "phusion/baseimage",
        "minio/minio",
        "laradock/workspace",
        "nginx",
        "mcr.microsoft.com/mssql/server",
        "rethinkdb",
        "python",
        "postgres",
        "sonarqube",
        "abiosoft/caddy",
        "mailhog/mailhog"
    ],
    "monitors": [
        "grafana",
        "elk"
    ],
    "langs": [
        "shell",
        "php",
        "dockerfile",
        "python",
        "vcl",
        "java",
        "bash"
    ]
}