{
    "buses": [
        "amqp"
    ],
    "avg_size_service": 457.7,
    "num_dbs": 2,
    "num_services": 0,
    "langs": [
        "java"
    ],
    "num_langs": 1,
    "structure": {
        "path": [],
        "services": [],
        "detected_dbs": {
            "shared_dbs": false,
            "names": [],
            "num": 0,
            "services": []
        },
        "num_services": 0
    },
    "shared_dbs": false,
    "num_buses": 1,
    "dockers": [
        {
            "buses": [],
            "from_full": "openjdk:8u111-jre-alpine",
            "cmd": "",
            "from": "openjdk",
            "path": "/Source sa yt/blog-microservices-master/microservices/core/review-service/Dockerfile",
            "langs": [],
            "monitors": [],
            "cmd_keywords": [],
            "discos": [],
            "keywords": [],
            "dbs": [],
            "gates": [],
            "servers": []
        },
        {
            "buses": [],
            "from_full": "openjdk:8u111-jre-alpine",
            "cmd": "",
            "from": "openjdk",
            "path": "/Source sa yt/blog-microservices-master/microservices/core/product-service/Dockerfile",
            "langs": [],
            "monitors": [],
            "cmd_keywords": [],
            "discos": [],
            "keywords": [],
            "dbs": [],
            "gates": [],
            "servers": []
        },
        {
            "buses": [],
            "from_full": "openjdk:8u111-jre-alpine",
            "cmd": "",
            "from": "openjdk",
            "path": "/Source sa yt/blog-microservices-master/microservices/core/recommendation-service/Dockerfile",
            "langs": [],
            "monitors": [],
            "cmd_keywords": [],
            "discos": [],
            "keywords": [],
            "dbs": [],
            "gates": [],
            "servers": []
        },
        {
            "buses": [],
            "from_full": "openjdk:8u111-jre-alpine",
            "cmd": "",
            "from": "openjdk",
            "path": "/Source sa yt/blog-microservices-master/microservices/support/auth-server/Dockerfile",
            "langs": [],
            "monitors": [],
            "cmd_keywords": [],
            "discos": [],
            "keywords": [],
            "dbs": [],
            "gates": [],
            "servers": []
        },
        {
            "buses": [],
            "from_full": "openjdk:8u111-jre-alpine",
            "cmd": "",
            "from": "openjdk",
            "path": "/Source sa yt/blog-microservices-master/microservices/support/discovery-server/Dockerfile",
            "langs": [],
            "monitors": [],
            "cmd_keywords": [],
            "discos": [],
            "keywords": [],
            "dbs": [],
            "gates": [],
            "servers": []
        },
        {
            "buses": [],
            "from_full": "openjdk:8u111-jre-alpine",
            "cmd": "",
            "from": "openjdk",
            "path": "/Source sa yt/blog-microservices-master/microservices/support/edge-server/Dockerfile",
            "langs": [],
            "monitors": [],
            "cmd_keywords": [],
            "discos": [],
            "keywords": [],
            "dbs": [],
            "gates": [],
            "servers": []
        },
        {
            "buses": [],
            "from_full": "openjdk:8u111-jre-alpine",
            "cmd": "",
            "from": "openjdk",
            "path": "/Source sa yt/blog-microservices-master/microservices/support/config-server/Dockerfile",
            "langs": [],
            "monitors": [],
            "cmd_keywords": [],
            "discos": [],
            "keywords": [],
            "dbs": [],
            "gates": [],
            "servers": []
        },
        {
            "buses": [],
            "from_full": "openjdk:8u111-jre-alpine",
            "cmd": "",
            "from": "openjdk",
            "path": "/Source sa yt/blog-microservices-master/microservices/support/zipkin-server/Dockerfile",
            "langs": [],
            "monitors": [],
            "cmd_keywords": [],
            "discos": [],
            "keywords": [],
            "dbs": [],
            "gates": [],
            "servers": []
        },
        {
            "buses": [],
            "from_full": "openjdk:8u111-jre-alpine",
            "cmd": "",
            "from": "openjdk",
            "path": "/Source sa yt/blog-microservices-master/microservices/support/monitor-dashboard/Dockerfile",
            "langs": [],
            "monitors": [],
            "cmd_keywords": [],
            "discos": [],
            "keywords": [],
            "dbs": [],
            "gates": [],
            "servers": []
        },
        {
            "buses": [],
            "from_full": "openjdk:8u111-jre-alpine",
            "cmd": "",
            "from": "openjdk",
            "path": "/Source sa yt/blog-microservices-master/microservices/composite/product-composite-service/Dockerfile",
            "langs": [],
            "monitors": [],
            "cmd_keywords": [],
            "discos": [],
            "keywords": [],
            "dbs": [],
            "gates": [],
            "servers": []
        }
    ],
    "dbs": [
        "postgresql",
        "mysql"
    ],
    "languages": [
        "java"
    ],
    "gates": [
        "zuul"
    ],
    "servers": [
        "spring",
        "tomcat"
    ],
    "num_gates": 1,
    "name": "apolonis/java",
    "num_monitors": 1,
    "monitors": [
        "turbine"
    ],
    "discos": [
        "eureka"
    ],
    "files": [
        {
            "buses": [
                "amqp"
            ],
            "discos": [
                "eureka"
            ],
            "dbs": [],
            "servers": [
                "spring",
                "tomcat"
            ],
            "path": "/Source sa yt/blog-microservices-master/microservices/core/review-service/build.gradle",
            "gates": [],
            "monitors": []
        },
        {
            "buses": [
                "amqp"
            ],
            "discos": [
                "eureka"
            ],
            "dbs": [],
            "servers": [
                "spring",
                "tomcat"
            ],
            "path": "/Source sa yt/blog-microservices-master/microservices/core/product-service/build.gradle",
            "gates": [],
            "monitors": []
        },
        {
            "buses": [
                "amqp"
            ],
            "discos": [
                "eureka"
            ],
            "dbs": [],
            "servers": [
                "spring",
                "tomcat"
            ],
            "path": "/Source sa yt/blog-microservices-master/microservices/core/recommendation-service/build.gradle",
            "gates": [],
            "monitors": []
        },
        {
            "buses": [
                "amqp"
            ],
            "discos": [],
            "dbs": [],
            "servers": [
                "spring",
                "tomcat"
            ],
            "path": "/Source sa yt/blog-microservices-master/microservices/support/auth-server/build.gradle",
            "gates": [],
            "monitors": []
        },
        {
            "buses": [],
            "discos": [
                "eureka"
            ],
            "dbs": [],
            "servers": [
                "spring",
                "tomcat"
            ],
            "path": "/Source sa yt/blog-microservices-master/microservices/support/discovery-server/build.gradle",
            "gates": [],
            "monitors": []
        },
        {
            "buses": [
                "amqp"
            ],
            "discos": [
                "eureka"
            ],
            "dbs": [],
            "servers": [
                "spring",
                "tomcat"
            ],
            "path": "/Source sa yt/blog-microservices-master/microservices/support/edge-server/build.gradle",
            "gates": [
                "zuul"
            ],
            "monitors": []
        },
        {
            "buses": [
                "amqp"
            ],
            "discos": [
                "eureka"
            ],
            "dbs": [],
            "servers": [
                "spring",
                "tomcat"
            ],
            "path": "/Source sa yt/blog-microservices-master/microservices/support/config-server/build.gradle",
            "gates": [],
            "monitors": []
        },
        {
            "buses": [],
            "discos": [],
            "dbs": [],
            "servers": [
                "spring"
            ],
            "path": "/Source sa yt/blog-microservices-master/microservices/support/zipkin-server/build.gradle",
            "gates": [],
            "monitors": []
        },
        {
            "buses": [
                "amqp"
            ],
            "discos": [],
            "dbs": [],
            "servers": [
                "spring",
                "tomcat"
            ],
            "path": "/Source sa yt/blog-microservices-master/microservices/support/turbine/build.gradle",
            "gates": [],
            "monitors": [
                "turbine"
            ]
        },
        {
            "buses": [
                "amqp"
            ],
            "discos": [],
            "dbs": [],
            "servers": [
                "spring",
                "tomcat"
            ],
            "path": "/Source sa yt/blog-microservices-master/microservices/support/monitor-dashboard/build.gradle",
            "gates": [],
            "monitors": []
        },
        {
            "buses": [
                "amqp"
            ],
            "discos": [
                "eureka"
            ],
            "dbs": [],
            "servers": [
                "spring",
                "tomcat"
            ],
            "path": "/Source sa yt/blog-microservices-master/microservices/composite/product-composite-service/build.gradle",
            "gates": [],
            "monitors": []
        },
        {
            "buses": [],
            "discos": [],
            "dbs": [],
            "servers": [
                "spring"
            ],
            "path": "/Source sa yt/blog-microservices-master/util/build.gradle",
            "gates": [],
            "monitors": []
        },
        {
            "buses": [],
            "discos": [],
            "dbs": [
                "mysql"
            ],
            "servers": [
                "spring"
            ],
            "path": "/lll/spring-boot-jwt-JPA/pom.xml",
            "gates": [],
            "monitors": []
        },
        {
            "buses": [],
            "discos": [],
            "dbs": [
                "mysql"
            ],
            "servers": [
                "spring"
            ],
            "path": "/Spring and jwt practice/example/pom.xml",
            "gates": [],
            "monitors": []
        },
        {
            "buses": [],
            "discos": [],
            "dbs": [
                "mysql"
            ],
            "servers": [
                "spring"
            ],
            "path": "/Spring and jwt practice/Spring JWT backup/spring-boot-jwt-JPA/pom.xml",
            "gates": [],
            "monitors": []
        },
        {
            "buses": [],
            "discos": [],
            "dbs": [
                "mysql"
            ],
            "servers": [
                "spring"
            ],
            "path": "/Spring and jwt practice/Backup 13.9/spring-boot-jwt-JPA/pom.xml",
            "gates": [],
            "monitors": []
        },
        {
            "buses": [],
            "discos": [],
            "dbs": [
                "mysql"
            ],
            "servers": [
                "spring"
            ],
            "path": "/Spring and jwt practice/New folder (2)/spring-boot-jwt-JPA/pom.xml",
            "gates": [],
            "monitors": []
        },
        {
            "buses": [],
            "discos": [],
            "dbs": [
                "mysql"
            ],
            "servers": [
                "spring"
            ],
            "path": "/Spring and jwt practice/BACKUP/lll/spring-boot-jwt-JPA/pom.xml",
            "gates": [],
            "monitors": []
        },
        {
            "buses": [],
            "discos": [],
            "dbs": [
                "mysql"
            ],
            "servers": [
                "spring"
            ],
            "path": "/Spring and jwt practice/BACKUP/Backup 13.9/spring-boot-jwt-JPA/pom.xml",
            "gates": [],
            "monitors": []
        },
        {
            "buses": [],
            "discos": [],
            "dbs": [
                "mysql"
            ],
            "servers": [
                "spring"
            ],
            "path": "/Spring and jwt practice/BACKUP/13.9.ver.1.1/spring-boot-jwt-JPA/pom.xml",
            "gates": [],
            "monitors": []
        },
        {
            "buses": [],
            "discos": [],
            "dbs": [
                "mysql"
            ],
            "servers": [
                "spring"
            ],
            "path": "/Spring and jwt practice/spring-boot-jwt-JPA/pom.xml",
            "gates": [],
            "monitors": []
        },
        {
            "buses": [],
            "discos": [],
            "dbs": [
                "postgresql"
            ],
            "servers": [
                "spring"
            ],
            "path": "/Spring and jwt practice/marko/marko/demo/pom.xml",
            "gates": [],
            "monitors": []
        },
        {
            "buses": [],
            "discos": [],
            "dbs": [
                "mysql"
            ],
            "servers": [
                "spring"
            ],
            "path": "/Spring and jwt practice/New folder/Spring boot JWT/pom.xml",
            "gates": [],
            "monitors": []
        },
        {
            "buses": [],
            "discos": [],
            "dbs": [
                "mysql"
            ],
            "servers": [
                "spring"
            ],
            "path": "/Spring and jwt practice/New folder/spring-boot-jwt-JPA/pom.xml",
            "gates": [],
            "monitors": []
        },
        {
            "buses": [],
            "discos": [],
            "dbs": [
                "mysql"
            ],
            "servers": [
                "spring"
            ],
            "path": "/Spring and jwt practice/learnrest/pom.xml",
            "gates": [],
            "monitors": []
        },
        {
            "buses": [],
            "discos": [],
            "dbs": [
                "mysql"
            ],
            "servers": [
                "spring"
            ],
            "path": "/Spring and jwt practice/13.9.ver.1.1/spring-boot-jwt-JPA/pom.xml",
            "gates": [],
            "monitors": []
        },
        {
            "buses": [],
            "discos": [
                "eureka"
            ],
            "dbs": [],
            "servers": [
                "spring"
            ],
            "path": "/Eureka server - mikroservisi/server/demo/pom.xml",
            "gates": [],
            "monitors": []
        },
        {
            "buses": [],
            "discos": [
                "eureka"
            ],
            "dbs": [],
            "servers": [
                "spring"
            ],
            "path": "/Eureka server - mikroservisi/Klijent/demo/pom.xml",
            "gates": [],
            "monitors": []
        },
        {
            "buses": [],
            "discos": [],
            "dbs": [],
            "servers": [
                "spring"
            ],
            "path": "/Source sa yt/Mikroservisi youtube example/db-services/pom.xml",
            "gates": [],
            "monitors": []
        },
        {
            "buses": [],
            "discos": [
                "eureka"
            ],
            "dbs": [
                "mysql"
            ],
            "servers": [
                "spring"
            ],
            "path": "/Source sa yt/stock-price-viewer-microservices-part1-master/db-service/pom.xml",
            "gates": [],
            "monitors": []
        },
        {
            "buses": [],
            "discos": [
                "eureka"
            ],
            "dbs": [],
            "servers": [
                "spring"
            ],
            "path": "/Source sa yt/stock-price-viewer-microservices-part1-master/stock-service/pom.xml",
            "gates": [],
            "monitors": []
        },
        {
            "buses": [],
            "discos": [
                "eureka"
            ],
            "dbs": [],
            "servers": [
                "spring"
            ],
            "path": "/Source sa yt/stock-price-viewer-microservices-part1-master/eureka-service/pom.xml",
            "gates": [],
            "monitors": []
        },
        {
            "buses": [],
            "discos": [],
            "dbs": [],
            "servers": [
                "spring"
            ],
            "path": "/Mikroservisi javabrains/movie-catalog-service/pom.xml",
            "gates": [],
            "monitors": []
        },
        {
            "buses": [],
            "discos": [
                "eureka"
            ],
            "dbs": [],
            "servers": [
                "spring"
            ],
            "path": "/Mikroservisi javabrains/movie-info-service/pom.xml",
            "gates": [],
            "monitors": []
        },
        {
            "buses": [],
            "discos": [
                "eureka"
            ],
            "dbs": [],
            "servers": [
                "spring"
            ],
            "path": "/Mikroservisi javabrains/discovery-server/pom.xml",
            "gates": [],
            "monitors": []
        },
        {
            "buses": [],
            "discos": [],
            "dbs": [],
            "servers": [
                "spring"
            ],
            "path": "/Mikroservisi javabrains/ratings-data-service/pom.xml",
            "gates": [],
            "monitors": []
        },
        {
            "buses": [],
            "discos": [],
            "dbs": [
                "postgresql",
                "mysql"
            ],
            "servers": [
                "spring"
            ],
            "path": "/Spring jwt good/spring-boot-jwt-JPA/pom.xml",
            "gates": [],
            "monitors": []
        }
    ],
    "size": 4577,
    "num_dockers": 10,
    "num_files": 48,
    "url": "git://github.com/apolonis/java.git",
    "num_servers": 2,
    "images": [
        "openjdk"
    ],
    "num_discos": 1
}