{
    "size": 140719,
    "shared_dbs": false,
    "num_servers": 2,
    "name": "ponomarevandrey/programming-sandbox",
    "files": [
        {
            "gates": [],
            "dbs": [],
            "buses": [],
            "servers": [
                "express"
            ],
            "path": "/code/nodejs/express-authorization-(session-based)/app1/package.json",
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "dbs": [],
            "buses": [],
            "servers": [
                "express"
            ],
            "path": "/code/nodejs/express-authorization-and-authentication-(microservice-way)/services/user-auth/package.json",
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "dbs": [],
            "buses": [],
            "servers": [
                "express"
            ],
            "path": "/code/nodejs/express-authorization-and-authentication-(microservice-way)/app1/package.json",
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "dbs": [
                "redis"
            ],
            "buses": [],
            "servers": [
                "express"
            ],
            "path": "/code/nodejs/express-authentication-(session-based)/app1/package.json",
            "monitors": [],
            "discos": []
        },
        {
            "gates": [
                "gateway"
            ],
            "dbs": [],
            "buses": [],
            "servers": [
                "express"
            ],
            "path": "/code/nodejs/api-gateway/package.json",
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "dbs": [],
            "buses": [],
            "servers": [
                "express"
            ],
            "path": "/code/nodejs/express-debug-module/package.json",
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "dbs": [],
            "buses": [],
            "servers": [],
            "path": "/code/nodejs/winston-module/package.json",
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "dbs": [],
            "buses": [],
            "servers": [
                "express"
            ],
            "path": "/code/nodejs/express-custom-error-handlers/notes-app/package.json",
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "dbs": [],
            "buses": [],
            "servers": [
                "express"
            ],
            "path": "/code/nodejs/express-sessions/package.json",
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "dbs": [],
            "buses": [],
            "servers": [
                "express"
            ],
            "path": "/code/nodejs/testing/testing-with-spies-stubs-mocks-and-async-code-and-more/package.json",
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "dbs": [],
            "buses": [],
            "servers": [],
            "path": "/code/nodejs/testing/testing-with-spies-stubs-mocks-and-async-code-and-more/tests/package.json",
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "dbs": [],
            "buses": [],
            "servers": [
                "express",
                "node"
            ],
            "path": "/code/nodejs/testing/api-testing-using-supertest/package.json",
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "dbs": [],
            "buses": [],
            "servers": [
                "express"
            ],
            "path": "/code/nodejs/testing/api-testing-using-supertest/tests/package.json",
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "dbs": [],
            "buses": [],
            "servers": [
                "express"
            ],
            "path": "/code/nodejs/socketsio/package.json",
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "dbs": [],
            "buses": [],
            "servers": [
                "express",
                "node"
            ],
            "path": "/code/nodejs/node-api-in-memory-storage/package.json",
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "dbs": [],
            "buses": [],
            "servers": [
                "express"
            ],
            "path": "/code/nodejs/express-backend-rendering/package.json",
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "dbs": [],
            "buses": [],
            "servers": [
                "express"
            ],
            "path": "/code/nodejs/express-bcrypt/package.json",
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "dbs": [
                "sqlite",
                "mysql"
            ],
            "buses": [],
            "servers": [],
            "path": "/code/nodejs/notes-app/notes-5_chap10_deployment/users/package.json",
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "dbs": [],
            "buses": [],
            "servers": [],
            "path": "/code/nodejs/notes-app/notes-5_chap10_deployment/init_deployment-with-pm2/package.json",
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "dbs": [
                "sqlite",
                "mysql",
                "postgresql"
            ],
            "buses": [],
            "servers": [
                "node"
            ],
            "path": "/code/nodejs/notes-app/notes-3_chap08_postgres_and_authentication/users/package.json",
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "dbs": [
                "sqlite",
                "mysql",
                "postgresql"
            ],
            "buses": [],
            "servers": [
                "node"
            ],
            "path": "/code/nodejs/notes-app/notes-5_chap11_testing/users/package.json",
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "dbs": [],
            "buses": [],
            "servers": [],
            "path": "/code/nodejs/notes-app/notes-5_chap11_testing/init/package.json",
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "dbs": [
                "postgresql",
                "mongo",
                "sqlite",
                "mysql",
                "mongodb",
                "sql"
            ],
            "buses": [],
            "servers": [
                "express",
                "node"
            ],
            "path": "/code/nodejs/notes-app/notes-2_chap07/package.json",
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "dbs": [
                "sqlite",
                "mysql",
                "postgresql"
            ],
            "buses": [],
            "servers": [
                "node"
            ],
            "path": "/code/nodejs/notes-app/notes-4_chap09_websockets/users/package.json",
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "dbs": [
                "postgresql"
            ],
            "buses": [],
            "servers": [
                "express",
                "node"
            ],
            "path": "/code/nodejs/node-api-postgres/package.json",
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "dbs": [
                "max"
            ],
            "buses": [],
            "servers": [
                "express",
                "node"
            ],
            "path": "/code/nodejs/fibonacci/package.json",
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "dbs": [],
            "buses": [],
            "servers": [],
            "path": "/code/nodejs/axios/app2/package.json",
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "dbs": [],
            "buses": [],
            "servers": [
                "express"
            ],
            "path": "/code/nodejs/axios/app1/package.json",
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "dbs": [],
            "buses": [],
            "servers": [
                "express",
                "node"
            ],
            "path": "/code/nodejs/express-logging-and-error-handling/notes-app/package.json",
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "dbs": [],
            "buses": [],
            "servers": [],
            "path": "/code/nodejs/timestamp-microservice-app/package.json",
            "monitors": [],
            "discos": []
        },
        {
            "gates": [],
            "dbs": [],
            "buses": [],
            "servers": [
                "express"
            ],
            "path": "/code/nodejs/cors-tutorial/package.json",
            "monitors": [],
            "discos": []
        }
    ],
    "num_files": 37,
    "num_langs": 2,
    "dbs": [
        "postgresql",
        "max",
        "mongo",
        "sqlite",
        "mysql",
        "redis",
        "sql"
    ],
    "servers": [
        "express",
        "node"
    ],
    "num_discos": 0,
    "url": "git://github.com/ponomarevandrey/programming-sandbox.git",
    "gates": [
        "nginx"
    ],
    "structure": {
        "services": [
            {
                "image": "postgres",
                "dbs": [],
                "image_full": "postgres",
                "buses": [],
                "servers": [],
                "monitors": [],
                "name": "postgres-db",
                "gates": [],
                "discos": [],
                "depends_on": []
            },
            {
                "image": "./app1",
                "dbs": [],
                "image_full": "./app1",
                "buses": [],
                "servers": [],
                "monitors": [],
                "name": "nodejs-app1",
                "gates": [],
                "discos": [],
                "depends_on": []
            }
        ],
        "num_services": 2,
        "detected_dbs": {
            "num": 0,
            "names": [],
            "services": [],
            "shared_dbs": false
        },
        "path": "/code/nodejs/express-authorization-(session-based)/docker-compose.yml"
    },
    "num_gates": 1,
    "num_dockers": 5,
    "num_dbs": 7,
    "num_services": 2,
    "langs": [
        "html",
        "php"
    ],
    "buses": [],
    "num_buses": 0,
    "num_monitors": 0,
    "languages": [
        "php",
        "html"
    ],
    "dockers": [
        {
            "cmd_keywords": [
                "npm",
                "run",
                "start"
            ],
            "cmd": "npm run start",
            "gates": [],
            "buses": [],
            "langs": [],
            "from": "node",
            "monitors": [],
            "from_full": "node:alpine",
            "servers": [
                "node"
            ],
            "path": "/code/nodejs/express-authorization-(session-based)/app1/Dockerfile",
            "dbs": [],
            "keywords": [
                "npm",
                "install"
            ],
            "discos": []
        },
        {
            "cmd_keywords": [
                "npm",
                "run",
                "start"
            ],
            "cmd": "npm run start",
            "gates": [],
            "buses": [],
            "langs": [],
            "from": "node",
            "monitors": [],
            "from_full": "node:alpine",
            "servers": [
                "node"
            ],
            "path": "/code/nodejs/express-authorization-and-authentication-(microservice-way)/services/user-auth/Dockerfile",
            "dbs": [],
            "keywords": [
                "npm",
                "install"
            ],
            "discos": []
        },
        {
            "cmd_keywords": [
                "npm",
                "run",
                "start"
            ],
            "cmd": "npm run start",
            "gates": [],
            "buses": [],
            "langs": [],
            "from": "node",
            "monitors": [],
            "from_full": "node:alpine",
            "servers": [
                "node"
            ],
            "path": "/code/nodejs/express-authorization-and-authentication-(microservice-way)/app1/Dockerfile",
            "dbs": [],
            "keywords": [
                "npm",
                "install"
            ],
            "discos": []
        },
        {
            "cmd_keywords": [
                "npm",
                "run",
                "start"
            ],
            "cmd": "npm run start",
            "gates": [],
            "buses": [],
            "langs": [],
            "from": "node",
            "monitors": [],
            "from_full": "node:alpine",
            "servers": [
                "node"
            ],
            "path": "/code/nodejs/express-authentication-(session-based)/app1/Dockerfile",
            "dbs": [],
            "keywords": [
                "npm",
                "install"
            ],
            "discos": []
        },
        {
            "cmd_keywords": [
                "nginx",
                "off",
                "daemon"
            ],
            "cmd": "nginx -t; nginx -g 'daemon off;'",
            "gates": [
                "nginx"
            ],
            "buses": [],
            "langs": [],
            "from": "nginx",
            "monitors": [],
            "from_full": "nginx:alpine",
            "servers": [],
            "path": "/code/docker/nginx-playground/Dockerfile",
            "dbs": [],
            "keywords": [
                "data",
                "www",
                "exit",
                "addgroup",
                "set"
            ],
            "discos": []
        }
    ],
    "monitors": [],
    "avg_size_service": 28143.8,
    "discos": [],
    "images": [
        "nginx",
        "node"
    ]
}